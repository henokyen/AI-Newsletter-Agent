{
    "id": "c8cc6ffc01d5ea21446dcbd74cea5239",
    "metadata": {
        "id": "c8cc6ffc01d5ea21446dcbd74cea5239",
        "url": "https://github.com/huggingface/text-generation-inference/",
        "title": "GitHub - huggingface/text-generation-inference: Large Language Model Text Generation Inference",
        "properties": {
            "description": "Large Language Model Text Generation Inference. Contribute to huggingface/text-generation-inference development by creating an account on GitHub.",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/99be1a27a56a031a38f83ac97cea797f26534d364966e396205df68ebb0ab87f/huggingface/text-generation-inference",
            "og:image:alt": "Large Language Model Text Generation Inference. Contribute to huggingface/text-generation-inference development by creating an account on GitHub.",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - huggingface/text-generation-inference: Large Language Model Text Generation Inference",
            "og:url": "https://github.com/huggingface/text-generation-inference",
            "og:description": "Large Language Model Text Generation Inference. Contribute to huggingface/text-generation-inference development by creating an account on GitHub.",
            "twitter:image": "https://opengraph.githubassets.com/99be1a27a56a031a38f83ac97cea797f26534d364966e396205df68ebb0ab87f/huggingface/text-generation-inference",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - huggingface/text-generation-inference: Large Language Model Text Generation Inference",
            "twitter:description": "Large Language Model Text Generation Inference. Contribute to huggingface/text-generation-inference development by creating an account on GitHub."
        }
    },
    "parent_metadata": {
        "id": "84fa617a6d39bebe09d0ae079e6dd410",
        "url": "https://www.notion.so/Inference-Engines-84fa617a6d39bebe09d0ae079e6dd410",
        "title": "Inference Engines",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](https://github.com/huggingface/text-generation-inference/#start-of-content)\n## Navigation Menu\nToggle navigation\n[ ](https://github.com/)\n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fhuggingface%2Ftext-generation-inference%2F)\n  * Product \n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n  * Solutions \nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](https://github.com/solutions/industry/nonprofits)\nBy use case\n    * [ DevSecOps ](https://github.com/solutions/use-case/devsecops)\n    * [ DevOps ](https://github.com/solutions/use-case/devops)\n    * [ CI/CD ](https://github.com/solutions/use-case/ci-cd)\n    * [ View all use cases ](https://github.com/solutions/use-case)\nBy industry\n    * [ Healthcare ](https://github.com/solutions/industry/healthcare)\n    * [ Financial services ](https://github.com/solutions/industry/financial-services)\n    * [ Manufacturing ](https://github.com/solutions/industry/manufacturing)\n    * [ Government ](https://github.com/solutions/industry/government)\n    * [ View all industries ](https://github.com/solutions/industry)\n[ View all solutions ](https://github.com/solutions)\n  * Resources \nTopics\n    * [ AI ](https://github.com/resources/articles/ai)\n    * [ DevOps ](https://github.com/resources/articles/devops)\n    * [ Security ](https://github.com/resources/articles/security)\n    * [ Software Development ](https://github.com/resources/articles/software-development)\n    * [ View all ](https://github.com/resources/articles)\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ Events & Webinars ](https://resources.github.com)\n    * [ Ebooks & Whitepapers ](https://github.com/resources/whitepapers)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n  * Open Source \n    * [ GitHub Sponsors Fund open source developers  ](https://github.com/sponsors)\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n  * Enterprise \n    * [ Enterprise platform AI-powered developer platform  ](https://github.com/enterprise)\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ Copilot for business Enterprise-grade AI features  ](https://github.com/features/copilot/copilot-business)\n    * [ Premium Support Enterprise-grade 24/7 support  ](https://github.com/premium-support)\n  * [Pricing](https://github.com/pricing)\n\n\nSearch or jump to...\n# Search code, repositories, users, issues, pull requests...\nSearch \nClear\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n#  Provide feedback \nWe read every piece of feedback, and take your input very seriously.\nInclude my email address so I can be contacted\nCancel  Submit feedback \n#  Saved searches \n## Use saved searches to filter your results more quickly\nName\nQuery\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \nCancel  Create saved search \n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fhuggingface%2Ftext-generation-inference%2F)\n[ Sign up ](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=huggingface%2Ftext-generation-inference) Reseting focus\nYou signed in with another tab or window. [Reload](https://github.com/huggingface/text-generation-inference/) to refresh your session. You signed out in another tab or window. [Reload](https://github.com/huggingface/text-generation-inference/) to refresh your session. You switched accounts on another tab or window. [Reload](https://github.com/huggingface/text-generation-inference/) to refresh your session. Dismiss alert\n{{ message }}\n[ huggingface ](https://github.com/huggingface) / **[text-generation-inference](https://github.com/huggingface/text-generation-inference) ** Public\n  * [ Notifications ](https://github.com/login?return_to=%2Fhuggingface%2Ftext-generation-inference) You must be signed in to change notification settings\n  * [ Fork 1.2k ](https://github.com/login?return_to=%2Fhuggingface%2Ftext-generation-inference)\n  * [ Star  9.9k ](https://github.com/login?return_to=%2Fhuggingface%2Ftext-generation-inference)\n\n\nLarge Language Model Text Generation Inference \n[hf.co/docs/text-generation-inference](http://hf.co/docs/text-generation-inference \"http://hf.co/docs/text-generation-inference\")\n### License\n[ Apache-2.0 license ](https://github.com/huggingface/text-generation-inference/blob/main/LICENSE)\n[ 9.9k stars ](https://github.com/huggingface/text-generation-inference/stargazers) [ 1.2k forks ](https://github.com/huggingface/text-generation-inference/forks) [ Branches ](https://github.com/huggingface/text-generation-inference/branches) [ Tags ](https://github.com/huggingface/text-generation-inference/tags) [ Activity ](https://github.com/huggingface/text-generation-inference/activity)\n[ Star  ](https://github.com/login?return_to=%2Fhuggingface%2Ftext-generation-inference)\n[ Notifications ](https://github.com/login?return_to=%2Fhuggingface%2Ftext-generation-inference) You must be signed in to change notification settings\n  * [ Code ](https://github.com/huggingface/text-generation-inference)\n  * [ Issues 224 ](https://github.com/huggingface/text-generation-inference/issues)\n  * [ Pull requests 23 ](https://github.com/huggingface/text-generation-inference/pulls)\n  * [ Discussions ](https://github.com/huggingface/text-generation-inference/discussions)\n  * [ Actions ](https://github.com/huggingface/text-generation-inference/actions)\n  * [ Security ](https://github.com/huggingface/text-generation-inference/security)\n  * [ Insights ](https://github.com/huggingface/text-generation-inference/pulse)\n\n\nAdditional navigation options\n  * [ Code  ](https://github.com/huggingface/text-generation-inference)\n  * [ Issues  ](https://github.com/huggingface/text-generation-inference/issues)\n  * [ Pull requests  ](https://github.com/huggingface/text-generation-inference/pulls)\n  * [ Discussions  ](https://github.com/huggingface/text-generation-inference/discussions)\n  * [ Actions  ](https://github.com/huggingface/text-generation-inference/actions)\n  * [ Security  ](https://github.com/huggingface/text-generation-inference/security)\n  * [ Insights  ](https://github.com/huggingface/text-generation-inference/pulse)\n\n\n# huggingface/text-generation-inference\nmain\n[Branches](https://github.com/huggingface/text-generation-inference/branches)[Tags](https://github.com/huggingface/text-generation-inference/tags)\n[](https://github.com/huggingface/text-generation-inference/branches)[](https://github.com/huggingface/text-generation-inference/tags)\nGo to file\nCode\n## Folders and files\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n## Latest commit\n## History\n[1,346 Commits](https://github.com/huggingface/text-generation-inference/commits/main/)[](https://github.com/huggingface/text-generation-inference/commits/main/)  \n[.github](https://github.com/huggingface/text-generation-inference/tree/main/.github \".github\")| [.github](https://github.com/huggingface/text-generation-inference/tree/main/.github \".github\")  \n[assets](https://github.com/huggingface/text-generation-inference/tree/main/assets \"assets\")| [assets](https://github.com/huggingface/text-generation-inference/tree/main/assets \"assets\")  \n[backends](https://github.com/huggingface/text-generation-inference/tree/main/backends \"backends\")| [backends](https://github.com/huggingface/text-generation-inference/tree/main/backends \"backends\")  \n[benchmark](https://github.com/huggingface/text-generation-inference/tree/main/benchmark \"benchmark\")| [benchmark](https://github.com/huggingface/text-generation-inference/tree/main/benchmark \"benchmark\")  \n[clients/python](https://github.com/huggingface/text-generation-inference/tree/main/clients/python \"This path skips through empty directories\")| [clients/python](https://github.com/huggingface/text-generation-inference/tree/main/clients/python \"This path skips through empty directories\")  \n[docs](https://github.com/huggingface/text-generation-inference/tree/main/docs \"docs\")| [docs](https://github.com/huggingface/text-generation-inference/tree/main/docs \"docs\")  \n[integration-tests](https://github.com/huggingface/text-generation-inference/tree/main/integration-tests \"integration-tests\")| [integration-tests](https://github.com/huggingface/text-generation-inference/tree/main/integration-tests \"integration-tests\")  \n[launcher](https://github.com/huggingface/text-generation-inference/tree/main/launcher \"launcher\")| [launcher](https://github.com/huggingface/text-generation-inference/tree/main/launcher \"launcher\")  \n[load_tests](https://github.com/huggingface/text-generation-inference/tree/main/load_tests \"load_tests\")| [load_tests](https://github.com/huggingface/text-generation-inference/tree/main/load_tests \"load_tests\")  \n[nix](https://github.com/huggingface/text-generation-inference/tree/main/nix \"nix\")| [nix](https://github.com/huggingface/text-generation-inference/tree/main/nix \"nix\")  \n[proto](https://github.com/huggingface/text-generation-inference/tree/main/proto \"proto\")| [proto](https://github.com/huggingface/text-generation-inference/tree/main/proto \"proto\")  \n[router](https://github.com/huggingface/text-generation-inference/tree/main/router \"router\")| [router](https://github.com/huggingface/text-generation-inference/tree/main/router \"router\")  \n[server](https://github.com/huggingface/text-generation-inference/tree/main/server \"server\")| [server](https://github.com/huggingface/text-generation-inference/tree/main/server \"server\")  \n[.dockerignore](https://github.com/huggingface/text-generation-inference/blob/main/.dockerignore \".dockerignore\")| [.dockerignore](https://github.com/huggingface/text-generation-inference/blob/main/.dockerignore \".dockerignore\")  \n[.gitignore](https://github.com/huggingface/text-generation-inference/blob/main/.gitignore \".gitignore\")| [.gitignore](https://github.com/huggingface/text-generation-inference/blob/main/.gitignore \".gitignore\")  \n[.pre-commit-config.yaml](https://github.com/huggingface/text-generation-inference/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](https://github.com/huggingface/text-generation-inference/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")  \n[.redocly.lint-ignore.yaml](https://github.com/huggingface/text-generation-inference/blob/main/.redocly.lint-ignore.yaml \".redocly.lint-ignore.yaml\")| [.redocly.lint-ignore.yaml](https://github.com/huggingface/text-generation-inference/blob/main/.redocly.lint-ignore.yaml \".redocly.lint-ignore.yaml\")  \n[CODE_OF_CONDUCT.md](https://github.com/huggingface/text-generation-inference/blob/main/CODE_OF_CONDUCT.md \"CODE_OF_CONDUCT.md\")| [CODE_OF_CONDUCT.md](https://github.com/huggingface/text-generation-inference/blob/main/CODE_OF_CONDUCT.md \"CODE_OF_CONDUCT.md\")  \n[CONTRIBUTING.md](https://github.com/huggingface/text-generation-inference/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")| [CONTRIBUTING.md](https://github.com/huggingface/text-generation-inference/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")  \n[Cargo.lock](https://github.com/huggingface/text-generation-inference/blob/main/Cargo.lock \"Cargo.lock\")| [Cargo.lock](https://github.com/huggingface/text-generation-inference/blob/main/Cargo.lock \"Cargo.lock\")  \n[Cargo.toml](https://github.com/huggingface/text-generation-inference/blob/main/Cargo.toml \"Cargo.toml\")| [Cargo.toml](https://github.com/huggingface/text-generation-inference/blob/main/Cargo.toml \"Cargo.toml\")  \n[Dockerfile](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile \"Dockerfile\")| [Dockerfile](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile \"Dockerfile\")  \n[Dockerfile.neuron](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile.neuron \"Dockerfile.neuron\")| [Dockerfile.neuron](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile.neuron \"Dockerfile.neuron\")  \n[Dockerfile.nix](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile.nix \"Dockerfile.nix\")| [Dockerfile.nix](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile.nix \"Dockerfile.nix\")  \n[Dockerfile_amd](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_amd \"Dockerfile_amd\")| [Dockerfile_amd](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_amd \"Dockerfile_amd\")  \n[Dockerfile_gaudi](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_gaudi \"Dockerfile_gaudi\")| [Dockerfile_gaudi](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_gaudi \"Dockerfile_gaudi\")  \n[Dockerfile_intel](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_intel \"Dockerfile_intel\")| [Dockerfile_intel](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_intel \"Dockerfile_intel\")  \n[Dockerfile_llamacpp](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_llamacpp \"Dockerfile_llamacpp\")| [Dockerfile_llamacpp](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_llamacpp \"Dockerfile_llamacpp\")  \n[Dockerfile_trtllm](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_trtllm \"Dockerfile_trtllm\")| [Dockerfile_trtllm](https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_trtllm \"Dockerfile_trtllm\")  \n[LICENSE](https://github.com/huggingface/text-generation-inference/blob/main/LICENSE \"LICENSE\")| [LICENSE](https://github.com/huggingface/text-generation-inference/blob/main/LICENSE \"LICENSE\")  \n[Makefile](https://github.com/huggingface/text-generation-inference/blob/main/Makefile \"Makefile\")| [Makefile](https://github.com/huggingface/text-generation-inference/blob/main/Makefile \"Makefile\")  \n[README.md](https://github.com/huggingface/text-generation-inference/blob/main/README.md \"README.md\")| [README.md](https://github.com/huggingface/text-generation-inference/blob/main/README.md \"README.md\")  \n[crate-hashes.json](https://github.com/huggingface/text-generation-inference/blob/main/crate-hashes.json \"crate-hashes.json\")| [crate-hashes.json](https://github.com/huggingface/text-generation-inference/blob/main/crate-hashes.json \"crate-hashes.json\")  \n[flake.lock](https://github.com/huggingface/text-generation-inference/blob/main/flake.lock \"flake.lock\")| [flake.lock](https://github.com/huggingface/text-generation-inference/blob/main/flake.lock \"flake.lock\")  \n[flake.nix](https://github.com/huggingface/text-generation-inference/blob/main/flake.nix \"flake.nix\")| [flake.nix](https://github.com/huggingface/text-generation-inference/blob/main/flake.nix \"flake.nix\")  \n[rust-toolchain.toml](https://github.com/huggingface/text-generation-inference/blob/main/rust-toolchain.toml \"rust-toolchain.toml\")| [rust-toolchain.toml](https://github.com/huggingface/text-generation-inference/blob/main/rust-toolchain.toml \"rust-toolchain.toml\")  \n[sagemaker-entrypoint.sh](https://github.com/huggingface/text-generation-inference/blob/main/sagemaker-entrypoint.sh \"sagemaker-entrypoint.sh\")| [sagemaker-entrypoint.sh](https://github.com/huggingface/text-generation-inference/blob/main/sagemaker-entrypoint.sh \"sagemaker-entrypoint.sh\")  \n[tgi-entrypoint.sh](https://github.com/huggingface/text-generation-inference/blob/main/tgi-entrypoint.sh \"tgi-entrypoint.sh\")| [tgi-entrypoint.sh](https://github.com/huggingface/text-generation-inference/blob/main/tgi-entrypoint.sh \"tgi-entrypoint.sh\")  \n[update_doc.py](https://github.com/huggingface/text-generation-inference/blob/main/update_doc.py \"update_doc.py\")| [update_doc.py](https://github.com/huggingface/text-generation-inference/blob/main/update_doc.py \"update_doc.py\")  \nView all files  \n## Repository files navigation\n  * [README](https://github.com/huggingface/text-generation-inference/)\n  * [Code of conduct](https://github.com/huggingface/text-generation-inference/)\n  * [Apache-2.0 license](https://github.com/huggingface/text-generation-inference/)\n\n\n[ ![Making TGI deployment optimal](https://camo.githubusercontent.com/816a23feff65e234bf4393d453a7b3c8d24092f8630c2ed131b8b500ddb16dc1/68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f4e617273696c2f7467695f6173736574732f7265736f6c76652f6d61696e2f7468756d626e61696c2e706e67) ](https://www.youtube.com/watch?v=jlMAX2Oaht0)\n# Text Generation Inference\n[](https://github.com/huggingface/text-generation-inference/#text-generation-inference)\n[ ![GitHub Repo stars](https://camo.githubusercontent.com/afaad1cd3eb9f616fa5f8764f047603f53587984b922c9198ec1ab2895d9aae1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68756767696e67666163652f746578742d67656e65726174696f6e2d696e666572656e63653f7374796c653d736f6369616c) ](https://github.com/huggingface/text-generation-inference) [ ![Swagger API documentation](https://camo.githubusercontent.com/f0fe98e6afc151ec5523b758b023431bacb2de779486f7488953b503f5643b88/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d537761676765722d696e666f726d6174696f6e616c) ](https://huggingface.github.io/text-generation-inference)\nA Rust, Python and gRPC server for text generation inference. Used in production at [Hugging Face](https://huggingface.co) to power Hugging Chat, the Inference API and Inference Endpoint.\n## Table of contents\n[](https://github.com/huggingface/text-generation-inference/#table-of-contents)\n  * [Get Started](https://github.com/huggingface/text-generation-inference/#get-started)\n    * [Docker](https://github.com/huggingface/text-generation-inference/#docker)\n    * [API documentation](https://github.com/huggingface/text-generation-inference/#api-documentation)\n    * [Using a private or gated model](https://github.com/huggingface/text-generation-inference/#using-a-private-or-gated-model)\n    * [A note on Shared Memory (shm)](https://github.com/huggingface/text-generation-inference/#a-note-on-shared-memory-shm)\n    * [Distributed Tracing](https://github.com/huggingface/text-generation-inference/#distributed-tracing)\n    * [Architecture](https://github.com/huggingface/text-generation-inference/#architecture)\n    * [Local install](https://github.com/huggingface/text-generation-inference/#local-install)\n    * [Local install (Nix)](https://github.com/huggingface/text-generation-inference/#local-install-nix)\n  * [Optimized architectures](https://github.com/huggingface/text-generation-inference/#optimized-architectures)\n  * [Run locally](https://github.com/huggingface/text-generation-inference/#run-locally)\n    * [Run](https://github.com/huggingface/text-generation-inference/#run)\n    * [Quantization](https://github.com/huggingface/text-generation-inference/#quantization)\n  * [Develop](https://github.com/huggingface/text-generation-inference/#develop)\n  * [Testing](https://github.com/huggingface/text-generation-inference/#testing)\n\n\nText Generation Inference (TGI) is a toolkit for deploying and serving Large Language Models (LLMs). TGI enables high-performance text generation for the most popular open-source LLMs, including Llama, Falcon, StarCoder, BLOOM, GPT-NeoX, and [more](https://huggingface.co/docs/text-generation-inference/supported_models). TGI implements many features, such as:\n  * Simple launcher to serve most popular LLMs\n  * Production ready (distributed tracing with Open Telemetry, Prometheus metrics)\n  * Tensor Parallelism for faster inference on multiple GPUs\n  * Token streaming using Server-Sent Events (SSE)\n  * Continuous batching of incoming requests for increased total throughput\n  * [Messages API](https://huggingface.co/docs/text-generation-inference/en/messages_api) compatible with Open AI Chat Completion API\n  * Optimized transformers code for inference using [Flash Attention](https://github.com/HazyResearch/flash-attention) and [Paged Attention](https://github.com/vllm-project/vllm) on the most popular architectures\n  * Quantization with : \n    * [bitsandbytes](https://github.com/TimDettmers/bitsandbytes)\n    * [GPT-Q](https://arxiv.org/abs/2210.17323)\n    * [EETQ](https://github.com/NetEase-FuXi/EETQ)\n    * [AWQ](https://github.com/casper-hansen/AutoAWQ)\n    * [Marlin](https://github.com/IST-DASLab/marlin)\n    * [fp8](https://developer.nvidia.com/blog/nvidia-arm-and-intel-publish-fp8-specification-for-standardization-as-an-interchange-format-for-ai/)\n  * [Safetensors](https://github.com/huggingface/safetensors) weight loading\n  * Watermarking with [A Watermark for Large Language Models](https://arxiv.org/abs/2301.10226)\n  * Logits warper (temperature scaling, top-p, top-k, repetition penalty, more details see [transformers.LogitsProcessor](https://huggingface.co/docs/transformers/internal/generation_utils#transformers.LogitsProcessor))\n  * Stop sequences\n  * Log probabilities\n  * [Speculation](https://huggingface.co/docs/text-generation-inference/conceptual/speculation) ~2x latency\n  * [Guidance/JSON](https://huggingface.co/docs/text-generation-inference/conceptual/guidance). Specify output format to speed up inference and make sure the output is valid according to some specs..\n  * Custom Prompt Generation: Easily generate text by providing custom prompts to guide the model's output\n  * Fine-tuning Support: Utilize fine-tuned models for specific tasks to achieve higher accuracy and performance\n\n\n### Hardware support\n[](https://github.com/huggingface/text-generation-inference/#hardware-support)\n  * [Nvidia](https://github.com/huggingface/text-generation-inference/pkgs/container/text-generation-inference)\n  * [AMD](https://github.com/huggingface/text-generation-inference/pkgs/container/text-generation-inference) (-rocm)\n  * [Inferentia](https://github.com/huggingface/optimum-neuron/tree/main/text-generation-inference)\n  * [Intel GPU](https://github.com/huggingface/text-generation-inference/pull/1475)\n  * [Gaudi](https://github.com/huggingface/tgi-gaudi)\n  * [Google TPU](https://huggingface.co/docs/optimum-tpu/howto/serving)\n\n\n## Get Started\n[](https://github.com/huggingface/text-generation-inference/#get-started)\n### Docker\n[](https://github.com/huggingface/text-generation-inference/#docker)\nFor a detailed starting guide, please see the [Quick Tour](https://huggingface.co/docs/text-generation-inference/quicktour). The easiest way of getting started is using the official Docker container:\n```\nmodel=HuggingFaceH4/zephyr-7b-beta\n# share a volume with the Docker container to avoid downloading weights every run\nvolume=$PWD/data\ndocker run --gpus all --shm-size 1g -p 8080:80 -v $volume:/data \\\n  ghcr.io/huggingface/text-generation-inference:3.2.1 --model-id $model\n```\n\nAnd then you can make requests like\n```\ncurl 127.0.0.1:8080/generate_stream \\\n  -X POST \\\n  -d '{\"inputs\":\"What is Deep Learning?\",\"parameters\":{\"max_new_tokens\":20}}' \\\n  -H 'Content-Type: application/json'\n```\n\nYou can also use [TGI's Messages API](https://huggingface.co/docs/text-generation-inference/en/messages_api) to obtain Open AI Chat Completion API compatible responses.\n```\ncurl localhost:8080/v1/chat/completions \\\n  -X POST \\\n  -d '{\n \"model\": \"tgi\",\n \"messages\": [\n  {\n   \"role\": \"system\",\n   \"content\": \"You are a helpful assistant.\"\n  },\n  {\n   \"role\": \"user\",\n   \"content\": \"What is deep learning?\"\n  }\n ],\n \"stream\": true,\n \"max_tokens\": 20\n}' \\\n  -H 'Content-Type: application/json'\n```\n\n**Note:** To use NVIDIA GPUs, you need to install the [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html). We also recommend using NVIDIA drivers with CUDA version 12.2 or higher. For running the Docker container on a machine with no GPUs or CUDA support, it is enough to remove the `--gpus all` flag and add `--disable-custom-kernels`, please note CPU is not the intended platform for this project, so performance might be subpar.\n**Note:** TGI supports AMD Instinct MI210 and MI250 GPUs. Details can be found in the [Supported Hardware documentation](https://huggingface.co/docs/text-generation-inference/installation_amd#using-tgi-with-amd-gpus). To use AMD GPUs, please use `docker run --device /dev/kfd --device /dev/dri --shm-size 1g -p 8080:80 -v $volume:/data ghcr.io/huggingface/text-generation-inference:3.2.1-rocm --model-id $model` instead of the command above.\nTo see all options to serve your models (in the [code](https://github.com/huggingface/text-generation-inference/blob/main/launcher/src/main.rs) or in the cli):\n```\ntext-generation-launcher --help\n\n```\n\n### API documentation\n[](https://github.com/huggingface/text-generation-inference/#api-documentation)\nYou can consult the OpenAPI documentation of the `text-generation-inference` REST API using the `/docs` route. The Swagger UI is also available at: <https://huggingface.github.io/text-generation-inference>.\n### Using a private or gated model\n[](https://github.com/huggingface/text-generation-inference/#using-a-private-or-gated-model)\nYou have the option to utilize the `HF_TOKEN` environment variable for configuring the token employed by `text-generation-inference`. This allows you to gain access to protected resources.\nFor example, if you want to serve the gated Llama V2 model variants:\n  1. Go to <https://huggingface.co/settings/tokens>\n  2. Copy your CLI READ token\n  3. Export `HF_TOKEN=<your CLI READ token>`\n\n\nor with Docker:\n```\nmodel=meta-llama/Meta-Llama-3.1-8B-Instruct\nvolume=$PWD/data # share a volume with the Docker container to avoid downloading weights every run\ntoken=<your cli READ token>\ndocker run --gpus all --shm-size 1g -e HF_TOKEN=$token -p 8080:80 -v $volume:/data \\\n  ghcr.io/huggingface/text-generation-inference:3.2.1 --model-id $model\n```\n\n### A note on Shared Memory (shm)\n[](https://github.com/huggingface/text-generation-inference/#a-note-on-shared-memory-shm)\n[`NCCL`](https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/index.html) is a communication framework used by `PyTorch` to do distributed training/inference. `text-generation-inference` makes use of `NCCL` to enable Tensor Parallelism to dramatically speed up inference for large language models.\nIn order to share data between the different devices of a `NCCL` group, `NCCL` might fall back to using the host memory if peer-to-peer using NVLink or PCI is not possible.\nTo allow the container to use 1G of Shared Memory and support SHM sharing, we add `--shm-size 1g` on the above command.\nIf you are running `text-generation-inference` inside `Kubernetes`. You can also add Shared Memory to the container by creating a volume with:\n```\n- name: shm\n emptyDir:\n  medium: Memory\n  sizeLimit: 1Gi\n```\n\nand mounting it to `/dev/shm`.\nFinally, you can also disable SHM sharing by using the `NCCL_SHM_DISABLE=1` environment variable. However, note that this will impact performance.\n### Distributed Tracing\n[](https://github.com/huggingface/text-generation-inference/#distributed-tracing)\n`text-generation-inference` is instrumented with distributed tracing using OpenTelemetry. You can use this feature by setting the address to an OTLP collector with the `--otlp-endpoint` argument. The default service name can be overridden with the `--otlp-service-name` argument\n### Architecture\n[](https://github.com/huggingface/text-generation-inference/#architecture)\n[![TGI architecture](https://camo.githubusercontent.com/865b15b83e926b08c3ce2ad186519ad520bce2241b89095edcf7416d2be91aba/68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f68756767696e67666163652f646f63756d656e746174696f6e2d696d616765732f7265736f6c76652f6d61696e2f5447492e706e67)](https://camo.githubusercontent.com/865b15b83e926b08c3ce2ad186519ad520bce2241b89095edcf7416d2be91aba/68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f68756767696e67666163652f646f63756d656e746174696f6e2d696d616765732f7265736f6c76652f6d61696e2f5447492e706e67)\nDetailed blogpost by Adyen on TGI inner workings: [LLM inference at scale with TGI (Martin Iglesias Goyanes - Adyen, 2024)](https://www.adyen.com/knowledge-hub/llm-inference-at-scale-with-tgi)\n### Local install\n[](https://github.com/huggingface/text-generation-inference/#local-install)\nYou can also opt to install `text-generation-inference` locally.\nFirst clone the repository and change directory into it:\n```\ngit clone https://github.com/huggingface/text-generation-inference\ncd text-generation-inference\n```\n\nThen [install Rust](https://rustup.rs/) and create a Python virtual environment with at least Python 3.9, e.g. using `conda` or `python venv`:\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n#using conda\nconda create -n text-generation-inference python=3.11\nconda activate text-generation-inference\n#using python venv\npython3 -m venv .venv\nsource .venv/bin/activate\n```\n\nYou may also need to install Protoc.\nOn Linux:\n```\nPROTOC_ZIP=protoc-21.12-linux-x86_64.zip\ncurl -OL https://github.com/protocolbuffers/protobuf/releases/download/v21.12/$PROTOC_ZIP\nsudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc\nsudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'\nrm -f $PROTOC_ZIP\n```\n\nOn MacOS, using Homebrew:\n```\nbrew install protobuf\n```\n\nThen run:\n```\nBUILD_EXTENSIONS=True make install # Install repository and HF/transformer fork with CUDA kernels\ntext-generation-launcher --model-id mistralai/Mistral-7B-Instruct-v0.2\n```\n\n**Note:** on some machines, you may also need the OpenSSL libraries and gcc. On Linux machines, run:\n```\nsudo apt-get install libssl-dev gcc -y\n```\n\n### Local install (Nix)\n[](https://github.com/huggingface/text-generation-inference/#local-install-nix)\nAnother option is to install `text-generation-inference` locally using [Nix](https://nixos.org). Currently, we only support Nix on x86_64 Linux with CUDA GPUs. When using Nix, all dependencies can be pulled from a binary cache, removing the need to build them locally.\nFirst follow the instructions to [install Cachix and enable the TGI cache](https://app.cachix.org/cache/text-generation-inference). Setting up the cache is important, otherwise Nix will build many of the dependencies locally, which can take hours.\nAfter that you can run TGI with `nix run`:\n```\ncd text-generation-inference\nnix run --extra-experimental-features nix-command --extra-experimental-features flakes . -- --model-id meta-llama/Llama-3.1-8B-Instruct\n```\n\n**Note:** when you are using Nix on a non-NixOS system, you have to [make some symlinks](https://danieldk.eu/Nix-CUDA-on-non-NixOS-systems#make-runopengl-driverlib-and-symlink-the-driver-library) to make the CUDA driver libraries visible to Nix packages.\nFor TGI development, you can use the `impure` dev shell:\n```\nnix develop .#impure\n# Only needed the first time the devshell is started or after updating the protobuf.\n(\ncd server\nmkdir text_generation_server/pb || true\npython -m grpc_tools.protoc -I../proto/v3 --python_out=text_generation_server/pb \\\n    --grpc_python_out=text_generation_server/pb --mypy_out=text_generation_server/pb ../proto/v3/generate.proto\nfind text_generation_server/pb/ -type f -name \"*.py\" -print0 -exec sed -i -e 's/^\\(import.*pb2\\)/from . \\1/g' {} \\;\ntouch text_generation_server/pb/__init__.py\n)\n```\n\nAll development dependencies (cargo, Python, Torch), etc. are available in this dev shell.\n## Optimized architectures\n[](https://github.com/huggingface/text-generation-inference/#optimized-architectures)\nTGI works out of the box to serve optimized models for all modern models. They can be found in [this list](https://huggingface.co/docs/text-generation-inference/supported_models).\nOther architectures are supported on a best-effort basis using:\n`AutoModelForCausalLM.from_pretrained(<model>, device_map=\"auto\")`\nor\n`AutoModelForSeq2SeqLM.from_pretrained(<model>, device_map=\"auto\")`\n## Run locally\n[](https://github.com/huggingface/text-generation-inference/#run-locally)\n### Run\n[](https://github.com/huggingface/text-generation-inference/#run)\n```\ntext-generation-launcher --model-id mistralai/Mistral-7B-Instruct-v0.2\n```\n\n### Quantization\n[](https://github.com/huggingface/text-generation-inference/#quantization)\nYou can also run pre-quantized weights (AWQ, GPTQ, Marlin) or on-the-fly quantize weights with bitsandbytes, EETQ, fp8, to reduce the VRAM requirement:\n```\ntext-generation-launcher --model-id mistralai/Mistral-7B-Instruct-v0.2 --quantize\n```\n\n4bit quantization is available using the [NF4 and FP4 data types from bitsandbytes](https://arxiv.org/pdf/2305.14314.pdf). It can be enabled by providing `--quantize bitsandbytes-nf4` or `--quantize bitsandbytes-fp4` as a command line argument to `text-generation-launcher`.\nRead more about quantization in the [Quantization documentation](https://huggingface.co/docs/text-generation-inference/en/conceptual/quantization).\n## Develop\n[](https://github.com/huggingface/text-generation-inference/#develop)\n```\nmake server-dev\nmake router-dev\n```\n\n## Testing\n[](https://github.com/huggingface/text-generation-inference/#testing)\n```\n# python\nmake python-server-tests\nmake python-client-tests\n# or both server and client tests\nmake python-tests\n# rust cargo tests\nmake rust-tests\n# integration tests\nmake integration-tests\n```\n\n## About\nLarge Language Model Text Generation Inference \n[hf.co/docs/text-generation-inference](http://hf.co/docs/text-generation-inference \"http://hf.co/docs/text-generation-inference\")\n### Topics\n[ nlp ](https://github.com/topics/nlp \"Topic: nlp\") [ bloom ](https://github.com/topics/bloom \"Topic: bloom\") [ deep-learning ](https://github.com/topics/deep-learning \"Topic: deep-learning\") [ inference ](https://github.com/topics/inference \"Topic: inference\") [ pytorch ](https://github.com/topics/pytorch \"Topic: pytorch\") [ falcon ](https://github.com/topics/falcon \"Topic: falcon\") [ transformer ](https://github.com/topics/transformer \"Topic: transformer\") [ gpt ](https://github.com/topics/gpt \"Topic: gpt\") [ starcoder ](https://github.com/topics/starcoder \"Topic: starcoder\")\n### Resources\n[ Readme ](https://github.com/huggingface/text-generation-inference/#readme-ov-file)\n### License\n[ Apache-2.0 license ](https://github.com/huggingface/text-generation-inference/#Apache-2.0-1-ov-file)\n### Code of conduct\n[ Code of conduct ](https://github.com/huggingface/text-generation-inference/#coc-ov-file)\n[ Activity](https://github.com/huggingface/text-generation-inference/activity)\n[ Custom properties](https://github.com/huggingface/text-generation-inference/custom-properties)\n### Stars\n[ **9.9k** stars](https://github.com/huggingface/text-generation-inference/stargazers)\n### Watchers\n[ **104** watching](https://github.com/huggingface/text-generation-inference/watchers)\n### Forks\n[ **1.2k** forks](https://github.com/huggingface/text-generation-inference/forks)\n[ Report repository ](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fhuggingface%2Ftext-generation-inference&report=huggingface+%28user%29)\n##  [Releases 57](https://github.com/huggingface/text-generation-inference/releases)\n[ v3.2.1 Latest  Mar 18, 2025 ](https://github.com/huggingface/text-generation-inference/releases/tag/v3.2.1)\n[+ 56 releases](https://github.com/huggingface/text-generation-inference/releases)\n##  [Packages 0](https://github.com/orgs/huggingface/packages?repo_name=text-generation-inference)\n##  [Contributors 162](https://github.com/huggingface/text-generation-inference/graphs/contributors)\n  * [ ![@Narsil](https://avatars.githubusercontent.com/u/204321?s=64&v=4) ](https://github.com/Narsil)\n  * [ ![@OlivierDehaene](https://avatars.githubusercontent.com/u/23298448?s=64&v=4) ](https://github.com/OlivierDehaene)\n  * [ ![@danieldk](https://avatars.githubusercontent.com/u/49398?s=64&v=4) ](https://github.com/danieldk)\n  * [ ![@drbh](https://avatars.githubusercontent.com/u/9896130?s=64&v=4) ](https://github.com/drbh)\n  * [ ![@sywangyi](https://avatars.githubusercontent.com/u/36058628?s=64&v=4) ](https://github.com/sywangyi)\n  * [ ![@osanseviero](https://avatars.githubusercontent.com/u/7246357?s=64&v=4) ](https://github.com/osanseviero)\n  * [ ![@fxmarty](https://avatars.githubusercontent.com/u/9808326?s=64&v=4) ](https://github.com/fxmarty)\n  * [ ![@njhill](https://avatars.githubusercontent.com/u/16958488?s=64&v=4) ](https://github.com/njhill)\n  * [ ![@mfuntowicz](https://avatars.githubusercontent.com/u/2241520?s=64&v=4) ](https://github.com/mfuntowicz)\n  * [ ![@merveenoyan](https://avatars.githubusercontent.com/u/53175384?s=64&v=4) ](https://github.com/merveenoyan)\n  * [ ![@Hugoch](https://avatars.githubusercontent.com/u/733386?s=64&v=4) ](https://github.com/Hugoch)\n  * [ ![@mht-sharma](https://avatars.githubusercontent.com/u/21088122?s=64&v=4) ](https://github.com/mht-sharma)\n  * [ ![@Wauplin](https://avatars.githubusercontent.com/u/11801849?s=64&v=4) ](https://github.com/Wauplin)\n  * [ ![@alvarobartt](https://avatars.githubusercontent.com/u/36760800?s=64&v=4) ](https://github.com/alvarobartt)\n\n\n[+ 148 contributors](https://github.com/huggingface/text-generation-inference/graphs/contributors)\n## Languages\n  * [ Python 79.9% ](https://github.com/huggingface/text-generation-inference/search?l=python)\n  * [ Rust 15.3% ](https://github.com/huggingface/text-generation-inference/search?l=rust)\n  * [ Cuda 2.8% ](https://github.com/huggingface/text-generation-inference/search?l=cuda)\n  * [ C++ 0.8% ](https://github.com/huggingface/text-generation-inference/search?l=c%2B%2B)\n  * [ Nix 0.3% ](https://github.com/huggingface/text-generation-inference/search?l=nix)\n  * [ Shell 0.2% ](https://github.com/huggingface/text-generation-inference/search?l=shell)\n  * Other 0.7%\n\n\n## Footer\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n### Footer navigation\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": null,
    "summary": null,
    "child_urls": [
        "https://github.com/huggingface/text-generation-inference/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fhuggingface%2Ftext-generation-inference%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/resources/whitepapers",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot/copilot-business",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=huggingface%2Ftext-generation-inference",
        "https://github.com/huggingface",
        "https://github.com/huggingface/text-generation-inference",
        "https://github.com/login?return_to=%2Fhuggingface%2Ftext-generation-inference",
        "https://github.com/huggingface/text-generation-inference/blob/main/LICENSE",
        "https://github.com/huggingface/text-generation-inference/stargazers",
        "https://github.com/huggingface/text-generation-inference/forks",
        "https://github.com/huggingface/text-generation-inference/branches",
        "https://github.com/huggingface/text-generation-inference/tags",
        "https://github.com/huggingface/text-generation-inference/activity",
        "https://github.com/huggingface/text-generation-inference/issues",
        "https://github.com/huggingface/text-generation-inference/pulls",
        "https://github.com/huggingface/text-generation-inference/discussions",
        "https://github.com/huggingface/text-generation-inference/actions",
        "https://github.com/huggingface/text-generation-inference/security",
        "https://github.com/huggingface/text-generation-inference/pulse",
        "https://github.com/huggingface/text-generation-inference/commits/main/",
        "https://github.com/huggingface/text-generation-inference/tree/main/.github",
        "https://github.com/huggingface/text-generation-inference/tree/main/assets",
        "https://github.com/huggingface/text-generation-inference/tree/main/backends",
        "https://github.com/huggingface/text-generation-inference/tree/main/benchmark",
        "https://github.com/huggingface/text-generation-inference/tree/main/clients/python",
        "https://github.com/huggingface/text-generation-inference/tree/main/docs",
        "https://github.com/huggingface/text-generation-inference/tree/main/integration-tests",
        "https://github.com/huggingface/text-generation-inference/tree/main/launcher",
        "https://github.com/huggingface/text-generation-inference/tree/main/load_tests",
        "https://github.com/huggingface/text-generation-inference/tree/main/nix",
        "https://github.com/huggingface/text-generation-inference/tree/main/proto",
        "https://github.com/huggingface/text-generation-inference/tree/main/router",
        "https://github.com/huggingface/text-generation-inference/tree/main/server",
        "https://github.com/huggingface/text-generation-inference/blob/main/.dockerignore",
        "https://github.com/huggingface/text-generation-inference/blob/main/.gitignore",
        "https://github.com/huggingface/text-generation-inference/blob/main/.pre-commit-config.yaml",
        "https://github.com/huggingface/text-generation-inference/blob/main/.redocly.lint-ignore.yaml",
        "https://github.com/huggingface/text-generation-inference/blob/main/CODE_OF_CONDUCT.md",
        "https://github.com/huggingface/text-generation-inference/blob/main/CONTRIBUTING.md",
        "https://github.com/huggingface/text-generation-inference/blob/main/Cargo.lock",
        "https://github.com/huggingface/text-generation-inference/blob/main/Cargo.toml",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile.neuron",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile.nix",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_amd",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_gaudi",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_intel",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_llamacpp",
        "https://github.com/huggingface/text-generation-inference/blob/main/Dockerfile_trtllm",
        "https://github.com/huggingface/text-generation-inference/blob/main/Makefile",
        "https://github.com/huggingface/text-generation-inference/blob/main/README.md",
        "https://github.com/huggingface/text-generation-inference/blob/main/crate-hashes.json",
        "https://github.com/huggingface/text-generation-inference/blob/main/flake.lock",
        "https://github.com/huggingface/text-generation-inference/blob/main/flake.nix",
        "https://github.com/huggingface/text-generation-inference/blob/main/rust-toolchain.toml",
        "https://github.com/huggingface/text-generation-inference/blob/main/sagemaker-entrypoint.sh",
        "https://github.com/huggingface/text-generation-inference/blob/main/tgi-entrypoint.sh",
        "https://github.com/huggingface/text-generation-inference/blob/main/update_doc.py",
        "https://github.com/huggingface/text-generation-inference/",
        "https://github.com/huggingface/text-generation-inference/#text-generation-inference",
        "https://github.com/huggingface/text-generation-inference/#table-of-contents",
        "https://github.com/huggingface/text-generation-inference/#get-started",
        "https://github.com/huggingface/text-generation-inference/#docker",
        "https://github.com/huggingface/text-generation-inference/#api-documentation",
        "https://github.com/huggingface/text-generation-inference/#using-a-private-or-gated-model",
        "https://github.com/huggingface/text-generation-inference/#a-note-on-shared-memory-shm",
        "https://github.com/huggingface/text-generation-inference/#distributed-tracing",
        "https://github.com/huggingface/text-generation-inference/#architecture",
        "https://github.com/huggingface/text-generation-inference/#local-install",
        "https://github.com/huggingface/text-generation-inference/#local-install-nix",
        "https://github.com/huggingface/text-generation-inference/#optimized-architectures",
        "https://github.com/huggingface/text-generation-inference/#run-locally",
        "https://github.com/huggingface/text-generation-inference/#run",
        "https://github.com/huggingface/text-generation-inference/#quantization",
        "https://github.com/huggingface/text-generation-inference/#develop",
        "https://github.com/huggingface/text-generation-inference/#testing",
        "https://github.com/HazyResearch/flash-attention",
        "https://github.com/vllm-project/vllm",
        "https://github.com/TimDettmers/bitsandbytes",
        "https://github.com/NetEase-FuXi/EETQ",
        "https://github.com/casper-hansen/AutoAWQ",
        "https://github.com/IST-DASLab/marlin",
        "https://github.com/huggingface/safetensors",
        "https://github.com/huggingface/text-generation-inference/#hardware-support",
        "https://github.com/huggingface/text-generation-inference/pkgs/container/text-generation-inference",
        "https://github.com/huggingface/optimum-neuron/tree/main/text-generation-inference",
        "https://github.com/huggingface/text-generation-inference/pull/1475",
        "https://github.com/huggingface/tgi-gaudi",
        "https://github.com/huggingface/text-generation-inference/blob/main/launcher/src/main.rs",
        "https://github.com/topics/nlp",
        "https://github.com/topics/bloom",
        "https://github.com/topics/deep-learning",
        "https://github.com/topics/inference",
        "https://github.com/topics/pytorch",
        "https://github.com/topics/falcon",
        "https://github.com/topics/transformer",
        "https://github.com/topics/gpt",
        "https://github.com/topics/starcoder",
        "https://github.com/huggingface/text-generation-inference/#readme-ov-file",
        "https://github.com/huggingface/text-generation-inference/#Apache-2.0-1-ov-file",
        "https://github.com/huggingface/text-generation-inference/#coc-ov-file",
        "https://github.com/huggingface/text-generation-inference/custom-properties",
        "https://github.com/huggingface/text-generation-inference/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fhuggingface%2Ftext-generation-inference&report=huggingface+%28user%29",
        "https://github.com/huggingface/text-generation-inference/releases",
        "https://github.com/huggingface/text-generation-inference/releases/tag/v3.2.1",
        "https://github.com/orgs/huggingface/packages?repo_name=text-generation-inference",
        "https://github.com/huggingface/text-generation-inference/graphs/contributors",
        "https://github.com/Narsil",
        "https://github.com/OlivierDehaene",
        "https://github.com/danieldk",
        "https://github.com/drbh",
        "https://github.com/sywangyi",
        "https://github.com/osanseviero",
        "https://github.com/fxmarty",
        "https://github.com/njhill",
        "https://github.com/mfuntowicz",
        "https://github.com/merveenoyan",
        "https://github.com/Hugoch",
        "https://github.com/mht-sharma",
        "https://github.com/Wauplin",
        "https://github.com/alvarobartt",
        "https://github.com/huggingface/text-generation-inference/search?l=python",
        "https://github.com/huggingface/text-generation-inference/search?l=rust",
        "https://github.com/huggingface/text-generation-inference/search?l=cuda",
        "https://github.com/huggingface/text-generation-inference/search?l=c%2B%2B",
        "https://github.com/huggingface/text-generation-inference/search?l=nix",
        "https://github.com/huggingface/text-generation-inference/search?l=shell",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "http://hf.co/docs/text-generation-inference",
        "https://www.youtube.com/watch?v=jlMAX2Oaht0",
        "https://huggingface.github.io/text-generation-inference",
        "https://huggingface.co",
        "https://huggingface.co/docs/text-generation-inference/supported_models",
        "https://huggingface.co/docs/text-generation-inference/en/messages_api",
        "https://arxiv.org/abs/2210.17323",
        "https://developer.nvidia.com/blog/nvidia-arm-and-intel-publish-fp8-specification-for-standardization-as-an-interchange-format-for-ai/",
        "https://arxiv.org/abs/2301.10226",
        "https://huggingface.co/docs/transformers/internal/generation_utils#transformers.LogitsProcessor",
        "https://huggingface.co/docs/text-generation-inference/conceptual/speculation",
        "https://huggingface.co/docs/text-generation-inference/conceptual/guidance",
        "https://huggingface.co/docs/optimum-tpu/howto/serving",
        "https://huggingface.co/docs/text-generation-inference/quicktour",
        "https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html",
        "https://huggingface.co/docs/text-generation-inference/installation_amd#using-tgi-with-amd-gpus",
        "https://huggingface.co/settings/tokens",
        "https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/index.html",
        "https://camo.githubusercontent.com/865b15b83e926b08c3ce2ad186519ad520bce2241b89095edcf7416d2be91aba/68747470733a2f2f68756767696e67666163652e636f2f64617461736574732f68756767696e67666163652f646f63756d656e746174696f6e2d696d616765732f7265736f6c76652f6d61696e2f5447492e706e67",
        "https://www.adyen.com/knowledge-hub/llm-inference-at-scale-with-tgi",
        "https://rustup.rs/",
        "https://nixos.org",
        "https://app.cachix.org/cache/text-generation-inference",
        "https://danieldk.eu/Nix-CUDA-on-non-NixOS-systems#make-runopengl-driverlib-and-symlink-the-driver-library",
        "https://arxiv.org/pdf/2305.14314.pdf",
        "https://huggingface.co/docs/text-generation-inference/en/conceptual/quantization",
        "https://www.githubstatus.com/"
    ]
}