[Skip to content](https://github.com/unclecode/crawl4ai/#start-of-content)
## Navigation Menu
Toggle navigation
[ ](https://github.com/)
[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Funclecode%2Fcrawl4ai%2F)
  * Product 
    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)
    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)
    * [ Actions Automate any workflow  ](https://github.com/features/actions)
    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)
    * [ Issues Plan and track work  ](https://github.com/features/issues)
    * [ Code Review Manage code changes  ](https://github.com/features/code-review)
    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)
    * [ Code Search Find more, search less  ](https://github.com/features/code-search)
Explore
    * [ All features ](https://github.com/features)
    * [ Documentation ](https://docs.github.com)
    * [ GitHub Skills ](https://skills.github.com)
    * [ Blog ](https://github.blog)
  * Solutions 
By company size
    * [ Enterprises ](https://github.com/enterprise)
    * [ Small and medium teams ](https://github.com/team)
    * [ Startups ](https://github.com/enterprise/startups)
    * [ Nonprofits ](https://github.com/solutions/industry/nonprofits)
By use case
    * [ DevSecOps ](https://github.com/solutions/use-case/devsecops)
    * [ DevOps ](https://github.com/solutions/use-case/devops)
    * [ CI/CD ](https://github.com/solutions/use-case/ci-cd)
    * [ View all use cases ](https://github.com/solutions/use-case)
By industry
    * [ Healthcare ](https://github.com/solutions/industry/healthcare)
    * [ Financial services ](https://github.com/solutions/industry/financial-services)
    * [ Manufacturing ](https://github.com/solutions/industry/manufacturing)
    * [ Government ](https://github.com/solutions/industry/government)
    * [ View all industries ](https://github.com/solutions/industry)
[ View all solutions ](https://github.com/solutions)
  * Resources 
Topics
    * [ AI ](https://github.com/resources/articles/ai)
    * [ DevOps ](https://github.com/resources/articles/devops)
    * [ Security ](https://github.com/resources/articles/security)
    * [ Software Development ](https://github.com/resources/articles/software-development)
    * [ View all ](https://github.com/resources/articles)
Explore
    * [ Learning Pathways ](https://resources.github.com/learn/pathways)
    * [ Events & Webinars ](https://resources.github.com)
    * [ Ebooks & Whitepapers ](https://github.com/resources/whitepapers)
    * [ Customer Stories ](https://github.com/customer-stories)
    * [ Partners ](https://partner.github.com)
    * [ Executive Insights ](https://github.com/solutions/executive-insights)
  * Open Source 
    * [ GitHub Sponsors Fund open source developers  ](https://github.com/sponsors)
    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)
Repositories
    * [ Topics ](https://github.com/topics)
    * [ Trending ](https://github.com/trending)
    * [ Collections ](https://github.com/collections)
  * Enterprise 
    * [ Enterprise platform AI-powered developer platform  ](https://github.com/enterprise)
Available add-ons
    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)
    * [ Copilot for business Enterprise-grade AI features  ](https://github.com/features/copilot/copilot-business)
    * [ Premium Support Enterprise-grade 24/7 support  ](https://github.com/premium-support)
  * [Pricing](https://github.com/pricing)


Search or jump to...
# Search code, repositories, users, issues, pull requests...
Search 
Clear
[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)
#  Provide feedback 
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel  Submit feedback 
#  Saved searches 
## Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). 
Cancel  Create saved search 
[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Funclecode%2Fcrawl4ai%2F)
[ Sign up ](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=unclecode%2Fcrawl4ai) Reseting focus
You signed in with another tab or window. [Reload](https://github.com/unclecode/crawl4ai/) to refresh your session. You signed out in another tab or window. [Reload](https://github.com/unclecode/crawl4ai/) to refresh your session. You switched accounts on another tab or window. [Reload](https://github.com/unclecode/crawl4ai/) to refresh your session. Dismiss alert
{{ message }}
[ unclecode ](https://github.com/unclecode) / **[crawl4ai](https://github.com/unclecode/crawl4ai) ** Public
  * [ Notifications ](https://github.com/login?return_to=%2Funclecode%2Fcrawl4ai) You must be signed in to change notification settings
  * [ Fork 3k ](https://github.com/login?return_to=%2Funclecode%2Fcrawl4ai)
  * [ Star  34.7k ](https://github.com/login?return_to=%2Funclecode%2Fcrawl4ai)


🚀🤖 Crawl4AI: Open-source LLM Friendly Web Crawler & Scraper. Don't be shy, join here: <https://discord.gg/jP8KfhDhyN>
[crawl4ai.com](https://crawl4ai.com "https://crawl4ai.com")
### License
[ Apache-2.0 license ](https://github.com/unclecode/crawl4ai/blob/main/LICENSE)
[ 34.7k stars ](https://github.com/unclecode/crawl4ai/stargazers) [ 3k forks ](https://github.com/unclecode/crawl4ai/forks) [ Branches ](https://github.com/unclecode/crawl4ai/branches) [ Tags ](https://github.com/unclecode/crawl4ai/tags) [ Activity ](https://github.com/unclecode/crawl4ai/activity)
[ Star  ](https://github.com/login?return_to=%2Funclecode%2Fcrawl4ai)
[ Notifications ](https://github.com/login?return_to=%2Funclecode%2Fcrawl4ai) You must be signed in to change notification settings
  * [ Code ](https://github.com/unclecode/crawl4ai)
  * [ Issues 84 ](https://github.com/unclecode/crawl4ai/issues)
  * [ Pull requests 28 ](https://github.com/unclecode/crawl4ai/pulls)
  * [ Discussions ](https://github.com/unclecode/crawl4ai/discussions)
  * [ Actions ](https://github.com/unclecode/crawl4ai/actions)
  * [ Projects 1 ](https://github.com/unclecode/crawl4ai/projects)
  * [ Security ](https://github.com/unclecode/crawl4ai/security)
  * [ Insights ](https://github.com/unclecode/crawl4ai/pulse)


Additional navigation options
  * [ Code  ](https://github.com/unclecode/crawl4ai)
  * [ Issues  ](https://github.com/unclecode/crawl4ai/issues)
  * [ Pull requests  ](https://github.com/unclecode/crawl4ai/pulls)
  * [ Discussions  ](https://github.com/unclecode/crawl4ai/discussions)
  * [ Actions  ](https://github.com/unclecode/crawl4ai/actions)
  * [ Projects  ](https://github.com/unclecode/crawl4ai/projects)
  * [ Security  ](https://github.com/unclecode/crawl4ai/security)
  * [ Insights  ](https://github.com/unclecode/crawl4ai/pulse)


# unclecode/crawl4ai
main
[**69** Branches](https://github.com/unclecode/crawl4ai/branches)[**23** Tags](https://github.com/unclecode/crawl4ai/tags)
[](https://github.com/unclecode/crawl4ai/branches)[](https://github.com/unclecode/crawl4ai/tags)
Go to file
Code
## Folders and files
Name| Name| Last commit message| Last commit date  
---|---|---|---  
## Latest commit
[![unclecode](https://avatars.githubusercontent.com/u/12494079?v=4&size=40)](https://github.com/unclecode)[unclecode](https://github.com/unclecode/crawl4ai/commits?author=unclecode)[Merge branch 'vr0.5.0.post5'](https://github.com/unclecode/crawl4ai/commit/6eed4adc65367db9ed40525f2864e3a3fe5181d4)Mar 24, 2025[6eed4ad](https://github.com/unclecode/crawl4ai/commit/6eed4adc65367db9ed40525f2864e3a3fe5181d4) · Mar 24, 2025
## History
[661 Commits](https://github.com/unclecode/crawl4ai/commits/main/)[](https://github.com/unclecode/crawl4ai/commits/main/)  
[.github](https://github.com/unclecode/crawl4ai/tree/main/.github ".github")| [.github](https://github.com/unclecode/crawl4ai/tree/main/.github ".github")| [Create main.yml (](https://github.com/unclecode/crawl4ai/commit/79328e42925c9ce8c030a1cadfe68c88cbe02c36 "Create main.yml \(#846\)
* Create main.yml
GH actions to post notifications in discord for new issues, PRs and discussions
* Add comments on bugs to the trigger")[#846](https://github.com/unclecode/crawl4ai/pull/846)[)](https://github.com/unclecode/crawl4ai/commit/79328e42925c9ce8c030a1cadfe68c88cbe02c36 "Create main.yml \(#846\)
* Create main.yml
GH actions to post notifications in discord for new issues, PRs and discussions
* Add comments on bugs to the trigger")| Mar 17, 2025  
[crawl4ai](https://github.com/unclecode/crawl4ai/tree/main/crawl4ai "crawl4ai")| [crawl4ai](https://github.com/unclecode/crawl4ai/tree/main/crawl4ai "crawl4ai")| [chore(version): bump version to 0.5.0.post6](https://github.com/unclecode/crawl4ai/commit/bdd9db579ab6b6df959b4c57ab6f1c74347ae7bb "chore\(version\): bump version to 0.5.0.post6
refactor\(cli\): remove unused import from FastAPI")| Mar 24, 2025  
[deploy/docker](https://github.com/unclecode/crawl4ai/tree/main/deploy/docker "This path skips through empty directories")| [deploy/docker](https://github.com/unclecode/crawl4ai/tree/main/deploy/docker "This path skips through empty directories")| [Merge branch 'main' of](https://github.com/unclecode/crawl4ai/commit/fd02dc782d520cfc85d4f1a39156719beaaa4e85 "Merge branch 'main' of https://github.com/unclecode/crawl4ai") <https://github.com/unclecode/crawl4ai>| Mar 5, 2025  
[docs](https://github.com/unclecode/crawl4ai/tree/main/docs "docs")| [docs](https://github.com/unclecode/crawl4ai/tree/main/docs "docs")| [feat(deep-crawling): improve URL normalization and domain filtering](https://github.com/unclecode/crawl4ai/commit/f78c46446ba647f92175329b55373987ec843e2a "feat\(deep-crawling\): improve URL normalization and domain filtering
Enhance URL handling in deep crawling with:
- New URL normalization functions for consistent URL formats
- Improved domain filtering with subdomain support
- Added URLPatternFilter to public API
- Better URL deduplication in BFS strategy
These changes improve crawling accuracy and reduce duplicate visits.")| Mar 6, 2025  
[tests](https://github.com/unclecode/crawl4ai/tree/main/tests "tests")| [tests](https://github.com/unclecode/crawl4ai/tree/main/tests "tests")| [refactor(llm): rename LlmConfig to LLMConfig for consistency](https://github.com/unclecode/crawl4ai/commit/baee4949d3358b977bb0923916099187ae214d37 "refactor\(llm\): rename LlmConfig to LLMConfig for consistency
Rename LlmConfig to LLMConfig across the codebase to follow consistent naming conventions.
Update all imports and usages to use the new name.
Update documentation and examples to reflect the change.
BREAKING CHANGE: LlmConfig has been renamed to LLMConfig. Users need to update their imports and usage.")| Mar 4, 2025  
[.env.txt](https://github.com/unclecode/crawl4ai/blob/main/.env.txt ".env.txt")| [.env.txt](https://github.com/unclecode/crawl4ai/blob/main/.env.txt ".env.txt")| [`chore: Update environment variable usage in config files`](https://github.com/unclecode/crawl4ai/commit/88643612e82df67cc308434965405ca2d8de189a "`chore: Update environment variable usage in config files`")| May 9, 2024  
[.gitattributes](https://github.com/unclecode/crawl4ai/blob/main/.gitattributes ".gitattributes")| [.gitattributes](https://github.com/unclecode/crawl4ai/blob/main/.gitattributes ".gitattributes")| [Update .gitattributes](https://github.com/unclecode/crawl4ai/commit/c110d459fb2e1e0a9f914e943e986d4953f2a9e1 "Update .gitattributes")| Jan 7, 2025  
[.gitignore](https://github.com/unclecode/crawl4ai/blob/main/.gitignore ".gitignore")| [.gitignore](https://github.com/unclecode/crawl4ai/blob/main/.gitignore ".gitignore")| [Merge branch 'main' into next](https://github.com/unclecode/crawl4ai/commit/c1718919997a1295da640d984d7277b56c0bf955 "Merge branch 'main' into next
# Conflicts:
#	.gitignore")| Feb 18, 2025  
[CHANGELOG.md](https://github.com/unclecode/crawl4ai/blob/main/CHANGELOG.md "CHANGELOG.md")| [CHANGELOG.md](https://github.com/unclecode/crawl4ai/blob/main/CHANGELOG.md "CHANGELOG.md")| [feat(deep-crawling): add max_pages and score_threshold parameters for…](https://github.com/unclecode/crawl4ai/commit/f334daa979dcd7161649deab84a3642fa2fa57aa "feat\(deep-crawling\): add max_pages and score_threshold parameters for improved crawling control")| Mar 3, 2025  
[CODE_OF_CONDUCT.md](https://github.com/unclecode/crawl4ai/blob/main/CODE_OF_CONDUCT.md "CODE_OF_CONDUCT.md")| [CODE_OF_CONDUCT.md](https://github.com/unclecode/crawl4ai/blob/main/CODE_OF_CONDUCT.md "CODE_OF_CONDUCT.md")| [Docs: Add Code of Conduct for the project (](https://github.com/unclecode/crawl4ai/commit/32652189b0862029f3784d0d477ba64a9500d7ea "Docs: Add Code of Conduct for the project \(#410\)")[#410](https://github.com/unclecode/crawl4ai/pull/410)[)](https://github.com/unclecode/crawl4ai/commit/32652189b0862029f3784d0d477ba64a9500d7ea "Docs: Add Code of Conduct for the project \(#410\)")| Jan 5, 2025  
[CONTRIBUTORS.md](https://github.com/unclecode/crawl4ai/blob/main/CONTRIBUTORS.md "CONTRIBUTORS.md")| [CONTRIBUTORS.md](https://github.com/unclecode/crawl4ai/blob/main/CONTRIBUTORS.md "CONTRIBUTORS.md")| [Release prep (](https://github.com/unclecode/crawl4ai/commit/a9e24307cc610ecfdf41f9dc9923085b584296dd "Release prep \(#749\)
* fix: Update export of URLPatternFilter
* chore: Add dependancy for cchardet in requirements
* docs: Update example for deep crawl in release note for v0.5
* Docs: update the example for memory dispatcher
* docs: updated example for crawl strategies
* Refactor: Removed wrapping in if __name__==main block since this is a markdown file.
* chore: removed cchardet from dependancy list, since unclecode is planning to remove it
* docs: updated the example for proxy rotation to a working example
* feat: Introduced ProxyConfig param
* Add tutorial for deep crawl & update contributor list for bug fixes in feb alpha-1
* chore: update and test new dependancies
* feat:Make PyPDF2 a conditional dependancy
* updated tutorial and release note for v0.5
* docs: update docs for deep crawl, and fix a typo in docker-deployment markdown filename
* refactor: 1. Deprecate markdown_v2 2. Make markdown backward compatible to behave as a string when needed. 3. Fix LlmConfig usage in cli 4. Deprecate markdown_v2 in cli 5. Update AsyncWebCrawler for changes in CrawlResult
* fix: Bug in serialisation of markdown in acache_url
* Refactor: Added deprecation errors for fit_html and fit_markdown directly on markdown. Now access them via markdown
* fix: remove deprecated markdown_v2 from docker
* Refactor: remove deprecated fit_markdown and fit_html from result
* refactor: fix cache retrieval for markdown as a string
* chore: update all docs, examples and tests with deprecation announcements for markdown_v2, fit_html, fit_markdown")[#749](https://github.com/unclecode/crawl4ai/pull/749)[)](https://github.com/unclecode/crawl4ai/commit/a9e24307cc610ecfdf41f9dc9923085b584296dd "Release prep \(#749\)
* fix: Update export of URLPatternFilter
* chore: Add dependancy for cchardet in requirements
* docs: Update example for deep crawl in release note for v0.5
* Docs: update the example for memory dispatcher
* docs: updated example for crawl strategies
* Refactor: Removed wrapping in if __name__==main block since this is a markdown file.
* chore: removed cchardet from dependancy list, since unclecode is planning to remove it
* docs: updated the example for proxy rotation to a working example
* feat: Introduced ProxyConfig param
* Add tutorial for deep crawl & update contributor list for bug fixes in feb alpha-1
* chore: update and test new dependancies
* feat:Make PyPDF2 a conditional dependancy
* updated tutorial and release note for v0.5
* docs: update docs for deep crawl, and fix a typo in docker-deployment markdown filename
* refactor: 1. Deprecate markdown_v2 2. Make markdown backward compatible to behave as a string when needed. 3. Fix LlmConfig usage in cli 4. Deprecate markdown_v2 in cli 5. Update AsyncWebCrawler for changes in CrawlResult
* fix: Bug in serialisation of markdown in acache_url
* Refactor: Added deprecation errors for fit_html and fit_markdown directly on markdown. Now access them via markdown
* fix: remove deprecated markdown_v2 from docker
* Refactor: remove deprecated fit_markdown and fit_html from result
* refactor: fix cache retrieval for markdown as a string
* chore: update all docs, examples and tests with deprecation announcements for markdown_v2, fit_html, fit_markdown")| Feb 28, 2025  
[Dockerfile](https://github.com/unclecode/crawl4ai/blob/main/Dockerfile "Dockerfile")| [Dockerfile](https://github.com/unclecode/crawl4ai/blob/main/Dockerfile "Dockerfile")| [refactor(pdf): improve PDF processor dependency handling](https://github.com/unclecode/crawl4ai/commit/4bcd4cbda18eaf45cf2c1ff3e3fe34f11c7eff11 "refactor\(pdf\): improve PDF processor dependency handling
Make PyPDF2 an optional dependency and improve import handling in PDF processor.
Move imports inside methods to allow for lazy loading and better error handling.
Add new 'pdf' optional dependency group in pyproject.toml.
Clean up unused imports and remove deprecated files.
BREAKING CHANGE: PyPDF2 is now an optional dependency. Users need to install with 'pip install crawl4ai\[pdf\]' to use PDF processing features.")| Feb 25, 2025  
[LICENSE](https://github.com/unclecode/crawl4ai/blob/main/LICENSE "LICENSE")| [LICENSE](https://github.com/unclecode/crawl4ai/blob/main/LICENSE "LICENSE")| [feat(core): release version 0.5.0 with deep crawling and CLI](https://github.com/unclecode/crawl4ai/commit/367cd71db9e42f8e1276612e7924a1551c00f7b7 "feat\(core\): release version 0.5.0 with deep crawling and CLI
This major release adds deep crawling capabilities, memory-adaptive dispatcher,
multiple crawling strategies, Docker deployment, and a new CLI. It also includes
significant improvements to proxy handling, PDF processing, and LLM integration.
BREAKING CHANGES:
- Add memory-adaptive dispatcher as default for arun_many\(\)
- Move max_depth to CrawlerRunConfig
- Replace ScrapingMode enum with strategy pattern
- Update BrowserContext API
- Make model fields optional with defaults
- Remove content_filter parameter from CrawlerRunConfig
- Remove synchronous WebCrawler and old CLI
- Update Docker deployment configuration
- Replace FastFilterChain with FilterChain
- Change license to Apache 2.0 with attribution clause")| Feb 21, 2025  
[MANIFEST.in](https://github.com/unclecode/crawl4ai/blob/main/MANIFEST.in "MANIFEST.in")| [MANIFEST.in](https://github.com/unclecode/crawl4ai/blob/main/MANIFEST.in "MANIFEST.in")| [Fix js_snipprt issue 0.4.21](https://github.com/unclecode/crawl4ai/commit/e9e5b5642d8c4612c27a76880ea5670a78e2ab2b "Fix js_snipprt issue 0.4.21
bump to 0.4.22")| Dec 15, 2024  
[MISSION.md](https://github.com/unclecode/crawl4ai/blob/main/MISSION.md "MISSION.md")| [MISSION.md](https://github.com/unclecode/crawl4ai/blob/main/MISSION.md "MISSION.md")| [Refactor mission section in README and add mission diagram](https://github.com/unclecode/crawl4ai/commit/62a86dbe8d62a3359effc9f5ae076b33f5fdf28c "Refactor mission section in README and add mission diagram")| Oct 31, 2024  
[README.md](https://github.com/unclecode/crawl4ai/blob/main/README.md "README.md")| [README.md](https://github.com/unclecode/crawl4ai/blob/main/README.md "README.md")| [refactor(llm): rename LlmConfig to LLMConfig for consistency](https://github.com/unclecode/crawl4ai/commit/baee4949d3358b977bb0923916099187ae214d37 "refactor\(llm\): rename LlmConfig to LLMConfig for consistency
Rename LlmConfig to LLMConfig across the codebase to follow consistent naming conventions.
Update all imports and usages to use the new name.
Update documentation and examples to reflect the change.
BREAKING CHANGE: LlmConfig has been renamed to LLMConfig. Users need to update their imports and usage.")| Mar 4, 2025  
[ROADMAP.md](https://github.com/unclecode/crawl4ai/blob/main/ROADMAP.md "ROADMAP.md")| [ROADMAP.md](https://github.com/unclecode/crawl4ai/blob/main/ROADMAP.md "ROADMAP.md")| [Update Roadmap](https://github.com/unclecode/crawl4ai/commit/a098483cbbb26be3d3b6f8d678f8409d6b007789 "Update Roadmap")| Nov 9, 2024  
[cliff.toml](https://github.com/unclecode/crawl4ai/blob/main/cliff.toml "cliff.toml")| [cliff.toml](https://github.com/unclecode/crawl4ai/blob/main/cliff.toml "cliff.toml")| [feat(core): release version 0.5.0 with deep crawling and CLI](https://github.com/unclecode/crawl4ai/commit/367cd71db9e42f8e1276612e7924a1551c00f7b7 "feat\(core\): release version 0.5.0 with deep crawling and CLI
This major release adds deep crawling capabilities, memory-adaptive dispatcher,
multiple crawling strategies, Docker deployment, and a new CLI. It also includes
significant improvements to proxy handling, PDF processing, and LLM integration.
BREAKING CHANGES:
- Add memory-adaptive dispatcher as default for arun_many\(\)
- Move max_depth to CrawlerRunConfig
- Replace ScrapingMode enum with strategy pattern
- Update BrowserContext API
- Make model fields optional with defaults
- Remove content_filter parameter from CrawlerRunConfig
- Remove synchronous WebCrawler and old CLI
- Update Docker deployment configuration
- Replace FastFilterChain with FilterChain
- Change license to Apache 2.0 with attribution clause")| Feb 21, 2025  
[docker-compose.yml](https://github.com/unclecode/crawl4ai/blob/main/docker-compose.yml "docker-compose.yml")| [docker-compose.yml](https://github.com/unclecode/crawl4ai/blob/main/docker-compose.yml "docker-compose.yml")| [base-config structure is changed (](https://github.com/unclecode/crawl4ai/commit/926beee83277116dea34914abb99f566577172b3 "base-config structure is changed \(#618\)
refactor\(docker\): restructure docker-compose for modular configuration
- Added reusable base configuration block \(x-base-config\) for ports, environment variables, volumes, deployment resources, restart policy, and health check.
- Updated services to include base configuration directly using `<<: *base-config` syntax.
- Removed redundant `base-config` service definition.")[#618](https://github.com/unclecode/crawl4ai/pull/618)[)](https://github.com/unclecode/crawl4ai/commit/926beee83277116dea34914abb99f566577172b3 "base-config structure is changed \(#618\)
refactor\(docker\): restructure docker-compose for modular configuration
- Added reusable base configuration block \(x-base-config\) for ports, environment variables, volumes, deployment resources, restart policy, and health check.
- Updated services to include base configuration directly using `<<: *base-config` syntax.
- Removed redundant `base-config` service definition.")| Feb 7, 2025  
[mkdocs.yml](https://github.com/unclecode/crawl4ai/blob/main/mkdocs.yml "mkdocs.yml")| [mkdocs.yml](https://github.com/unclecode/crawl4ai/blob/main/mkdocs.yml "mkdocs.yml")| [chore(docs): update site version to v0.5.x in mkdocs configuration](https://github.com/unclecode/crawl4ai/commit/8a76563018054c5bb921f78002733c49c7087518 "chore\(docs\): update site version to v0.5.x in mkdocs configuration")| Mar 4, 2025  
[pyproject.toml](https://github.com/unclecode/crawl4ai/blob/main/pyproject.toml "pyproject.toml")| [pyproject.toml](https://github.com/unclecode/crawl4ai/blob/main/pyproject.toml "pyproject.toml")| [refactor(cli): improve CLI default command handling](https://github.com/unclecode/crawl4ai/commit/56bc3c6e45e0c5e43665667cceb8e6161c70e974 "refactor\(cli\): improve CLI default command handling
Make 'crawl' the default command when no command is specified.
This improves user experience by allowing direct URL input without
explicitly specifying the 'crawl' command.
Also removes unnecessary blank lines in example code for better readability.")| Mar 4, 2025  
[requirements.txt](https://github.com/unclecode/crawl4ai/blob/main/requirements.txt "requirements.txt")| [requirements.txt](https://github.com/unclecode/crawl4ai/blob/main/requirements.txt "requirements.txt")| [Release prep (](https://github.com/unclecode/crawl4ai/commit/a9e24307cc610ecfdf41f9dc9923085b584296dd "Release prep \(#749\)
* fix: Update export of URLPatternFilter
* chore: Add dependancy for cchardet in requirements
* docs: Update example for deep crawl in release note for v0.5
* Docs: update the example for memory dispatcher
* docs: updated example for crawl strategies
* Refactor: Removed wrapping in if __name__==main block since this is a markdown file.
* chore: removed cchardet from dependancy list, since unclecode is planning to remove it
* docs: updated the example for proxy rotation to a working example
* feat: Introduced ProxyConfig param
* Add tutorial for deep crawl & update contributor list for bug fixes in feb alpha-1
* chore: update and test new dependancies
* feat:Make PyPDF2 a conditional dependancy
* updated tutorial and release note for v0.5
* docs: update docs for deep crawl, and fix a typo in docker-deployment markdown filename
* refactor: 1. Deprecate markdown_v2 2. Make markdown backward compatible to behave as a string when needed. 3. Fix LlmConfig usage in cli 4. Deprecate markdown_v2 in cli 5. Update AsyncWebCrawler for changes in CrawlResult
* fix: Bug in serialisation of markdown in acache_url
* Refactor: Added deprecation errors for fit_html and fit_markdown directly on markdown. Now access them via markdown
* fix: remove deprecated markdown_v2 from docker
* Refactor: remove deprecated fit_markdown and fit_html from result
* refactor: fix cache retrieval for markdown as a string
* chore: update all docs, examples and tests with deprecation announcements for markdown_v2, fit_html, fit_markdown")[#749](https://github.com/unclecode/crawl4ai/pull/749)[)](https://github.com/unclecode/crawl4ai/commit/a9e24307cc610ecfdf41f9dc9923085b584296dd "Release prep \(#749\)
* fix: Update export of URLPatternFilter
* chore: Add dependancy for cchardet in requirements
* docs: Update example for deep crawl in release note for v0.5
* Docs: update the example for memory dispatcher
* docs: updated example for crawl strategies
* Refactor: Removed wrapping in if __name__==main block since this is a markdown file.
* chore: removed cchardet from dependancy list, since unclecode is planning to remove it
* docs: updated the example for proxy rotation to a working example
* feat: Introduced ProxyConfig param
* Add tutorial for deep crawl & update contributor list for bug fixes in feb alpha-1
* chore: update and test new dependancies
* feat:Make PyPDF2 a conditional dependancy
* updated tutorial and release note for v0.5
* docs: update docs for deep crawl, and fix a typo in docker-deployment markdown filename
* refactor: 1. Deprecate markdown_v2 2. Make markdown backward compatible to behave as a string when needed. 3. Fix LlmConfig usage in cli 4. Deprecate markdown_v2 in cli 5. Update AsyncWebCrawler for changes in CrawlResult
* fix: Bug in serialisation of markdown in acache_url
* Refactor: Added deprecation errors for fit_html and fit_markdown directly on markdown. Now access them via markdown
* fix: remove deprecated markdown_v2 from docker
* Refactor: remove deprecated fit_markdown and fit_html from result
* refactor: fix cache retrieval for markdown as a string
* chore: update all docs, examples and tests with deprecation announcements for markdown_v2, fit_html, fit_markdown")| Feb 28, 2025  
[setup.cfg](https://github.com/unclecode/crawl4ai/blob/main/setup.cfg "setup.cfg")| [setup.cfg](https://github.com/unclecode/crawl4ai/blob/main/setup.cfg "setup.cfg")| [Update README, add manifest, make selenium optional library](https://github.com/unclecode/crawl4ai/commit/f1eee09cf4dc766b52483ea43a02205b37d9ab0e "Update README, add manifest, make selenium optional library")| Sep 25, 2024  
[setup.py](https://github.com/unclecode/crawl4ai/blob/main/setup.py "setup.py")| [setup.py](https://github.com/unclecode/crawl4ai/blob/main/setup.py "setup.py")| [Apply Ruff Corrections](https://github.com/unclecode/crawl4ai/commit/8ec12d7d68f2f35183d1c472a256282c2d79aa0d "Apply Ruff Corrections")| Jan 13, 2025  
View all files  
## Repository files navigation
  * [README](https://github.com/unclecode/crawl4ai/)
  * [Code of conduct](https://github.com/unclecode/crawl4ai/)
  * [Apache-2.0 license](https://github.com/unclecode/crawl4ai/)


# 🚀🤖 Crawl4AI: Open-source LLM Friendly Web Crawler & Scraper.
[](https://github.com/unclecode/crawl4ai/#-crawl4ai-open-source-llm-friendly-web-crawler--scraper)
[![unclecode%2Fcrawl4ai | Trendshift](https://camo.githubusercontent.com/f015afb613bea2a6ad325fb5e545fe43c008614c194cd73e89b10f341d366067/68747470733a2f2f7472656e6473686966742e696f2f6170692f62616467652f7265706f7369746f726965732f3131373136)](https://trendshift.io/repositories/11716)
[![GitHub Stars](https://camo.githubusercontent.com/72f9e500bc258c28125926ccfcf0af0ef85a76b85cfcbed8fcab6a39f6ebf34b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f756e636c65636f64652f637261776c3461693f7374796c653d736f6369616c)](https://github.com/unclecode/crawl4ai/stargazers) [![GitHub Forks](https://camo.githubusercontent.com/194ff269dbd71a0d5a49448a18762803a6bfe358d43e9a16de33b5221e79ed2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f756e636c65636f64652f637261776c3461693f7374796c653d736f6369616c)](https://github.com/unclecode/crawl4ai/network/members)
[![PyPI version](https://camo.githubusercontent.com/bbf4c7387347c7b05b6cd311b7f192c6a5244a418b1e4bf8d289fd00038a85c4/68747470733a2f2f62616467652e667572792e696f2f70792f637261776c3461692e737667)](https://badge.fury.io/py/crawl4ai) [![Python Version](https://camo.githubusercontent.com/5d106b2c6f8638b0ed5f60336af45d540adfed3d2f418b47ed06f1cafe812424/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f637261776c346169)](https://pypi.org/project/crawl4ai/) [![Downloads](https://camo.githubusercontent.com/744e8ce18b11244ed945b427b40ae69a4eed73450ed683bc17dd00e0384b5e5a/68747470733a2f2f7374617469632e706570792e746563682f62616467652f637261776c3461692f6d6f6e7468)](https://pepy.tech/project/crawl4ai)
[![License](https://camo.githubusercontent.com/9b672dc107ece9c22ca39eb5814fb09686f89e0488c24416029d107d83fed9e3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f756e636c65636f64652f637261776c346169)](https://github.com/unclecode/crawl4ai/blob/main/LICENSE) [![Code style: black](https://camo.githubusercontent.com/5bf9e9fa18966df7cb5fac7715bef6b72df15e01a6efa9d616c83f9fcb527fe2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667)](https://github.com/psf/black) [![Security: bandit](https://camo.githubusercontent.com/5e9696d5fe6502aafe1205fc1e98d179249b8b993e8a4d80ae7bf49320e24532/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73656375726974792d62616e6469742d79656c6c6f772e737667)](https://github.com/PyCQA/bandit) [![Contributor Covenant](https://camo.githubusercontent.com/71217453f48cd1f12ba5a720412bb92743010653a5cc69654e627fd99e2e9104/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7472696275746f72253230436f76656e616e742d322e312d3462616161612e737667)](https://github.com/unclecode/crawl4ai/blob/main/code_of_conduct.md)
Crawl4AI is the #1 trending GitHub repository, actively maintained by a vibrant community. It delivers blazing-fast, AI-ready web crawling tailored for LLMs, AI agents, and data pipelines. Open source, flexible, and built for real-time performance, Crawl4AI empowers developers with unmatched speed, precision, and deployment ease.
[✨ Check out latest update v0.5.0](https://github.com/unclecode/crawl4ai/#-recent-updates)
🎉 **Version 0.5.0 is out!** This major release introduces Deep Crawling with BFS/DFS/BestFirst strategies, Memory-Adaptive Dispatcher, Multiple Crawling Strategies (Playwright and HTTP), Docker Deployment with FastAPI, Command-Line Interface (CLI), and more! [Read the release notes →](https://docs.crawl4ai.com/blog)
🤓 **My Personal Story**
My journey with computers started in childhood when my dad, a computer scientist, introduced me to an Amstrad computer. Those early days sparked a fascination with technology, leading me to pursue computer science and specialize in NLP during my postgraduate studies. It was during this time that I first delved into web crawling, building tools to help researchers organize papers and extract information from publications a challenging yet rewarding experience that honed my skills in data extraction.
Fast forward to 2023, I was working on a tool for a project and needed a crawler to convert a webpage into markdown. While exploring solutions, I found one that claimed to be open-source but required creating an account and generating an API token. Worse, it turned out to be a SaaS model charging $16, and its quality didn’t meet my standards. Frustrated, I realized this was a deeper problem. That frustration turned into turbo anger mode, and I decided to build my own solution. In just a few days, I created Crawl4AI. To my surprise, it went viral, earning thousands of GitHub stars and resonating with a global community.
I made Crawl4AI open-source for two reasons. First, it’s my way of giving back to the open-source community that has supported me throughout my career. Second, I believe data should be accessible to everyone, not locked behind paywalls or monopolized by a few. Open access to data lays the foundation for the democratization of AI, a vision where individuals can train their own models and take ownership of their information. This library is the first step in a larger journey to create the best open-source data extraction and generation tool the world has ever seen, built collaboratively by a passionate community.
Thank you to everyone who has supported this project, used it, and shared feedback. Your encouragement motivates me to dream even bigger. Join us, file issues, submit PRs, or spread the word. Together, we can build a tool that truly empowers people to access their own data and reshape the future of AI.
## 🧐 Why Crawl4AI?
[](https://github.com/unclecode/crawl4ai/#-why-crawl4ai)
  1. **Built for LLMs** : Creates smart, concise Markdown optimized for RAG and fine-tuning applications.
  2. **Lightning Fast** : Delivers results 6x faster with real-time, cost-efficient performance.
  3. **Flexible Browser Control** : Offers session management, proxies, and custom hooks for seamless data access.
  4. **Heuristic Intelligence** : Uses advanced algorithms for efficient extraction, reducing reliance on costly models.
  5. **Open Source & Deployable**: Fully open-source with no API keys—ready for Docker and cloud integration.
  6. **Thriving Community** : Actively maintained by a vibrant community and the #1 trending GitHub repository.


## 🚀 Quick Start
[](https://github.com/unclecode/crawl4ai/#-quick-start)
  1. Install Crawl4AI:


```
# Install the package
pip install -U crawl4ai
# For pre release versions
pip install crawl4ai --pre
# Run post-installation setup
crawl4ai-setup
# Verify your installation
crawl4ai-doctor
```

If you encounter any browser-related issues, you can install them manually:
```
python -m playwright install --with-deps chromium
```

  1. Run a simple web crawl with Python:


```
import asyncio
from crawl4ai import *
async def main():
  async with AsyncWebCrawler() as crawler:
    result = await crawler.arun(
      url="https://www.nbcnews.com/business",
    )
    print(result.markdown)
if __name__ == "__main__":
  asyncio.run(main())
```

  1. Or use the new command-line interface:


```
# Basic crawl with markdown output
crwl https://www.nbcnews.com/business -o markdown
# Deep crawl with BFS strategy, max 10 pages
crwl https://docs.crawl4ai.com --deep-crawl bfs --max-pages 10
# Use LLM extraction with a specific question
crwl https://www.example.com/products -q "Extract all product prices"
```

## ✨ Features
[](https://github.com/unclecode/crawl4ai/#-features)
📝 **Markdown Generation**
  * 🧹 **Clean Markdown** : Generates clean, structured Markdown with accurate formatting.
  * 🎯 **Fit Markdown** : Heuristic-based filtering to remove noise and irrelevant parts for AI-friendly processing.
  * 🔗 **Citations and References** : Converts page links into a numbered reference list with clean citations.
  * 🛠️ **Custom Strategies** : Users can create their own Markdown generation strategies tailored to specific needs.
  * 📚 **BM25 Algorithm** : Employs BM25-based filtering for extracting core information and removing irrelevant content.

📊 **Structured Data Extraction**
  * 🤖 **LLM-Driven Extraction** : Supports all LLMs (open-source and proprietary) for structured data extraction.
  * 🧱 **Chunking Strategies** : Implements chunking (topic-based, regex, sentence-level) for targeted content processing.
  * 🌌 **Cosine Similarity** : Find relevant content chunks based on user queries for semantic extraction.
  * 🔎 **CSS-Based Extraction** : Fast schema-based data extraction using XPath and CSS selectors.
  * 🔧 **Schema Definition** : Define custom schemas for extracting structured JSON from repetitive patterns.

🌐 **Browser Integration**
  * 🖥️ **Managed Browser** : Use user-owned browsers with full control, avoiding bot detection.
  * 🔄 **Remote Browser Control** : Connect to Chrome Developer Tools Protocol for remote, large-scale data extraction.
  * 👤 **Browser Profiler** : Create and manage persistent profiles with saved authentication states, cookies, and settings.
  * 🔒 **Session Management** : Preserve browser states and reuse them for multi-step crawling.
  * 🧩 **Proxy Support** : Seamlessly connect to proxies with authentication for secure access.
  * ⚙️ **Full Browser Control** : Modify headers, cookies, user agents, and more for tailored crawling setups.
  * 🌍 **Multi-Browser Support** : Compatible with Chromium, Firefox, and WebKit.
  * 📐 **Dynamic Viewport Adjustment** : Automatically adjusts the browser viewport to match page content, ensuring complete rendering and capturing of all elements.

🔎 **Crawling & Scraping**
  * 🖼️ **Media Support** : Extract images, audio, videos, and responsive image formats like `srcset` and `picture`.
  * 🚀 **Dynamic Crawling** : Execute JS and wait for async or sync for dynamic content extraction.
  * 📸 **Screenshots** : Capture page screenshots during crawling for debugging or analysis.
  * 📂 **Raw Data Crawling** : Directly process raw HTML (`raw:`) or local files (`file://`).
  * 🔗 **Comprehensive Link Extraction** : Extracts internal, external links, and embedded iframe content.
  * 🛠️ **Customizable Hooks** : Define hooks at every step to customize crawling behavior.
  * 💾 **Caching** : Cache data for improved speed and to avoid redundant fetches.
  * 📄 **Metadata Extraction** : Retrieve structured metadata from web pages.
  * 📡 **IFrame Content Extraction** : Seamless extraction from embedded iframe content.
  * 🕵️ **Lazy Load Handling** : Waits for images to fully load, ensuring no content is missed due to lazy loading.
  * 🔄 **Full-Page Scanning** : Simulates scrolling to load and capture all dynamic content, perfect for infinite scroll pages.

🚀 **Deployment**
  * 🐳 **Dockerized Setup** : Optimized Docker image with FastAPI server for easy deployment.
  * 🔑 **Secure Authentication** : Built-in JWT token authentication for API security.
  * 🔄 **API Gateway** : One-click deployment with secure token authentication for API-based workflows.
  * 🌐 **Scalable Architecture** : Designed for mass-scale production and optimized server performance.
  * ☁️ **Cloud Deployment** : Ready-to-deploy configurations for major cloud platforms.

🎯 **Additional Features**
  * 🕶️ **Stealth Mode** : Avoid bot detection by mimicking real users.
  * 🏷️ **Tag-Based Content Extraction** : Refine crawling based on custom tags, headers, or metadata.
  * 🔗 **Link Analysis** : Extract and analyze all links for detailed data exploration.
  * 🛡️ **Error Handling** : Robust error management for seamless execution.
  * 🔐 **CORS & Static Serving**: Supports filesystem-based caching and cross-origin requests.
  * 📖 **Clear Documentation** : Simplified and updated guides for onboarding and advanced usage.
  * 🙌 **Community Recognition** : Acknowledges contributors and pull requests for transparency.


## Try it Now!
[](https://github.com/unclecode/crawl4ai/#try-it-now)
✨ Play around with this [![Open In Colab](https://camo.githubusercontent.com/96889048f8a9014fdeba2a891f97150c6aac6e723f5190236b10215a97ed41f3/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/drive/1SgRPrByQLzjRfwoRNq1wSGE9nYY_EE8C?usp=sharing)
✨ Visit our [Documentation Website](https://docs.crawl4ai.com/)
## Installation 🛠️
[](https://github.com/unclecode/crawl4ai/#installation-️)
Crawl4AI offers flexible installation options to suit various use cases. You can install it as a Python package or use Docker.
🐍 **Using pip**
Choose the installation option that best fits your needs:
### Basic Installation
[](https://github.com/unclecode/crawl4ai/#basic-installation)
For basic web crawling and scraping tasks:
```
pip install crawl4ai
crawl4ai-setup # Setup the browser
```

By default, this will install the asynchronous version of Crawl4AI, using Playwright for web crawling.
👉 **Note** : When you install Crawl4AI, the `crawl4ai-setup` should automatically install and set up Playwright. However, if you encounter any Playwright-related errors, you can manually install it using one of these methods:
  1. Through the command line:
```
playwright install
```

  2. If the above doesn't work, try this more specific command:
```
python -m playwright install chromium
```



This second method has proven to be more reliable in some cases.
### Installation with Synchronous Version
[](https://github.com/unclecode/crawl4ai/#installation-with-synchronous-version)
The sync version is deprecated and will be removed in future versions. If you need the synchronous version using Selenium:
```
pip install crawl4ai[sync]
```

### Development Installation
[](https://github.com/unclecode/crawl4ai/#development-installation)
For contributors who plan to modify the source code:
```
git clone https://github.com/unclecode/crawl4ai.git
cd crawl4ai
pip install -e .          # Basic installation in editable mode
```

Install optional features:
```
pip install -e ".[torch]"      # With PyTorch features
pip install -e ".[transformer]"   # With Transformer features
pip install -e ".[cosine]"     # With cosine similarity features
pip install -e ".[sync]"      # With synchronous crawling (Selenium)
pip install -e ".[all]"       # Install all optional features
```

🐳 **Docker Deployment**
> 🚀 **Major Changes Coming!** We're developing a completely new Docker implementation that will make deployment even more efficient and seamless. The current Docker setup is being deprecated in favor of this new solution.
### Current Docker Support
[](https://github.com/unclecode/crawl4ai/#current-docker-support)
The existing Docker implementation is being deprecated and will be replaced soon. If you still need to use Docker with the current version:
  * 📚 [Deprecated Docker Setup](https://github.com/unclecode/crawl4ai/blob/main/docs/deprecated/docker-deployment.md) - Instructions for the current Docker implementation
  * ⚠️ Note: This setup will be replaced in the next major release


### What's Coming Next?
[](https://github.com/unclecode/crawl4ai/#whats-coming-next)
Our new Docker implementation will bring:
  * Improved performance and resource efficiency
  * Streamlined deployment process
  * Better integration with Crawl4AI features
  * Enhanced scalability options


Stay connected with our [GitHub repository](https://github.com/unclecode/crawl4ai) for updates!
### Quick Test
[](https://github.com/unclecode/crawl4ai/#quick-test)
Run a quick test (works for both Docker options):
```
import requests
# Submit a crawl job
response = requests.post(
  "http://localhost:11235/crawl",
  json={"urls": "https://example.com", "priority": 10}
)
task_id = response.json()["task_id"]
# Continue polling until the task is complete (status="completed")
result = requests.get(f"http://localhost:11235/task/{task_id}")
```

For more examples, see our [Docker Examples](https://github.com/unclecode/crawl4ai/blob/main/docs/examples/docker_example.py). For advanced configuration, environment variables, and usage examples, see our [Docker Deployment Guide](https://docs.crawl4ai.com/basic/docker-deployment/).
## 🔬 Advanced Usage Examples 🔬
[](https://github.com/unclecode/crawl4ai/#-advanced-usage-examples-)
You can check the project structure in the directory [https://github.com/unclecode/crawl4ai/docs/examples](https://github.com/unclecode/crawl4ai/blob/main/docs/examples). Over there, you can find a variety of examples; here, some popular examples are shared.
📝 **Heuristic Markdown Generation with Clean and Fit Markdown**
```
import asyncio
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode
from crawl4ai.content_filter_strategy import PruningContentFilter, BM25ContentFilter
from crawl4ai.markdown_generation_strategy import DefaultMarkdownGenerator
async def main():
  browser_config = BrowserConfig(
    headless=True, 
    verbose=True,
  )
  run_config = CrawlerRunConfig(
    cache_mode=CacheMode.ENABLED,
    markdown_generator=DefaultMarkdownGenerator(
      content_filter=PruningContentFilter(threshold=0.48, threshold_type="fixed", min_word_threshold=0)
    ),
    # markdown_generator=DefaultMarkdownGenerator(
    #   content_filter=BM25ContentFilter(user_query="WHEN_WE_FOCUS_BASED_ON_A_USER_QUERY", bm25_threshold=1.0)
    # ),
  )
  
  async with AsyncWebCrawler(config=browser_config) as crawler:
    result = await crawler.arun(
      url="https://docs.micronaut.io/4.7.6/guide/",
      config=run_config
    )
    print(len(result.markdown.raw_markdown))
    print(len(result.markdown.fit_markdown))
if __name__ == "__main__":
  asyncio.run(main())
```

🖥️ **Executing JavaScript & Extract Structured Data without LLMs**
```
import asyncio
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode
from crawl4ai.extraction_strategy import JsonCssExtractionStrategy
import json
async def main():
  schema = {
  "name": "KidoCode Courses",
  "baseSelector": "section.charge-methodology .w-tab-content > div",
  "fields": [
    {
      "name": "section_title",
      "selector": "h3.heading-50",
      "type": "text",
    },
    {
      "name": "section_description",
      "selector": ".charge-content",
      "type": "text",
    },
    {
      "name": "course_name",
      "selector": ".text-block-93",
      "type": "text",
    },
    {
      "name": "course_description",
      "selector": ".course-content-text",
      "type": "text",
    },
    {
      "name": "course_icon",
      "selector": ".image-92",
      "type": "attribute",
      "attribute": "src"
    }
  }
}
  extraction_strategy = JsonCssExtractionStrategy(schema, verbose=True)
  browser_config = BrowserConfig(
    headless=False,
    verbose=True
  )
  run_config = CrawlerRunConfig(
    extraction_strategy=extraction_strategy,
    js_code=["""(async () => {const tabs = document.querySelectorAll("section.charge-methodology .tabs-menu-3 > div");for(let tab of tabs) {tab.scrollIntoView();tab.click();await new Promise(r => setTimeout(r, 500));}})();"""],
    cache_mode=CacheMode.BYPASS
  )
    
  async with AsyncWebCrawler(config=browser_config) as crawler:
    
    result = await crawler.arun(
      url="https://www.kidocode.com/degrees/technology",
      config=run_config
    )
    companies = json.loads(result.extracted_content)
    print(f"Successfully extracted {len(companies)} companies")
    print(json.dumps(companies[0], indent=2))

if __name__ == "__main__":
  asyncio.run(main())
```

📚 **Extracting Structured Data with LLMs**
```
import os
import asyncio
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode, LLMConfig
from crawl4ai.extraction_strategy import LLMExtractionStrategy
from pydantic import BaseModel, Field
class OpenAIModelFee(BaseModel):
  model_name: str = Field(..., description="Name of the OpenAI model.")
  input_fee: str = Field(..., description="Fee for input token for the OpenAI model.")
  output_fee: str = Field(..., description="Fee for output token for the OpenAI model.")
async def main():
  browser_config = BrowserConfig(verbose=True)
  run_config = CrawlerRunConfig(
    word_count_threshold=1,
    extraction_strategy=LLMExtractionStrategy(
      # Here you can use any provider that Litellm library supports, for instance: ollama/qwen2
      # provider="ollama/qwen2", api_token="no-token", 
      llm_config = LLMConfig(provider="openai/gpt-4o", api_token=os.getenv('OPENAI_API_KEY')), 
      schema=OpenAIModelFee.schema(),
      extraction_type="schema",
      instruction="""From the crawled content, extract all mentioned model names along with their fees for input and output tokens. 
      Do not miss any models in the entire content. One extracted model JSON format should look like this: 
      {"model_name": "GPT-4", "input_fee": "US$10.00 / 1M tokens", "output_fee": "US$30.00 / 1M tokens"}."""
    ),      
    cache_mode=CacheMode.BYPASS,
  )
  
  async with AsyncWebCrawler(config=browser_config) as crawler:
    result = await crawler.arun(
      url='https://openai.com/api/pricing/',
      config=run_config
    )
    print(result.extracted_content)
if __name__ == "__main__":
  asyncio.run(main())
```

🤖 **Using You own Browser with Custom User Profile**
```
import os, sys
from pathlib import Path
import asyncio, time
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode
async def test_news_crawl():
  # Create a persistent user data directory
  user_data_dir = os.path.join(Path.home(), ".crawl4ai", "browser_profile")
  os.makedirs(user_data_dir, exist_ok=True)
  browser_config = BrowserConfig(
    verbose=True,
    headless=True,
    user_data_dir=user_data_dir,
    use_persistent_context=True,
  )
  run_config = CrawlerRunConfig(
    cache_mode=CacheMode.BYPASS
  )
  
  async with AsyncWebCrawler(config=browser_config) as crawler:
    url = "ADDRESS_OF_A_CHALLENGING_WEBSITE"
    
    result = await crawler.arun(
      url,
      config=run_config,
      magic=True,
    )
    
    print(f"Successfully crawled {url}")
    print(f"Content length: {len(result.markdown)}")
```

## ✨ Recent Updates
[](https://github.com/unclecode/crawl4ai/#-recent-updates)
### Version 0.5.0 Major Release Highlights
[](https://github.com/unclecode/crawl4ai/#version-050-major-release-highlights)
  * **🚀 Deep Crawling System** : Explore websites beyond initial URLs with three strategies: 
    * **BFS Strategy** : Breadth-first search explores websites level by level
    * **DFS Strategy** : Depth-first search explores each branch deeply before backtracking
    * **BestFirst Strategy** : Uses scoring functions to prioritize which URLs to crawl next
    * **Page Limiting** : Control the maximum number of pages to crawl with `max_pages` parameter
    * **Score Thresholds** : Filter URLs based on relevance scores
  * **⚡ Memory-Adaptive Dispatcher** : Dynamically adjusts concurrency based on system memory with built-in rate limiting
  * **🔄 Multiple Crawling Strategies** : 
    * **AsyncPlaywrightCrawlerStrategy** : Browser-based crawling with JavaScript support (Default)
    * **AsyncHTTPCrawlerStrategy** : Fast, lightweight HTTP-only crawler for simple tasks
  * **🐳 Docker Deployment** : Easy deployment with FastAPI server and streaming/non-streaming endpoints
  * **💻 Command-Line Interface** : New `crwl` CLI provides convenient terminal access to all features with intuitive commands and configuration options
  * **👤 Browser Profiler** : Create and manage persistent browser profiles to save authentication states, cookies, and settings for seamless crawling of protected content
  * **🧠 Crawl4AI Coding Assistant** : AI-powered coding assistant to answer your question for Crawl4ai, and generate proper code for crawling.
  * **🏎️ LXML Scraping Mode** : Fast HTML parsing using the `lxml` library for improved performance
  * **🌐 Proxy Rotation** : Built-in support for proxy switching with `RoundRobinProxyStrategy`
  * **🤖 LLM Content Filter** : Intelligent markdown generation using LLMs
  * **📄 PDF Processing** : Extract text, images, and metadata from PDF files
  * **🔗 URL Redirection Tracking** : Automatically follow and record HTTP redirects
  * **🤖 LLM Schema Generation** : Easily create extraction schemas with LLM assistance
  * **🔍 robots.txt Compliance** : Respect website crawling rules


Read the full details in our [0.5.0 Release Notes](https://docs.crawl4ai.com/blog/releases/0.5.0.html) or check the [CHANGELOG](https://github.com/unclecode/crawl4ai/blob/main/CHANGELOG.md).
## Version Numbering in Crawl4AI
[](https://github.com/unclecode/crawl4ai/#version-numbering-in-crawl4ai)
Crawl4AI follows standard Python version numbering conventions (PEP 440) to help users understand the stability and features of each release.
### Version Numbers Explained
[](https://github.com/unclecode/crawl4ai/#version-numbers-explained)
Our version numbers follow this pattern: `MAJOR.MINOR.PATCH` (e.g., 0.4.3)
#### Pre-release Versions
[](https://github.com/unclecode/crawl4ai/#pre-release-versions)
We use different suffixes to indicate development stages:
  * `dev` (0.4.3dev1): Development versions, unstable
  * `a` (0.4.3a1): Alpha releases, experimental features
  * `b` (0.4.3b1): Beta releases, feature complete but needs testing
  * `rc` (0.4.3rc1): Release candidates, potential final version


#### Installation
[](https://github.com/unclecode/crawl4ai/#installation)
  * Regular installation (stable version):
```
pip install -U crawl4ai
```

  * Install pre-release versions:
```
pip install crawl4ai --pre
```

  * Install specific version:
```
pip install crawl4ai==0.4.3b1
```



#### Why Pre-releases?
[](https://github.com/unclecode/crawl4ai/#why-pre-releases)
We use pre-releases to:
  * Test new features in real-world scenarios
  * Gather feedback before final releases
  * Ensure stability for production users
  * Allow early adopters to try new features


For production environments, we recommend using the stable version. For testing new features, you can opt-in to pre-releases using the `--pre` flag.
## 📖 Documentation & Roadmap
[](https://github.com/unclecode/crawl4ai/#-documentation--roadmap)
> 🚨 **Documentation Update Alert** : We're undertaking a major documentation overhaul next week to reflect recent updates and improvements. Stay tuned for a more comprehensive and up-to-date guide!
For current documentation, including installation instructions, advanced features, and API reference, visit our [Documentation Website](https://docs.crawl4ai.com/).
To check our development plans and upcoming features, visit our [Roadmap](https://github.com/unclecode/crawl4ai/blob/main/ROADMAP.md).
📈 **Development TODOs**
  * 0. Graph Crawler: Smart website traversal using graph search algorithms for comprehensive nested page extraction
  * 1. Question-Based Crawler: Natural language driven web discovery and content extraction
  * 2. Knowledge-Optimal Crawler: Smart crawling that maximizes knowledge while minimizing data extraction
  * 3. Agentic Crawler: Autonomous system for complex multi-step crawling operations
  * 4. Automated Schema Generator: Convert natural language to extraction schemas
  * 5. Domain-Specific Scrapers: Pre-configured extractors for common platforms (academic, e-commerce)
  * 6. Web Embedding Index: Semantic search infrastructure for crawled content
  * 7. Interactive Playground: Web UI for testing, comparing strategies with AI assistance
  * 8. Performance Monitor: Real-time insights into crawler operations
  * 9. Cloud Integration: One-click deployment solutions across cloud providers
  * 10. Sponsorship Program: Structured support system with tiered benefits
  * 11. Educational Content: "How to Crawl" video series and interactive tutorials


## 🤝 Contributing
[](https://github.com/unclecode/crawl4ai/#-contributing)
We welcome contributions from the open-source community. Check out our [contribution guidelines](https://github.com/unclecode/crawl4ai/blob/main/CONTRIBUTORS.md) for more information.
I'll help modify the license section with badges. For the halftone effect, here's a version with it:
Here's the updated license section:
## 📄 License & Attribution
[](https://github.com/unclecode/crawl4ai/#-license--attribution)
This project is licensed under the Apache License 2.0 with a required attribution clause. See the [Apache 2.0 License](https://github.com/unclecode/crawl4ai/blob/main/LICENSE) file for details.
### Attribution Requirements
[](https://github.com/unclecode/crawl4ai/#attribution-requirements)
When using Crawl4AI, you must include one of the following attribution methods:
#### 1. Badge Attribution (Recommended)
[](https://github.com/unclecode/crawl4ai/#1-badge-attribution-recommended)
Add one of these badges to your README, documentation, or website:
Theme | Badge  
---|---  
**Disco Theme (Animated)** | [![Powered by Crawl4AI](https://github.com/unclecode/crawl4ai/raw/main/docs/assets/powered-by-disco.svg)](https://github.com/unclecode/crawl4ai)  
**Night Theme (Dark with Neon)** | [![Powered by Crawl4AI](https://github.com/unclecode/crawl4ai/raw/main/docs/assets/powered-by-night.svg)](https://github.com/unclecode/crawl4ai)  
**Dark Theme (Classic)** | [![Powered by Crawl4AI](https://github.com/unclecode/crawl4ai/raw/main/docs/assets/powered-by-dark.svg)](https://github.com/unclecode/crawl4ai)  
**Light Theme (Classic)** | [![Powered by Crawl4AI](https://github.com/unclecode/crawl4ai/raw/main/docs/assets/powered-by-light.svg)](https://github.com/unclecode/crawl4ai)  
HTML code for adding the badges:
```
<!-- Disco Theme (Animated) -->
<a href="https://github.com/unclecode/crawl4ai">
 <img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-disco.svg" alt="Powered by Crawl4AI" width="200"/>
</a>
<!-- Night Theme (Dark with Neon) -->
<a href="https://github.com/unclecode/crawl4ai">
 <img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-night.svg" alt="Powered by Crawl4AI" width="200"/>
</a>
<!-- Dark Theme (Classic) -->
<a href="https://github.com/unclecode/crawl4ai">
 <img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-dark.svg" alt="Powered by Crawl4AI" width="200"/>
</a>
<!-- Light Theme (Classic) -->
<a href="https://github.com/unclecode/crawl4ai">
 <img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-light.svg" alt="Powered by Crawl4AI" width="200"/>
</a>
<!-- Simple Shield Badge -->
<a href="https://github.com/unclecode/crawl4ai">
 <img src="https://img.shields.io/badge/Powered%20by-Crawl4AI-blue?style=flat-square" alt="Powered by Crawl4AI"/>
</a>
```

#### 2. Text Attribution
[](https://github.com/unclecode/crawl4ai/#2-text-attribution)
Add this line to your documentation:
```
This project uses Crawl4AI (https://github.com/unclecode/crawl4ai) for web data extraction.

```

## 📚 Citation
[](https://github.com/unclecode/crawl4ai/#-citation)
If you use Crawl4AI in your research or project, please cite:
```
@software{crawl4ai2024,
 author = {UncleCode},
 title = {Crawl4AI: Open-source LLM Friendly Web Crawler & Scraper},
 year = {2024},
 publisher = {GitHub},
 journal = {GitHub Repository},
 howpublished = {\url{https://github.com/unclecode/crawl4ai}},
 commit = {Please use the commit hash you're working with}
}
```

Text citation format:
```
UncleCode. (2024). Crawl4AI: Open-source LLM Friendly Web Crawler & Scraper [Computer software]. 
GitHub. https://github.com/unclecode/crawl4ai

```

## 📧 Contact
[](https://github.com/unclecode/crawl4ai/#-contact)
For questions, suggestions, or feedback, feel free to reach out:
  * GitHub: [unclecode](https://github.com/unclecode)
  * Twitter: [@unclecode](https://twitter.com/unclecode)
  * Website: [crawl4ai.com](https://crawl4ai.com)


Happy Crawling! 🕸️🚀
## 🗾 Mission
[](https://github.com/unclecode/crawl4ai/#-mission)
Our mission is to unlock the value of personal and enterprise data by transforming digital footprints into structured, tradeable assets. Crawl4AI empowers individuals and organizations with open-source tools to extract and structure data, fostering a shared data economy.
We envision a future where AI is powered by real human knowledge, ensuring data creators directly benefit from their contributions. By democratizing data and enabling ethical sharing, we are laying the foundation for authentic AI advancement.
🔑 **Key Opportunities**
  * **Data Capitalization** : Transform digital footprints into measurable, valuable assets.
  * **Authentic AI Data** : Provide AI systems with real human insights.
  * **Shared Economy** : Create a fair data marketplace that benefits data creators.

🚀 **Development Pathway**
  1. **Open-Source Tools** : Community-driven platforms for transparent data extraction.
  2. **Digital Asset Structuring** : Tools to organize and value digital knowledge.
  3. **Ethical Data Marketplace** : A secure, fair platform for exchanging structured data.


For more details, see our [full mission statement](https://github.com/unclecode/crawl4ai/blob/main/MISSION.md).
## Star History
[](https://github.com/unclecode/crawl4ai/#star-history)
[![Star History Chart](https://camo.githubusercontent.com/ab5215663fb1f24f5e379ce1d3cadc6b4c0b3aabe77c644c8377074fc1321ea0/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d756e636c65636f64652f637261776c34616926747970653d44617465)](https://star-history.com/#unclecode/crawl4ai&Date)
## About
🚀🤖 Crawl4AI: Open-source LLM Friendly Web Crawler & Scraper. Don't be shy, join here: <https://discord.gg/jP8KfhDhyN>
[crawl4ai.com](https://crawl4ai.com "https://crawl4ai.com")
### Resources
[ Readme ](https://github.com/unclecode/crawl4ai/#readme-ov-file)
### License
[ Apache-2.0 license ](https://github.com/unclecode/crawl4ai/#Apache-2.0-1-ov-file)
### Code of conduct
[ Code of conduct ](https://github.com/unclecode/crawl4ai/#coc-ov-file)
[ Activity](https://github.com/unclecode/crawl4ai/activity)
### Stars
[ **34.7k** stars](https://github.com/unclecode/crawl4ai/stargazers)
### Watchers
[ **221** watching](https://github.com/unclecode/crawl4ai/watchers)
### Forks
[ **3k** forks](https://github.com/unclecode/crawl4ai/forks)
[ Report repository ](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Funclecode%2Fcrawl4ai&report=unclecode+%28user%29)
##  [Releases 1](https://github.com/unclecode/crawl4ai/releases)
[ Crawl4AI v0.5.0.post1 Latest  Mar 4, 2025 ](https://github.com/unclecode/crawl4ai/releases/tag/v0.5.0.post1)
##  [Packages 0](https://github.com/users/unclecode/packages?repo_name=crawl4ai)
No packages published 
##  [Used by 1.2k](https://github.com/unclecode/crawl4ai/network/dependents)
[
  * ![@prajna-mothi](https://avatars.githubusercontent.com/u/64132225?s=64&v=4)
  * ![@Daniboycg](https://avatars.githubusercontent.com/u/122741302?s=64&v=4)
  * ![@MattaKruger](https://avatars.githubusercontent.com/u/25327052?s=64&v=4)
  * ![@ReeveWu](https://avatars.githubusercontent.com/u/110542858?s=64&v=4)
  * ![@srheede](https://avatars.githubusercontent.com/u/37539274?s=64&v=4)
  * ![@virtUOS](https://avatars.githubusercontent.com/u/37844?s=64&v=4)
  * ![@TrueMan777](https://avatars.githubusercontent.com/u/5191096?s=64&v=4)
  * ![@Marcus8009](https://avatars.githubusercontent.com/u/88241447?s=64&v=4)

+ 1,149  ](https://github.com/unclecode/crawl4ai/network/dependents)
##  [Contributors 35](https://github.com/unclecode/crawl4ai/graphs/contributors)
  * [ ![@unclecode](https://avatars.githubusercontent.com/u/12494079?s=64&v=4) ](https://github.com/unclecode)
  * [ ![@aravindkarnam](https://avatars.githubusercontent.com/u/15815124?s=64&v=4) ](https://github.com/aravindkarnam)
  * [ ![@bizrockman](https://avatars.githubusercontent.com/u/17730156?s=64&v=4) ](https://github.com/bizrockman)
  * [ ![@datehoer](https://avatars.githubusercontent.com/u/62844803?s=64&v=4) ](https://github.com/datehoer)
  * [ ![@mjvankampen](https://avatars.githubusercontent.com/u/29380294?s=64&v=4) ](https://github.com/mjvankampen)
  * [ ![@ketonkss4](https://avatars.githubusercontent.com/u/736967?s=64&v=4) ](https://github.com/ketonkss4)
  * [ ![@timoa](https://avatars.githubusercontent.com/u/1432989?s=64&v=4) ](https://github.com/timoa)
  * [ ![@lu4nx](https://avatars.githubusercontent.com/u/3006875?s=64&v=4) ](https://github.com/lu4nx)
  * [ ![@Natgho](https://avatars.githubusercontent.com/u/6623948?s=64&v=4) ](https://github.com/Natgho)
  * [ ![@ssoydan](https://avatars.githubusercontent.com/u/8239071?s=64&v=4) ](https://github.com/ssoydan)
  * [ ![@nelzomal](https://avatars.githubusercontent.com/u/8512926?s=64&v=4) ](https://github.com/nelzomal)
  * [ ![@IdrisHanafi](https://avatars.githubusercontent.com/u/14638987?s=64&v=4) ](https://github.com/IdrisHanafi)
  * [ ![@ntohidi](https://avatars.githubusercontent.com/u/17140097?s=64&v=4) ](https://github.com/ntohidi)
  * [ ![@darwing1210](https://avatars.githubusercontent.com/u/18296414?s=64&v=4) ](https://github.com/darwing1210)


[+ 21 contributors](https://github.com/unclecode/crawl4ai/graphs/contributors)
## Languages
  * [ Python 98.8% ](https://github.com/unclecode/crawl4ai/search?l=python)
  * Other 1.2%


## Footer
[ ](https://github.com "GitHub") © 2025 GitHub, Inc. 
### Footer navigation
  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)
  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)
  * [Security](https://github.com/security)
  * [Status](https://www.githubstatus.com/)
  * [Docs](https://docs.github.com/)
  * [Contact](https://support.github.com?tags=dotcom-footer)
  * Manage cookies 
  * Do not share my personal information 


You can’t perform that action at this time. 
