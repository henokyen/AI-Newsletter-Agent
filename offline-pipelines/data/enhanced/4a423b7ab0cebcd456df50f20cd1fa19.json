{
    "id": "4a423b7ab0cebcd456df50f20cd1fa19",
    "metadata": {
        "id": "4a423b7ab0cebcd456df50f20cd1fa19",
        "url": "https://towardsdatascience.com/create-mixtures-of-experts-with-mergekit-11b318c99562/",
        "title": "Create Mixtures of Experts with MergeKit | Towards Data Science",
        "properties": {
            "description": null,
            "keywords": null,
            "author": "Maxime Labonne",
            "og:locale": "en_US",
            "og:type": "article",
            "og:title": "Create Mixtures of Experts with MergeKit | Towards Data Science",
            "og:description": "Combine multiple models into a single MoE",
            "og:url": "https://towardsdatascience.com/create-mixtures-of-experts-with-mergekit-11b318c99562/",
            "og:site_name": "Towards Data Science",
            "og:image": "https://towardsdatascience.com/wp-content/uploads/2024/03/1kJ4ALMDzNaq9W88ZtVnhiQ.jpeg",
            "og:image:width": "1792",
            "og:image:height": "1024",
            "og:image:type": "image/jpeg",
            "twitter:card": "summary_large_image",
            "twitter:creator": "@TDataScience",
            "twitter:site": "@TDataScience",
            "twitter:label1": "Written by",
            "twitter:data1": "Maxime Labonne",
            "twitter:label2": "Est. reading time",
            "twitter:data2": "10 minutes"
        }
    },
    "parent_metadata": {
        "id": "1eff479d5ac2ac69cfbcf58f6a7b7908",
        "url": "https://www.notion.so/Merging-1eff479d5ac2ac69cfbcf58f6a7b7908",
        "title": "Merging",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](https://towardsdatascience.com/create-mixtures-of-experts-with-mergekit-11b318c99562/#wp--skip-link--target)\n[![Towards Data Science](https://towardsdatascience.com/wp-content/uploads/2025/02/TDS-Vector-Logo.svg)](https://towardsdatascience.com/)\nThe world‚Äôs leading publication for data science, AI, and ML professionals.\nSign in\nSign out\n[Contributor Portal](https://contributor.insightmediagroup.io/)\n  * [Latest](https://towardsdatascience.com/latest/)\n  * [Editor‚Äôs Picks](https://towardsdatascience.com/tag/editors-pick/)\n  * [Deep Dives](https://towardsdatascience.com/tag/deep-dives/)\n  * [Contribute](https://towardsdatascience.com/questions-96667b06af5/)\n  * [Newsletter](https://newsletter.towardsdatascience.com/subscription-to-the-newsletter)\n[![Towards Data Science](https://towardsdatascience.com/wp-content/uploads/2025/02/TDS-Vector-Logo.svg)](https://towardsdatascience.com/)\n\n\nToggle Mobile Navigation\n  * [LinkedIn](https://www.linkedin.com/company/towards-data-science/?originalSubdomain=ca)\n  * [X](https://x.com/TDataScience)\n\n\nToggle Search\nSearch\n[ Artificial Intelligence ](https://towardsdatascience.com/category/artificial-intelligence/)\n# Create Mixtures of Experts with MergeKit\nCombine multiple models into a single MoE \n[Maxime Labonne](https://towardsdatascience.com/author/mlabonne/)\nMar 27, 2024\n10 min read\nShare \n![Image by author](https://towardsdatascience.com/wp-content/uploads/2024/03/1kJ4ALMDzNaq9W88ZtVnhiQ.jpeg)Image by author\nThanks to the release of Mixtral, the **Mixture of Experts** (MoE) architecture has become popular in recent months. This architecture offers an interesting tradeoff: higher performance at the cost of increased VRAM usage. While Mixtral and other MoE architectures are pre-trained from scratch, another method of creating MoE has recently appeared. Thanks to Arcee‚Äôs [MergeKit](https://github.com/arcee-ai/mergekit) library, we now have a new way of creating MoEs by ensembling several pre-trained models. These are often referred to as **frankenMoEs** or **MoErges** to distinguish them from the pre-trained MoEs.\nIn this article, we will detail how the MoE architecture works and how frankenMoEs are created. Finally, we will make our [own frankenMoE](https://huggingface.co/mlabonne/Beyonder-4x7B-v3) with MergeKit and evaluate it on several benchmarks. The code is available on Google Colab in a wrapper called [LazyMergeKit](https://colab.research.google.com/drive/1obulZ1ROXHjYLn6PPZJwRR6GzgQogxxb#scrollTo=d5mYzDo1q96y).\nSpecial thanks to [Charles Goddard](https://github.com/cg123), the creator of MergeKit, for proofreading this article.\n## üîÄ Introduction to MoEs\nA Mixture of Experts is an architecture designed for improved efficiency and performance. It uses multiple specialized subnetworks, known as \"**experts**.\" Unlike dense models, where the entire network is activated, MoEs only activate relevant experts based on the input. This results in faster training and more efficient inference.\nThere are two components at the core of an MoE model:\n  1. **Sparse MoE Layers** : These replace the dense feed-forward network layers in the transformer architecture. Each MoE layer contains several experts, and only a subset of these experts are engaged for a given input.\n  2. **Gate Network or Router** : This component determines which tokens are processed by which experts, ensuring that each part of the input is handled by the most suitable expert(s).\n\n\nIn the following example, we show how a Mistral-7B block is transformed into an MoE block with a sparse MoE layer (feedforward network 1, 2, and 3) and a router. This example represents an MoE with three experts, where two are currently engaged (FFN 1 and FFN 3).\n![Image by author](https://towardsdatascience.com/wp-content/uploads/2024/03/1gGQxuStcGfSS_Boy9rKvAw.png)Image by author\nMoEs also come with their own set of challenges, especially in terms of fine-tuning and memory requirements. The fine-tuning process can be difficult due to the model‚Äôs complexity, with the need to **balance expert usage** during training to properly train the gating weights to select the most relevant ones. In terms of memory, even though only a fraction of the total parameters are used during inference, the entire model, including all experts, needs to be **loaded into memory** , which requires high VRAM capacity.\nMore specifically, there are two essential parameters when it comes to MoEs:\n  * **Number of experts** (`num_local_experts`): This determines the total number of experts in the architecture (e.g., 8 for Mixtral). The higher the number of experts, the higher the VRAM usage.\n  * **Number of experts/token** (`num_experts_per_tok`): This determines the number of experts that are engaged for each token and each layer (e.g., 2 for Mixtral). There is a tradeoff between a high number of experts per token for accuracy (but diminishing returns) vs. a low number for fast training and inference.\n\n\nHistorically, MoEs have underperformed dense models. However, the release of [Mixtral-8x7B](https://arxiv.org/abs/2401.04088) in December 2023 shook things up and showed impressive performance for its size. Additionally, GPT-4 is also rumored to be an MoE, which would make sense as it would be a lot cheaper to run and train for OpenAI compared to a dense model. In addition to these recent excellent MoEs, we now have a new way of creating MoEs with MergeKit: frankenMoEs, also called MoErges.\n## üßü‚Äç‚ôÇÔ∏è True MoEs vs. frankenMoEs\nThe main difference between true MoEs and frankenMoEs is how they‚Äôre trained. In the case of true MoEs, the experts and the router are trained jointly. In the case of frankenMoEs, we upcycle existing models and initialize the router afterward.\nIn other words, we copy the weights of the layer norm and self-attention layers from a base model, and then copy the weights of the FFN layers found in each expert. This means that besides the FFNs, all the other parameters are shared. This explains why Mixtral-8x7B with eight experts doesn‚Äôt have 8*7 = 56B parameters, but about 45B. This is also why using two experts per token gives the inference speed (FLOPs) of a 12B dense model instead of 14B.\nFrankenMoEs are about selecting the most relevant experts and initializing them properly. MergeKit currently implements three ways of initializing the routers:\n  1. **[Random](https://github.com/arcee-ai/mergekit/blob/9c691527f7192b5a2fc388555bfd3105e0898480/mergekit/scripts/mixtral_moe.py#L139-L142)** : Random weights. Be careful when using it as the same experts might be selected every time (it requires further fine-tuning or `num_local_experts = num_experts_per_tok`, which means you don‚Äôt need any routing).\n  2. **[Cheap embed](https://github.com/arcee-ai/mergekit/blob/9c691527f7192b5a2fc388555bfd3105e0898480/mergekit/scripts/mixtral_moe.py#L91C1-L109C37)** : It uses the raw embeddings of the input tokens directly and applies the same transformation across all layers. This method is computationally inexpensive and suitable for execution on less powerful hardware.\n  3. **[Hidden](https://github.com/arcee-ai/mergekit/blob/9c691527f7192b5a2fc388555bfd3105e0898480/mergekit/scripts/mixtral_moe.py#L70-L88)** : It creates hidden representations of a list of positive and negative prompts by extracting them from the last layer of the LLM. They are averaged and normalized to initialize the gates. More information about it is available on [Charles Goddard‚Äôs blog](https://goddard.blog/posts/clown-moe/).\n\n\nAs you can guess, the \"hidden\" initialization is the most efficient to correctly route the tokens to the most relevant experts. In the next section, we will create our own frankenMoE using this technique.\n## üíª Creating a frankenMoE\nTo create our frankenMoE, we need to select `n` experts. In this case, we will rely on Mistral-7B thanks to its popularity and relatively small size. However, eight experts like in Mixtral is quite a lot, as we need to fit all of them in memory. For efficiency, I‚Äôll only use four experts in this example, with two of them engaged for each token and each layer. In this case, we will end up with a model with 24.2B parameters instead of 4*7 = 28B parameters.\nHere, our goal is to create a well-rounded model that can do pretty much everything: write stories, explain articles, code in Python, etc. We can decompose this requirement into four tasks and select the best expert for each of them. This is how I decomposed it:\n  * **Chat model** : a general-purpose model that is used in most interactions. I used [mlabonne/AlphaMonarch-7B](https://huggingface.co/mlabonne/AlphaMonarch-7B), which perfectly satisfies the requirements.\n  * **Code model** : a model capable of generating good code. I don‚Äôt have a lot of experience with Mistral-7B-based code models, but I found [beowolx/CodeNinja-1.0-OpenChat-7B](https://huggingface.co/beowolx/CodeNinja-1.0-OpenChat-7B) particularly good compared to others.\n  * **Math model** : math is tricky for LLMs, which is why we want a model specialized in math. Thanks to its high MMLU and GMS8K scores, I chose [mlabonne/NeuralDaredevil-7B](https://huggingface.co/mlabonne/NeuralDaredevil-7B) for this purpose.\n  * **Role-play model** : The goal of this model is to write high-quality stories and conversations. I selected [SanjiWatsuki/Kunoichi-DPO-v2‚Äì7B](https://huggingface.co/SanjiWatsuki/Kunoichi-DPO-v2-7B) because of its good reputation and high MT-Bench score (8.51 vs. 8.30 for Mixtral).\n\n\nNow that we‚Äôve identified the experts we want to use, we can create the YAML configuration that MergeKit will use to create our frankenMoE. This uses the mixtral branch of MergeKit. You can find more information about how to write the configuration [on this page](https://github.com/arcee-ai/mergekit/blob/mixtral/docs/moe.md). Here is our version:\n```\nbase_model: mlabonne/AlphaMonarch-7B\nexperts:\n - source_model: mlabonne/AlphaMonarch-7B\n  positive_prompts:\n  - \"chat\"\n  - \"assistant\"\n  - \"tell me\"\n  - \"explain\"\n  - \"I want\"\n - source_model: beowolx/CodeNinja-1.0-OpenChat-7B\n  positive_prompts:\n  - \"code\"\n  - \"python\"\n  - \"javascript\"\n  - \"Programming\"\n  - \"algorithm\"\n - source_model: SanjiWatsuki/Kunoichi-DPO-v2-7B\n  positive_prompts:\n  - \"storywriting\"\n  - \"write\"\n  - \"scene\"\n  - \"story\"\n  - \"character\"\n - source_model: mlabonne/NeuralDaredevil-7B\n  positive_prompts:\n  - \"reason\"\n  - \"math\"\n  - \"mathematics\"\n  - \"solve\"\n  - \"count\"\n```\n\nFor each expert, I provide five basic positive prompts. You can be a bit fancier and write entire sentences if you want. The best strategy consists of using real prompts that should trigger a particular expert. You can also add negative prompts to do the opposite.\nOnce this is ready, you can save your configuration as `config.yaml`. In the same folder, we will download and install the [mergekit](https://github.com/arcee-ai/mergekit) library (mixtral branch).\n```\ngit clone -b mixtral https://github.com/arcee-ai/mergekit.git\ncd mergekit &amp;&amp; pip install -e .\npip install -U transformers\n```\n\nIf your computer has enough RAM (roughly 24‚Äì32 GB of RAM), you can run the following command:\n```\nmergekit-moe config.yaml merge --copy-tokenizer\n```\n\nIf you don‚Äôt have enough RAM, you can shard the models instead as follows (it will take longer):\n```\nmergekit-moe config.yaml merge --copy-tokenizer --allow-crimes --out-shard-size 1B --lazy-unpickle\n```\n\nThis command automatically downloads the experts and creates the frankenMoE in the `merge` directory. For the `hidden` gate mode, you can also use the `--load-in-4bit` and `--load-in-8bit` options to compute hidden states with lower precision.\nAlternatively, you can copy your configuration into [LazyMergekit](https://colab.research.google.com/drive/1obulZ1ROXHjYLn6PPZJwRR6GzgQogxxb#scrollTo=d5mYzDo1q96y), a wrapper I made to simplify model merging. In this Colab notebook, you can input your model name, select the `mixtral` branch, specify your Hugging Face username/token, and run the cells. After creating your frankenMoE, it will also upload it to the Hugging Face Hub with a nicely formatted model card.\nI called my model [Beyonder-4x7B-v3](https://huggingface.co/mlabonne/Beyonder-4x7B-v3) and created [GGUF versions](https://huggingface.co/mlabonne/Beyonder-4x7B-v3-GGUF) of it using [AutoGGUF](https://colab.research.google.com/drive/1P646NEg33BZy4BfLDNpTz0V0lwIU3CHu#scrollTo=fD24jJxq7t3k). If you can‚Äôt run GGUF versions on your local machine, you can also perform inference using this [Colab notebook](https://colab.research.google.com/drive/1SIfwhpLttmoZxT604LGVXDOI9UKZ_1Aq?usp=sharing).\nTo get a good overview of its capabilities, it has been evaluated on three different benchmarks: Nous‚Äô benchmark suite, EQ-Bench, and the Open LLM Leaderboard. This model is not designed to excel in traditional benchmarks, as the code and role-playing models generally do not apply to those contexts. Nonetheless, it performs remarkably well thanks to strong general-purpose experts.\n**Nous** : Beyonder-4x7B-v3 is one of the best models on Nous‚Äô benchmark suite (evaluation performed using [LLM AutoEval](https://github.com/mlabonne/llm-autoeval)) and significantly outperforms the v2. See the entire leaderboard [here](https://huggingface.co/spaces/mlabonne/Yet_Another_LLM_Leaderboard).\n![](https://towardsdatascience.com/wp-content/uploads/2024/03/0MTWS0BgqX17yq9qa.png)\n**EQ-Bench** : It‚Äôs also the best 4x7B model on the [EQ-Bench leaderboard](https://eqbench.com/), outperforming older versions of ChatGPT and Llama-2‚Äì70b-chat. Beyonder is very close to Mixtral-8x7B-Instruct-v0.1 and Gemini Pro, which are (supposedly) much bigger models.\n![](https://towardsdatascience.com/wp-content/uploads/2024/03/0ebG79Y254SJp58KG.png)\n**Open LLM Leaderboard** : Finally, it‚Äôs also a strong performer on the Open LLM Leaderboard, significantly outperforming the v2 model.\n![](https://towardsdatascience.com/wp-content/uploads/2024/03/0RpN_fYTFfzxvSJ66.png)\nOn top of these quantitative evaluations, I recommend checking the model‚Äôs outputs in a more qualitative way using a GGUF version on [LM Studio](https://lmstudio.ai/). A common way of testing these models is to gather a private set of questions and check their outputs. With this strategy, I found that Beyonder-4x7B-v3 is quite robust to changes in the user and system prompts compared to other models, including AlphaMonarch-7B. This is pretty cool as it improves the usefulness of the model in general.\nFrankenMoEs are a promising but still experimental approach. The trade-offs, like higher VRAM demand and slower inference speeds, can make it challenging to see their advantage over simpler merging techniques like SLERP or DARE TIES. Especially, when you use frankenMoEs with just two experts, they might not perform as well as if you had simply merged the two models. However, frankenMoEs excel in preserving knowledge, which can result in stronger models, as demonstrated by Beyonder-4x7B-v3. With the right hardware, these drawbacks can be effectively mitigated.\n## Conclusion\nIn this article, we introduced the Mixture of Experts architecture. Unlike traditional MoEs that are trained from scratch, MergeKit facilitates the creation of MoEs by ensembling experts, offering an innovative approach to improving model performance and efficiency. We detailed the process of creating a frankenMoE with MergeKit, highlighting the practical steps involved in selecting and combining different experts to produce a high-quality MoE.\nThanks for reading this article. I encourage you to try to make your own FrankenMoEs using [LazyMergeKit](https://colab.research.google.com/drive/1obulZ1ROXHjYLn6PPZJwRR6GzgQogxxb#scrollTo=d5mYzDo1q96y): select a few models, create your config based Beyonder‚Äôs, and run the notebook to create your own models! If you liked this article, please follow me on [Hugging Face](https://huggingface.co/mlabonne) and X/Twitter [@maximelabonne](https://twitter.com/maximelabonne).\n## References\n  * [Mixtral of Experts](https://arxiv.org/abs/2401.04088) by Jiang et al. (2023)\n  * [Mixture of Experts for Clowns](https://goddard.blog/posts/clown-moe/) by Charles Goddard (2023)\n  * [Mixture of Experts Explained](https://huggingface.co/blog/moe) by Sanseviero et al. (2023)\n  * [Adaptive Mixture of Local Experts](https://www.cs.toronto.edu/~hinton/absps/jjnh91.pdf) by Jacobs et al. (1991)\n  * [Sparse Upcycling: Training Mixture-of-Experts from Dense Checkpoints](https://arxiv.org/abs/2212.05055) by Komatsuzaki et al. (2022)\n\n\n_Learn more about machine learning and support my work with one click ‚Äì become a Medium member here:_\n> [**Join Medium with my referral link ‚Äì Maxime Labonne**](https://medium.com/@mlabonne/membership)\nWritten By\nMaxime Labonne\n[See all from Maxime Labonne](https://towardsdatascience.com/author/mlabonne/)\nTopics:\n[Artificial Intelligence](https://towardsdatascience.com/tag/artificial-intelligence/), [Data Science](https://towardsdatascience.com/tag/data-science/), [Editors Pick](https://towardsdatascience.com/tag/editors-pick/), [Large Language Models](https://towardsdatascience.com/tag/large-language-models/), [Programming](https://towardsdatascience.com/tag/programming/)\nShare this article:\n  * [ Share on Facebook  ](https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-mixtures-of-experts-with-mergekit-11b318c99562%2F&title=Create%20Mixtures%20of%20Experts%20with%20MergeKit)\n  * [ Share on LinkedIn  ](https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-mixtures-of-experts-with-mergekit-11b318c99562%2F&title=Create%20Mixtures%20of%20Experts%20with%20MergeKit)\n  * [ Share on X  ](https://x.com/share?url=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-mixtures-of-experts-with-mergekit-11b318c99562%2F&text=Create%20Mixtures%20of%20Experts%20with%20MergeKit)\n\n\n## Related Articles\n  * ![](https://towardsdatascience.com/wp-content/uploads/2024/08/0c09RmbCCpfjAbSMq.png)\n## [Implementing Convolutional Neural Networks in TensorFlow](https://towardsdatascience.com/implementing-convolutional-neural-networks-in-tensorflow-bc1c4f00bd34/)\n[ Artificial Intelligence ](https://towardsdatascience.com/category/artificial-intelligence/)\nStep-by-step code guide to building a Convolutional Neural Network \n[Shreya Rao](https://towardsdatascience.com/author/shreya-rao/)\nAugust 20, 2024\n6 min read\n  * ## [What Do Large Language Models ‚ÄúUnderstand‚Äù?](https://towardsdatascience.com/what-do-large-language-models-understand-befdb4411b77/)\n[ Artificial Intelligence ](https://towardsdatascience.com/category/artificial-intelligence/)\nA deep dive on the meaning of understanding and how it applies to LLMs \n[Tarik Dzekman](https://towardsdatascience.com/author/tarikdzekman/)\nAugust 21, 2024\n31 min read\n  * ![Photo by Krista Mangulsone on Unsplash](https://towardsdatascience.com/wp-content/uploads/2024/08/0GyVVTbgotH-DhGPH-scaled.jpg)\n## [How to Forecast Hierarchical Time Series](https://towardsdatascience.com/how-to-forecast-hierarchical-time-series-75f223f79793/)\n[ Artificial Intelligence ](https://towardsdatascience.com/category/artificial-intelligence/)\nA beginner‚Äôs guide to forecast reconciliation \n[Dr. Robert K√ºbler](https://towardsdatascience.com/author/dr-robert-kuebler/)\nAugust 20, 2024\n13 min read\n  * ![Photo by davisuko on Unsplash](https://towardsdatascience.com/wp-content/uploads/2024/08/1bAABgtZtAIG5YW1oEjW3pA-scaled.jpeg)\n## [Hands-on Time Series Anomaly Detection using Autoencoders, with Python](https://towardsdatascience.com/hands-on-time-series-anomaly-detection-using-autoencoders-with-python-7cd893bbc122/)\n[ Data Science ](https://towardsdatascience.com/category/data-science/)\nHere‚Äôs how to use Autoencoders to detect signals with anomalies in a few lines of‚Ä¶ \n[Piero Paialunga](https://towardsdatascience.com/author/piero-paialunga/)\nAugust 21, 2024\n12 min read\n  * ## [Solving a Constrained Project Scheduling Problem with Quantum Annealing](https://towardsdatascience.com/solving-a-constrained-project-scheduling-problem-with-quantum-annealing-d0640e657a3b/)\n[ Data Science ](https://towardsdatascience.com/category/data-science/)\nSolving the resource constrained project scheduling problem (RCPSP) with D-Wave‚Äôs hybrid constrained quadratic model (CQM) \n[Luis Fernando P√âREZ ARMAS, Ph.D.](https://towardsdatascience.com/author/luisfernandopa1212/)\nAugust 20, 2024\n29 min read\n  * ![](https://towardsdatascience.com/wp-content/uploads/2023/02/1VEUgT5T4absnTqBMOEuNig.png)\n## [Back To Basics, Part Uno: Linear Regression and Cost Function](https://towardsdatascience.com/back-to-basics-part-uno-linear-regression-cost-function-and-gradient-descent-590dcb3eee46/)\n[ Data Science ](https://towardsdatascience.com/category/data-science/)\nAn illustrated guide on essential machine learning concepts \n[Shreya Rao](https://towardsdatascience.com/author/shreya-rao/)\nFebruary 3, 2023\n6 min read\n  * ![](https://towardsdatascience.com/wp-content/uploads/2024/08/1kM8tfYcdaoccB1HX71YDig.png)\n## [Must-Know in Statistics: The Bivariate Normal Projection Explained](https://towardsdatascience.com/must-know-in-statistics-the-bivariate-normal-projection-explained-ace7b2f70b5b/)\n[ Data Science ](https://towardsdatascience.com/category/data-science/)\nDerivation and practical examples of this powerful concept \n[Luigi Battistoni](https://towardsdatascience.com/author/lu-battistoni/)\nAugust 14, 2024\n7 min read\n  * ![Photo by Jess Bailey on Unsplash](https://towardsdatascience.com/wp-content/uploads/2022/09/11tHmNYFaWWtWG5I7bNeN6g-scaled.jpeg)\n## [How to Make the Most of Your Experience as a TDS Author](https://towardsdatascience.com/how-to-make-the-most-of-your-experience-as-a-tds-author-b1e056be63f1/)\n[ Data Science ](https://towardsdatascience.com/category/data-science/)\nA quick guide to our resources and FAQ \n[TDS Editors](https://towardsdatascience.com/author/towardsdatascience/)\nSeptember 13, 2022\n4 min read\n  * ![Photo by Alex Geerts on Unsplash](https://towardsdatascience.com/wp-content/uploads/2020/11/0BF38u2sw4WQdaMLS-scaled.jpg)\n## [Our Columns](https://towardsdatascience.com/our-columns-53501f74c86d/)\n[ Data Science ](https://towardsdatascience.com/category/data-science/)\nColumns on TDS are carefully curated collections of posts on a particular idea or category‚Ä¶ \n[TDS Editors](https://towardsdatascience.com/author/towardsdatascience/)\nNovember 14, 2020\n4 min read\n\n\n  * [YouTube](https://www.youtube.com/c/TowardsDataScience)\n  * [X](https://x.com/TDataScience)\n  * [LinkedIn](https://www.linkedin.com/company/towards-data-science/?originalSubdomain=ca)\n  * [Threads](https://www.threads.net/@towardsdatascience)\n  * [Bluesky](https://bsky.app/profile/towardsdatascience.com)\n\n\n[![Towards Data Science](https://towardsdatascience.com/wp-content/uploads/2025/02/TDS-Vector-Logo.svg)](https://towardsdatascience.com/)\nYour home for data science and Al. The world‚Äôs leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals.\n¬©  Insight Media Group, LLC 2025 \n  * [About](https://towardsdatascience.com/about-towards-data-science-d691af11cc2f/)\n  * [Privacy Policy](https://towardsdatascience.com/privacy-policy/)\n  * [Terms of Use](https://towardsdatascience.com/website-terms-of-use/)\n\n\n[Towards Data Science is now independent!](https://towardsdatascience.com/towards-data-science-is-launching-as-an-independent-publication/)\nCookies Settings\n## Sign up to our newsletter\nEmail address*\nFirst name*\nLast name*\nJob title*\nJob level*\nPlease SelectC-LevelVP/DirectorManager/SupervisorMid Level or Senior Non-Managerial StaffEntry Level/Junior StaffFreelancer/ContractorStudent/InternOther\nCompany name*\n  * I consent to receive newsletters and other communications from Towards Data Science publications.*\n\n\n![Company Logo](https://cdn.cookielaw.org/logos/static/ot_company_logo.png)\n## Privacy Preference Center\nWhen you visit any website, it may store or retrieve information on your browser, mostly in the form of cookies. This information might be about you, your preferences or your device and is mostly used to make the site work as you expect it to. The information does not usually directly identify you, but it can give you a more personalized web experience. Because we respect your right to privacy, you can choose not to allow some types of cookies. Click on the different category headings to find out more and change our default settings. However, blocking some types of cookies may impact your experience of the site and the services we are able to offer. [More information](https://cookiepedia.co.uk/giving-consent-to-cookies)\nAllow All\n###  Manage Consent Preferences\n#### Functional Cookies\nFunctional Cookies Active\nThese cookies enable the website to provide enhanced functionality and personalisation. They may be set by us or by third party providers whose services we have added to our pages. If you do not allow these cookies then some or all of these services may not function properly.\n#### Strictly Necessary Cookies\nAlways Active\nThese cookies are necessary for the website to function and cannot be switched off in our systems. They are usually only set in response to actions made by you which amount to a request for services, such as setting your privacy preferences, logging in or filling in forms. You can set your browser to block or alert you about these cookies, but some parts of the site will not then work. These cookies do not store any personally identifiable information.\n#### Performance Cookies\nPerformance Cookies Active\nThese cookies allow us to count visits and traffic sources so we can measure and improve the performance of our site. They help us to know which pages are the most and least popular and see how visitors move around the site. All information these cookies collect is aggregated and therefore anonymous. If you do not allow these cookies we will not know when you have visited our site, and will not be able to monitor its performance.\n#### Targeting Cookies\nTargeting Cookies Active\nThese cookies may be set through our site by our advertising partners. They may be used by those companies to build a profile of your interests and show you relevant adverts on other sites. They do not store directly personal information, but are based on uniquely identifying your browser and internet device. If you do not allow these cookies, you will experience less targeted advertising.\nBack Button\n### Cookie List\nSearch Icon\nFilter Icon\nClear\ncheckbox label label\nApply Cancel\nConsent Leg.Interest\ncheckbox label label\ncheckbox label label\ncheckbox label label\nReject All Confirm My Choices\n[![Powered by Onetrust](https://cdn.cookielaw.org/logos/static/powered_by_logo.svg)](https://www.onetrust.com/products/cookie-consent/)\nSome areas of this page may shift around if you resize the browser window. Be sure to check heading and document order.\n",
    "content_quality_score": 0.8,
    "summary": null,
    "child_urls": [
        "https://towardsdatascience.com/create-mixtures-of-experts-with-mergekit-11b318c99562/#wp--skip-link--target",
        "https://towardsdatascience.com/",
        "https://towardsdatascience.com/latest/",
        "https://towardsdatascience.com/tag/editors-pick/",
        "https://towardsdatascience.com/tag/deep-dives/",
        "https://towardsdatascience.com/questions-96667b06af5/",
        "https://newsletter.towardsdatascience.com/subscription-to-the-newsletter",
        "https://towardsdatascience.com/category/artificial-intelligence/",
        "https://towardsdatascience.com/author/mlabonne/",
        "https://towardsdatascience.com/tag/artificial-intelligence/",
        "https://towardsdatascience.com/tag/data-science/",
        "https://towardsdatascience.com/tag/large-language-models/",
        "https://towardsdatascience.com/tag/programming/",
        "https://towardsdatascience.com/implementing-convolutional-neural-networks-in-tensorflow-bc1c4f00bd34/",
        "https://towardsdatascience.com/author/shreya-rao/",
        "https://towardsdatascience.com/what-do-large-language-models-understand-befdb4411b77/",
        "https://towardsdatascience.com/author/tarikdzekman/",
        "https://towardsdatascience.com/how-to-forecast-hierarchical-time-series-75f223f79793/",
        "https://towardsdatascience.com/author/dr-robert-kuebler/",
        "https://towardsdatascience.com/hands-on-time-series-anomaly-detection-using-autoencoders-with-python-7cd893bbc122/",
        "https://towardsdatascience.com/category/data-science/",
        "https://towardsdatascience.com/author/piero-paialunga/",
        "https://towardsdatascience.com/solving-a-constrained-project-scheduling-problem-with-quantum-annealing-d0640e657a3b/",
        "https://towardsdatascience.com/author/luisfernandopa1212/",
        "https://towardsdatascience.com/back-to-basics-part-uno-linear-regression-cost-function-and-gradient-descent-590dcb3eee46/",
        "https://towardsdatascience.com/must-know-in-statistics-the-bivariate-normal-projection-explained-ace7b2f70b5b/",
        "https://towardsdatascience.com/author/lu-battistoni/",
        "https://towardsdatascience.com/how-to-make-the-most-of-your-experience-as-a-tds-author-b1e056be63f1/",
        "https://towardsdatascience.com/author/towardsdatascience/",
        "https://towardsdatascience.com/our-columns-53501f74c86d/",
        "https://towardsdatascience.com/about-towards-data-science-d691af11cc2f/",
        "https://towardsdatascience.com/privacy-policy/",
        "https://towardsdatascience.com/website-terms-of-use/",
        "https://towardsdatascience.com/towards-data-science-is-launching-as-an-independent-publication/",
        "https://contributor.insightmediagroup.io/",
        "https://www.linkedin.com/company/towards-data-science/?originalSubdomain=ca",
        "https://x.com/TDataScience",
        "https://github.com/arcee-ai/mergekit",
        "https://huggingface.co/mlabonne/Beyonder-4x7B-v3",
        "https://colab.research.google.com/drive/1obulZ1ROXHjYLn6PPZJwRR6GzgQogxxb#scrollTo=d5mYzDo1q96y",
        "https://github.com/cg123",
        "https://arxiv.org/abs/2401.04088",
        "https://github.com/arcee-ai/mergekit/blob/9c691527f7192b5a2fc388555bfd3105e0898480/mergekit/scripts/mixtral_moe.py#L139-L142",
        "https://github.com/arcee-ai/mergekit/blob/9c691527f7192b5a2fc388555bfd3105e0898480/mergekit/scripts/mixtral_moe.py#L91C1-L109C37",
        "https://github.com/arcee-ai/mergekit/blob/9c691527f7192b5a2fc388555bfd3105e0898480/mergekit/scripts/mixtral_moe.py#L70-L88",
        "https://goddard.blog/posts/clown-moe/",
        "https://huggingface.co/mlabonne/AlphaMonarch-7B",
        "https://huggingface.co/beowolx/CodeNinja-1.0-OpenChat-7B",
        "https://huggingface.co/mlabonne/NeuralDaredevil-7B",
        "https://huggingface.co/SanjiWatsuki/Kunoichi-DPO-v2-7B",
        "https://github.com/arcee-ai/mergekit/blob/mixtral/docs/moe.md",
        "https://huggingface.co/mlabonne/Beyonder-4x7B-v3-GGUF",
        "https://colab.research.google.com/drive/1P646NEg33BZy4BfLDNpTz0V0lwIU3CHu#scrollTo=fD24jJxq7t3k",
        "https://colab.research.google.com/drive/1SIfwhpLttmoZxT604LGVXDOI9UKZ_1Aq?usp=sharing",
        "https://github.com/mlabonne/llm-autoeval",
        "https://huggingface.co/spaces/mlabonne/Yet_Another_LLM_Leaderboard",
        "https://eqbench.com/",
        "https://lmstudio.ai/",
        "https://huggingface.co/mlabonne",
        "https://twitter.com/maximelabonne",
        "https://huggingface.co/blog/moe",
        "https://www.cs.toronto.edu/~hinton/absps/jjnh91.pdf",
        "https://arxiv.org/abs/2212.05055",
        "https://medium.com/@mlabonne/membership",
        "https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-mixtures-of-experts-with-mergekit-11b318c99562%2F&title=Create%20Mixtures%20of%20Experts%20with%20MergeKit",
        "https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-mixtures-of-experts-with-mergekit-11b318c99562%2F&title=Create%20Mixtures%20of%20Experts%20with%20MergeKit",
        "https://x.com/share?url=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-mixtures-of-experts-with-mergekit-11b318c99562%2F&text=Create%20Mixtures%20of%20Experts%20with%20MergeKit",
        "https://www.youtube.com/c/TowardsDataScience",
        "https://www.threads.net/@towardsdatascience",
        "https://bsky.app/profile/towardsdatascience.com",
        "https://cookiepedia.co.uk/giving-consent-to-cookies",
        "https://www.onetrust.com/products/cookie-consent/"
    ]
}