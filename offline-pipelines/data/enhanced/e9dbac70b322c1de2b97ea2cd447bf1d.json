{
    "id": "e9dbac70b322c1de2b97ea2cd447bf1d",
    "metadata": {
        "id": "e9dbac70b322c1de2b97ea2cd447bf1d",
        "url": "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/",
        "title": "Navigating the MLOps Galaxy: ZenML meets Neptune for advanced Experiment Tracking - ZenML Blog",
        "properties": {
            "description": "The combination of ZenML and Neptune can streamline machine learning workflows and provide unprecedented visibility into experiments. ZenML is an extensible framework for creating production-ready pipelines, while Neptune is a metadata store for MLOps. When combined, these tools offer a robust solution for managing the entire ML lifecycle, from experimentation to production. The combination of these tools can significantly accelerate the development process, especially when working with complex tasks like language model fine-tuning. This integration offers the ability to focus more on innovating and less on managing the intricacies of your ML pipelines.",
            "keywords": null,
            "author": null,
            "og:title": "Navigating the MLOps Galaxy: ZenML meets Neptune for advanced Experiment Tracking - ZenML Blog",
            "og:description": "The combination of ZenML and Neptune can streamline machine learning workflows and provide unprecedented visibility into experiments. ZenML is an extensible framework for creating production-ready pipelines, while Neptune is a metadata store for MLOps. When combined, these tools offer a robust solution for managing the entire ML lifecycle, from experimentation to production. The combination of these tools can significantly accelerate the development process, especially when working with complex tasks like language model fine-tuning. This integration offers the ability to focus more on innovating and less on managing the intricacies of your ML pipelines.",
            "og:image": "https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/66ed4f21f4a21172a9d96e2c_Blog%20Post%20-%20with%20image%20-%20Light.png",
            "og:type": "website",
            "twitter:card": "summary_large_image"
        }
    },
    "parent_metadata": {
        "id": "9f5cee690ac9f7d9a7b882ab292d66b1",
        "url": "https://www.notion.so/Reproducibility-9f5cee690ac9f7d9a7b882ab292d66b1",
        "title": "Reproducibility",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[![Logo](https://cdn.prod.website-files.com/64a817a2e7e2208272d1ce30/65255680bc6fa3c9a26b3ec4_untitled-ui-logo.webp)![The image is blank, so there are no elements to describe or keywords to apply.](https://cdn.prod.website-files.com/64a817a2e7e2208272d1ce30/6525583e3561d9a2bf3dc002_Vectors-Wrapper.svg)](https://www.zenml.io/)\nProduct\nDATA SCience\n[Iterate at warp speedAccelerate your ML workflow seamlessly](https://www.zenml.io/features/iterate-at-warp-speed)[Auto-track everythingAutomatic logging and versioning](https://www.zenml.io/features/auto-track-everything)[Shared ML building blocksBoost team productivity with reusable components](https://www.zenml.io/features/shared-ml-building-blocks)\nInfrastructure\n[Backend flexibility, zero lock-inOne framework for all your MLOps and LLMOps needs](https://www.zenml.io/features/backend-flexibility-zero-lock-in)[Limitless scalingEffortlessly deploy across clouds](https://www.zenml.io/features/limitless-scaling)[Streamline cloud expensesGain clarity on resource usage and costs](https://www.zenml.io/features/streamline-cloud-expenses)\nOrganization\n[ZenML ProOur managed control plane for MLOps](https://www.zenml.io/pro)[ZenML vs Other ToolsCompare ZenML to other ML tools](https://www.zenml.io/compare)[Integrations50+ integrations to ease your workflow](https://www.zenml.io/integrations)\nSolutions\nGENAI & LLMS\n[Finetuning LLMsCustomize large language models for specific tasks](https://github.com/zenml-io/zenml-projects/tree/main/llm-lora-finetuning)[Productionalizing a RAG applicationDeploy and scale RAG systems](https://docs.zenml.io/user-guide/llmops-guide)[LLMOps DatabaseA curated knowledge base of real-world implementations](https://www.zenml.io/llmops-database)\nmlops\n[Building Enterprise MLOpsPlatform architecture and best practices](https://www.zenml.io/whitepaper-architecting-an-enterprise-grade-mlops-platform)[Abstract cloud computeSimplify management of cloud-based ML resources](https://www.zenml.io/features/backend-flexibility-zero-lock-in)[Track metrics and metadataMonitor and analyze ML model performance and data](https://docs.zenml.io/user-guide/starter-guide/track-ml-models)\nSuccess Stories\n[![Teal \"adeo\" logo on a white background.](https://cdn.prod.website-files.com/64a817a2e7e2208272d1ce30/65ddeac9b6199bfeb57b7223_adeo_logo-min.png)![Green triangle logo with the words \"Leroy Merlin\" in black text.](https://cdn.prod.website-files.com/64a817a2e7e2208272d1ce30/65c49832a235dab4e3e0a3ce_leroy-merlin.svg)Adeo Leroy MerlinRetail](https://www.zenml.io/case-study/adeo-leroy-merlin)[![Logo of Brevo, previously known as Sendinblue, displayed in green and black text.](https://cdn.prod.website-files.com/64a817a2e7e2208272d1ce30/652d3e5d29d36f927c2bb623_brevo.webp)BrevoEmail Marketing](https://www.zenml.io/case-study/brevo)\nDevelopers\nDocumentation\n[DocsComprehensive guides to use ZenML](https://docs.zenml.io)[Deploying ZenML Understanding ZenML system architecture](https://www.zenml.io/deployments)[TutorialsComprehensive guides to use ZenML](https://docs.zenml.io/getting-started/deploying-zenml)\n[GUIDES](https://docs.zenml.io/user-guide/starter-guide)[QuickstartQuickly get your hands dirty](https://colab.research.google.com/github/zenml-io/zenml/blob/main/examples/quickstart/quickstart.ipynb)[ShowcaseProjects of ML use cases built with ZenML](https://www.zenml.io/projects)[Starter GuideGet started with the basics](https://docs.zenml.io/user-guide/starter-guide)\nCOMMUNITY\n[SlackJoin our Slack Community](https://www.zenml.io/slack)[ChangelogDiscover what’s new on ZenML](https://community.zenml.io/changelog)[RoadmapJoin us on our MLOps journey](https://www.zenml.io/roadmap)\n[Pricing](https://www.zenml.io/pricing)[Blog](https://www.zenml.io/blog)\n[Sign In](https://cloud.zenml.io/login)[Start Free](https://cloud.zenml.io/signup?utm_source=website&utm_medium=website_nav&utm_campaign=cloud_promotion&utm_content=signup_link)\n[Software Engineering](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/)\n# Navigating the MLOps Galaxy: ZenML meets Neptune for advanced Experiment Tracking\n![](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/652f8dcd929fdbade2b3639a_hamza.png)\nHamza Tahir\nSep 21, 2024\n•\n6 mins\n[All posts](https://www.zenml.io/blog)\n[Tutorials](https://www.zenml.io/category/tutorials)\nContents\n[Pre-Experiment Documentation ](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#pre-experiment-documentation-)[Data Versioning Protocol ](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#data-versioning-protocol-)[Experiment Metadata System ](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#experiment-metadata-system-)[A Real-World Example: Fine-Tuning a Language Model](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#a-real-world-example-fine-tuning-a-language-model)[Beyond Tools: Building a Culture of Experiment Tracking](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#beyond-tools-building-a-culture-of-experiment-tracking)[Conclusion: Fix Your Workflow First](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#conclusion-fix-your-workflow-first)\nRelated Posts\n[![Huggingface Model to Sagemaker Endpoint: Automating MLOps with ZenML](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/6556276e837f48a1862d831f_training_pipeline_overview.png)Huggingface Model to Sagemaker Endpoint: Automating MLOps with ZenML](https://www.zenml.io/blog/huggingface-to-sagemaker)\n[![ZenML + Kubernetes + Kubeflow: Leveraging your MLOps infrastructure](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/668ea9a1c8c67436ee659924_zenml-kubernetes-kubeflow-cover.webp)ZenML + Kubernetes + Kubeflow: Leveraging your MLOps infrastructure](https://www.zenml.io/blog/zenml-kubernetes-kubeflow)\n[![Productionalizing NLP models with ZenML](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/6567014b2e7cc3f24fdd8739_hfs01.png)Productionalizing NLP models with ZenML](https://www.zenml.io/blog/productionalizing-nlp-models-with-zenml)\n[This is also a heading](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/)[This is a heading](https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/)\n![Navigating the MLOps Galaxy: ZenML meets Neptune for advanced Experiment Tracking](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/66ed4f21f4a21172a9d96e2c_Blog%20Post%20-%20with%20image%20-%20Light.png)\nLet's start with a reality check that might feel uncomfortably familiar. In 2024, where does 90% of your model iteration history actually live?\n  * Jupyter notebooks named \"final_v3_REALLY_FINAL.ipynb\"\n  * Random experiment runs with commit hashes that don't exist anymore\n  * That one CSV your colleague sent over Slack last month\n  * Your browser history because you forgot to save the tensorboard URL\n\n\nSound familiar? You're not alone. While the MLOps ecosystem offers countless tools for experiment tracking, many teams still struggle with these basic challenges. Here's why: **We've been treating experiment tracking as a tooling problem when it's fundamentally a workflow problem.**\n# The Three Deadly Sins of ML Experiment Tracking\nBefore we dive into solutions, let's acknowledge the workflow mistakes that plague even well-equipped teams:\n  1. **Running Experiments Before Defining What We're Measuring**\n     * We jump into training without clear success criteria\n     * Metrics get added as afterthoughts\n     * Different team members track different metrics\n  2. **Not Versioning the Data**\n     * Test sets evolve without documentation\n     * Benchmark datasets change between experiments\n     * No clear record of data preprocessing steps\n  3. **Assuming We'll \"Remember the Important Details\"**\n     * Critical hyperparameters go unlogged\n     * Environment configurations are lost\n     * Model architecture decisions remain undocumented\n\n\n# A Workflow-First Approach to ML Experiment Tracking\n## Pre-Experiment Documentation \nBefore any code is written or models are trained, teams must complete an experiment definition document that includes:\n  * Primary and secondary metrics with specific thresholds\n  * Clear definition of what constitutes a \"better\" model\n  * Required comparison metrics for A/B testing\n  * Stakeholder sign-off on success criteria\n\n\nThe key is making this documentation a required gateway - no training runs begin without it. This can be as simple as a shared template that must be filled out, or as robust as a formal approval process.\n## Data Versioning Protocol \nEstablish a systematic approach to data management:\n  * Create a data registry that tracks every version of training and evaluation datasets\n  * Document all preprocessing steps in a versioned configuration file\n  * Maintain a changelog for data modifications\n  * Store fixed evaluation sets with unique identifiers\n  * Create automated checks that prevent training without data versioning information\n\n\nThe focus here is on making data versioning automatic and mandatory rather than optional.\n## Experiment Metadata System \nImplement a structured logging system that requires:\n  * Mandatory recording of environment details before experiments start\n  * Standard templates for hyperparameter documentation\n  * Automated capture of all model architecture decisions\n  * Regular experiment summary reports\n  * Team review sessions to ensure important context is captured\n\n\nThe key innovation here is shifting from \"remember to log\" to \"unable to proceed without logging.\"\nThis workflow creates natural stopping points where teams must properly document and version before proceeding, making good practices the path of least resistance rather than an afterthought.\n# Building a Better Workflow: Using ZenML and Neptune\nA practical implementation to the above can be seen with the powerful combination of ZenML and Neptune comes in. We'll explore how integrating these two tools can streamline your ML workflows and provide increased visibility into your experiments.\n[ZenML](https://zenml.io/) is an extensible, open-source MLOps framework designed to create production-ready machine learning pipelines. It offers a simple, intuitive API that allows you to define your ML workflows as a series of steps, making it easy to manage complex pipelines.\n[Neptune](https://neptune.ai/) is an experiment tracker built for large-scale model training. It allows AI researchers to monitor their model training in real-time, visualize and compare experiments, and collaborate on them with a team.\nWhen combined, these tools offer a robust solution for managing your entire ML lifecycle, from experimentation to production.\n## A Real-World Example: Fine-Tuning a Language Model\nLet's dive into a practical example of how ZenML and Neptune can work together to enhance your ML workflows. We'll create a pipeline for fine-tuning a language model, tracking the entire process with Neptune.\n### Setting the Stage: Environment Setup\nFirst, let's get our environment ready:\n```\npip install \"zenml[server]\"\nzenml integration install neptune huggingface -y\n\n```\n\nNext, we'll configure our Neptune credentials using ZenML secrets:\n```\nzenml secret create neptune_secret --api_token=<YOUR_NEPTUNE_API_TOKEN>\n\n```\n\nNow, let's register the Neptune experiment tracker in our ZenML stack:\n```\nzenml experiment-tracker register neptune_tracker \\\\\n  --flavor=neptune \\\\\n  --project=<YOUR_NEPTUNE_PROJECT> \\\\\n  --api_token={{neptune_secret.api_token}}\nzenml stack register neptune_stack -e neptune_tracker ... --set\n\n```\n\n![ZenML stack description output showing a Stack Configuration table. It lists EXPERIMENT_TRACKER as neptune_experiment_tracker, ORCHESTRATOR as default, and ARTIFACT_STORE as default. The stack is named 'neptune_stack' and is active. No labels are set for this stack.](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/66ed520fa333a0bb0e80b590_66ed50617483c897468708ee_image%2520\\(21\\).png)\nTip: Use zenml stack describe to see the active stacks contents\n‍\n### Architecting the Pipeline\nHere's our ZenML pipeline for fine-tuning a DistilBERT model:\n```\nfrom typing import Tuple\nfrom zenml import pipeline, step\nfrom zenml.integrations.neptune.experiment_trackers import NeptuneExperimentTracker\nfrom transformers import (\n  AutoModelForSequenceClassification,\n  AutoTokenizer,\n  Trainer,\n  TrainingArguments,\n  DistilBertForSequenceClassification,\n)\nimport os\nfrom datasets import load_dataset, Dataset\nimport numpy as np\nfrom sklearn.metrics import accuracy_score, precision_recall_fscore_support\nfrom zenml.client import Client\nfrom zenml.integrations.neptune.experiment_trackers import NeptuneExperimentTracker\n# Get the experiment tracker from the active stack\nexperiment_tracker: NeptuneExperimentTracker = Client().active_stack.experiment_tracker\n# Set the environment variables for Neptune\nos.environ[\"WANDB_DISABLED\"] = \"true\"\n\n@step\ndef prepare_data() -> Tuple[Dataset, Dataset]:\n  dataset = load_dataset(\"imdb\")\n  tokenizer = AutoTokenizer.from_pretrained(\"distilbert-base-uncased\")\n  def tokenize_function(examples):\n    return tokenizer(examples[\"text\"], padding=\"max_length\", truncation=True)\n  tokenized_datasets = dataset.map(tokenize_function, batched=True)\n  return (\n    tokenized_datasets[\"train\"].shuffle(seed=42).select(range(1000)),\n    tokenized_datasets[\"test\"].shuffle(seed=42).select(range(100)),\n  )\n\n@step(experiment_tracker=\"neptune_experiment_tracker\", enable_cache=False)\ndef train_model(\n  train_dataset: Dataset, eval_dataset: Dataset\n) -> DistilBertForSequenceClassification:\n  model = AutoModelForSequenceClassification.from_pretrained(\n    \"distilbert-base-uncased\", num_labels=2\n  )\n  training_args = TrainingArguments(\n    output_dir=\"./results\",\n    num_train_epochs=3,\n    per_device_train_batch_size=16,\n    per_device_eval_batch_size=16,\n    warmup_steps=500,\n    weight_decay=0.01,\n    logging_dir=\"./logs\",\n    report_to=[\"neptune\"],\n  )\n  def compute_metrics(eval_pred):\n    logits, labels = eval_pred\n    predictions = np.argmax(logits, axis=-1)\n    precision, recall, f1, _ = precision_recall_fscore_support(\n      labels, predictions, average=\"binary\"\n    )\n    acc = accuracy_score(labels, predictions)\n    return {\"accuracy\": acc, \"f1\": f1, \"precision\": precision, \"recall\": recall}\n  # Get the Neptune run and log it to the Trainer\n  trainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=train_dataset,\n    eval_dataset=eval_dataset,\n    compute_metrics=compute_metrics,\n  )\n  trainer.train()\n  return model\n\n@pipeline\ndef fine_tuning_pipeline():\n  train_dataset, eval_dataset = prepare_data()\n  model = train_model(train_dataset, eval_dataset)\n\nif __name__ == \"__main__\":\n  # Run the pipeline\n  fine_tuning_pipeline()\n\n```\n\nThis pipeline accomplishes the following:\n  1. Prepares a subset of the IMDB dataset for sentiment analysis.\n  2. Fine-tunes a DistilBERT model on this dataset.\n  3. Evaluates the model and logs the metrics to Neptune.\n\n\n### Launching the Pipeline and Exploring Results\nNow, let's set our pipeline in motion:\n```\nfine_tuning_pipeline()\n\n```\n\n![ZenML pipeline visualization showing a workflow with three steps: 'prepare_data' feeding into two 'datasets.arrow_dataset.Dataset' outputs, which then feed into 'train_model', resulting in a 'transformers.models.distilbert.modeling' output. The pipeline is named 'fine_tuning_pipeline-2024_09_20-08_56_05_145452'. The interface shows tabs for Overview, Code, Logs, Configuration, and Metadata, with Metadata selected. The Metadata pane displays an experiment tracker URL.](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/66ed520fa333a0bb0e80b58d_66ed5100a85248944570cc69_image%2520\\(22\\).png)\nAs the pipeline runs, ZenML automatically creates Neptune experiments for each step where tracking is enabled. You can view these experiments in the Neptune UI by visiting https://app.neptune.ai/YOUR_WORKSPACE/YOUR_PROJECT/experiments.\n![neptune.ai experiment tracking interface showing a side-by-side comparison of 5 runs \\(ZEN-59 to ZEN-63\\). The left panel lists runs, with ZEN-63, ZEN-62, and ZEN-61 selected. The right panel displays a detailed comparison table of run attributes including Creation Time, Owner \\(htahir1\\), Name, Tags, Group Tags, Custom Run Id, and Description. A toolbar at the top offers various view options and a 'Create a new run' button.](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/66ed520fa333a0bb0e80b59e_66ed51508ea6edd97d09f5ea_image%2520\\(23\\).png)\nIn the Neptune UI, you'll have access to a wealth of information:\n  1. Detailed metrics for your fine-tuning run, including accuracy, F1 score, precision, and recall.\n  2. Comparisons between different runs of your pipeline to identify improvements or regressions.\n  3. Training curves to visualize how your model's performance evolved during training.\n  4. Collaboration tools to share results with team members for joint analysis and decision-making.\n\n\n![Neptune.ai experiment tracking interface showing a parallel coordinates plot of 63 runs. The left panel lists runs, while the right panel displays the plot with axes for sys/id, sys/name, and sys/tags. Lines represent individual runs, connecting their values across these dimensions. The plot shows clustering of runs into 'sklearn_regression' and 'regression_sklearn' groups. Interface includes options to Restore, Keep, Exclude, Export, and Download as PNG. 50 runs are currently selected.](https://cdn.prod.website-files.com/65264f6bf54e751c3a776db1/66ed520fa333a0bb0e80b5ae_66ed517ab4c26193b769aa12_image%2520\\(24\\).png)\n## Beyond Tools: Building a Culture of Experiment Tracking\nRemember:\n  * Tools enable good practices; they don't create them\n  * Start with workflow design, then choose supporting tools\n  * Create processes that make good practices the path of least resistance\n\n\n## Conclusion: Fix Your Workflow First\nWhile tools like ZenML and Neptune are powerful allies in ML development, they're most effective when supporting well-designed workflows. Before diving into tool selection:\n  1. Define clear tracking requirements\n  2. Establish data versioning protocols\n  3. Create explicit documentation requirements\n  4. Build processes that enforce good practices\n\n\nThe best experiment tracking setup is the one your team will actually use consistently. Start with workflow, and let the tools serve your process - not the other way around.\nReady to improve your ML experiment tracking? Start by examining your workflow, then let tools like ZenML and [Neptune ](https://neptune.ai/)help you implement and enforce good practices.\n### Looking to Get Ahead in MLOps & LLMOps?\nSubscribe to the ZenML newsletter and receive regular product updates, tutorials, examples, and more articles like this one.\nEmail address*\nSubscribe \n## Thank you!\nWe care about your data in our [privacy policy](https://www.zenml.io/privacy-policy).\n[![I'm sorry, but I can't generate an alt text without more context about the image. Please describe the main elements of the image, and I'll be happy to help!](https://cdn.prod.website-files.com/64a817a2e7e2208272d1ce30/652559300366c8455e5c6ba5_Vectors-Wrapper.svg)](https://www.zenml.io/)\nSimplify MLOps\n[](https://www.linkedin.com/company/zenml)[](https://twitter.com/zenml_io)[](https://zenml.io/slack-invite)[](https://www.youtube.com/@ZenML)\nProduct\n[Features](https://www.zenml.io/features)[ZenML ProNew](https://www.zenml.io/pro)[OSS vs Managed](https://www.zenml.io/open-source-vs-pro)[Integrations](https://www.zenml.io/integrations)[Pricing](https://www.zenml.io/pricing)\nResources\n[NewsletterNew](https://www.zenml.io/newsletter-signup)[Blog](https://www.zenml.io/blog)[Docs](https://docs.zenml.io/getting-started/introduction)[Roadmap](https://zenml.featureos.app/roadmap)[Slack](https://www.zenml.io/slack)\nCompany\n[Careers](https://www.zenml.io/careers)[About Us](https://www.zenml.io/company)[Our Values](https://www.zenml.io/company)[Join Us](https://www.zenml.io/careers)\n[ZenML vs Orchestrators](https://www.zenml.io/vs/zenml-vs-orchestrators)\n[Apache Airflow](https://www.zenml.io/compare/zenml-vs-apache-airflow)\n[Dagster](https://www.zenml.io/compare/zenml-vs-dagster)\n[Databricks](https://www.zenml.io/compare/zenml-vs-databricks)\n[Flyte](https://www.zenml.io/compare/zenml-vs-flyte)\n[Kedro](https://www.zenml.io/compare/zenml-vs-kedro)\n[Kubeflow](https://www.zenml.io/compare/zenml-vs-kubeflow)\n[Prefect](https://www.zenml.io/compare/zenml-vs-prefect)\n[ZenML vs Exp Trackers](https://www.zenml.io/vs/zenml-vs-experiment-trackers)\n[MLflow](https://www.zenml.io/compare/zenml-vs-mlflow)\n[Weights & Biases](https://www.zenml.io/vs/zenml-vs-experiment-trackers)[Neptune AI](https://www.zenml.io/vs/zenml-vs-experiment-trackers)[CometML](https://www.zenml.io/vs/zenml-vs-experiment-trackers)\n[ZenML vs e2e Platforms](https://www.zenml.io/vs/zenml-vs-e2e-platforms)\n[AWS Sagemaker](https://www.zenml.io/compare/zenml-vs-aws-sagemaker)\n[ClearML](https://www.zenml.io/compare/zenml-vs-clearml)\n[Metaflow](https://www.zenml.io/compare/zenml-vs-metaflow)\n[Valohai](https://www.zenml.io/compare/zenml-vs-valohai)\n[GCP Vertex AI](https://www.zenml.io/vs/zenml-vs-e2e-platforms)[Azure ML](https://www.zenml.io/vs/zenml-vs-e2e-platforms)[ClearML](https://www.zenml.io/compare/zenml-vs-clearml)\nGenAI & LLMs\n[LLMOps Database](https://www.zenml.io/llmops-database)[Finetuning LLMs](https://github.com/zenml-io/zenml-projects/tree/main/llm-complete-guide)[Creating a code copilot](https://github.com/zenml-io/zenml-projects/tree/main/zencoder)[Cheap GPU compute](https://docs.zenml.io/stacks/orchestrators/skypilot-vm)\nMLOps Platform\n[Mix and match tools](https://docs.zenml.io/stacks)[Create alerting](https://docs.zenml.io/stacks/alerters)[Plugin custom stack components](https://docs.zenml.io/how-to/infrastructure-deployment/stack-deployment/implement-a-custom-stack-component)\nLeveraging Hyperscalers\n[Train on Spot VMs](https://docs.zenml.io/stacks/orchestrators/skypilot-vm)[Deploying Sagemaker Endpoints](https://github.com/zenml-io/zenml-projects/tree/main/huggingface-sagemaker)[Managing GCP Vertex AI](https://docs.zenml.io/how-to/popular-integrations/gcp-guide)[Training on Kubernetes](https://docs.zenml.io/how-to/popular-integrations/kubernetes)[Local to Sagemaker Pipelines](https://docs.zenml.io/how-to/popular-integrations/aws-guide)\n© 2025 ZenML. All rights reserved.\n[Imprint](https://www.zenml.io/imprint)[Privacy Policy](https://www.zenml.io/privacy-policy)[Terms of Service](https://www.zenml.io/terms-of-service)\n|\n[ZenML Cloud Status](https://status.zenml.io)\n![](https://static.scarf.sh/a.png?x-pxid=af73c4bc-4298-4759-a03c-378b9a1ef1ba)\n",
    "content_quality_score": 0.8,
    "summary": null,
    "child_urls": [
        "https://www.zenml.io/",
        "https://www.zenml.io/features/iterate-at-warp-speed",
        "https://www.zenml.io/features/auto-track-everything",
        "https://www.zenml.io/features/shared-ml-building-blocks",
        "https://www.zenml.io/features/backend-flexibility-zero-lock-in",
        "https://www.zenml.io/features/limitless-scaling",
        "https://www.zenml.io/features/streamline-cloud-expenses",
        "https://www.zenml.io/pro",
        "https://www.zenml.io/compare",
        "https://www.zenml.io/integrations",
        "https://docs.zenml.io/user-guide/llmops-guide",
        "https://www.zenml.io/llmops-database",
        "https://www.zenml.io/whitepaper-architecting-an-enterprise-grade-mlops-platform",
        "https://docs.zenml.io/user-guide/starter-guide/track-ml-models",
        "https://www.zenml.io/case-study/adeo-leroy-merlin",
        "https://www.zenml.io/case-study/brevo",
        "https://docs.zenml.io",
        "https://www.zenml.io/deployments",
        "https://docs.zenml.io/getting-started/deploying-zenml",
        "https://docs.zenml.io/user-guide/starter-guide",
        "https://www.zenml.io/projects",
        "https://www.zenml.io/slack",
        "https://community.zenml.io/changelog",
        "https://www.zenml.io/roadmap",
        "https://www.zenml.io/pricing",
        "https://www.zenml.io/blog",
        "https://cloud.zenml.io/login",
        "https://cloud.zenml.io/signup?utm_source=website&utm_medium=website_nav&utm_campaign=cloud_promotion&utm_content=signup_link",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/",
        "https://www.zenml.io/category/tutorials",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#pre-experiment-documentation-",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#data-versioning-protocol-",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#experiment-metadata-system-",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#a-real-world-example-fine-tuning-a-language-model",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#beyond-tools-building-a-culture-of-experiment-tracking",
        "https://www.zenml.io/blog/zenml-meets-neptune-for-advanced-experiment-tracking/#conclusion-fix-your-workflow-first",
        "https://www.zenml.io/blog/huggingface-to-sagemaker",
        "https://www.zenml.io/blog/zenml-kubernetes-kubeflow",
        "https://www.zenml.io/blog/productionalizing-nlp-models-with-zenml",
        "https://zenml.io/",
        "https://www.zenml.io/privacy-policy",
        "https://zenml.io/slack-invite",
        "https://www.zenml.io/features",
        "https://www.zenml.io/open-source-vs-pro",
        "https://www.zenml.io/newsletter-signup",
        "https://docs.zenml.io/getting-started/introduction",
        "https://www.zenml.io/careers",
        "https://www.zenml.io/company",
        "https://www.zenml.io/vs/zenml-vs-orchestrators",
        "https://www.zenml.io/compare/zenml-vs-apache-airflow",
        "https://www.zenml.io/compare/zenml-vs-dagster",
        "https://www.zenml.io/compare/zenml-vs-databricks",
        "https://www.zenml.io/compare/zenml-vs-flyte",
        "https://www.zenml.io/compare/zenml-vs-kedro",
        "https://www.zenml.io/compare/zenml-vs-kubeflow",
        "https://www.zenml.io/compare/zenml-vs-prefect",
        "https://www.zenml.io/vs/zenml-vs-experiment-trackers",
        "https://www.zenml.io/compare/zenml-vs-mlflow",
        "https://www.zenml.io/vs/zenml-vs-e2e-platforms",
        "https://www.zenml.io/compare/zenml-vs-aws-sagemaker",
        "https://www.zenml.io/compare/zenml-vs-clearml",
        "https://www.zenml.io/compare/zenml-vs-metaflow",
        "https://www.zenml.io/compare/zenml-vs-valohai",
        "https://docs.zenml.io/stacks/orchestrators/skypilot-vm",
        "https://docs.zenml.io/stacks",
        "https://docs.zenml.io/stacks/alerters",
        "https://docs.zenml.io/how-to/infrastructure-deployment/stack-deployment/implement-a-custom-stack-component",
        "https://docs.zenml.io/how-to/popular-integrations/gcp-guide",
        "https://docs.zenml.io/how-to/popular-integrations/kubernetes",
        "https://docs.zenml.io/how-to/popular-integrations/aws-guide",
        "https://www.zenml.io/imprint",
        "https://www.zenml.io/terms-of-service",
        "https://status.zenml.io",
        "https://github.com/zenml-io/zenml-projects/tree/main/llm-lora-finetuning",
        "https://colab.research.google.com/github/zenml-io/zenml/blob/main/examples/quickstart/quickstart.ipynb",
        "https://neptune.ai/",
        "https://www.linkedin.com/company/zenml",
        "https://twitter.com/zenml_io",
        "https://www.youtube.com/@ZenML",
        "https://zenml.featureos.app/roadmap",
        "https://github.com/zenml-io/zenml-projects/tree/main/llm-complete-guide",
        "https://github.com/zenml-io/zenml-projects/tree/main/zencoder",
        "https://github.com/zenml-io/zenml-projects/tree/main/huggingface-sagemaker"
    ]
}