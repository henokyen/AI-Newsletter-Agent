{
    "id": "c72fc122a9ce4ccef3c7edf8e1d961c5",
    "metadata": {
        "id": "c72fc122a9ce4ccef3c7edf8e1d961c5",
        "url": "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#sentence-embedding-models/",
        "title": "Pretrained Models — Sentence Transformers  documentation",
        "properties": {
            "description": null,
            "keywords": null,
            "author": null
        }
    },
    "parent_metadata": {
        "id": "4ce9a0439754feed28ade5fecba3ee8e",
        "url": "https://www.notion.so/Sources-4ce9a0439754feed28ade5fecba3ee8e",
        "title": "Sources",
        "properties": {
            "Type": "Node"
        }
    },
    "content": "[ ![Logo](https://www.sbert.net/_static/logo.png) ](https://www.sbert.net/index.html)\nGetting Started\n  * [Installation](https://www.sbert.net/docs/installation.html)\n    * [Install with pip](https://www.sbert.net/docs/installation.html#install-with-pip)\n    * [Install with Conda](https://www.sbert.net/docs/installation.html#install-with-conda)\n    * [Install from Source](https://www.sbert.net/docs/installation.html#install-from-source)\n    * [Editable Install](https://www.sbert.net/docs/installation.html#editable-install)\n    * [Install PyTorch with CUDA support](https://www.sbert.net/docs/installation.html#install-pytorch-with-cuda-support)\n  * [Quickstart](https://www.sbert.net/docs/quickstart.html)\n    * [Sentence Transformer](https://www.sbert.net/docs/quickstart.html#sentence-transformer)\n    * [Cross Encoder](https://www.sbert.net/docs/quickstart.html#cross-encoder)\n    * [Next Steps](https://www.sbert.net/docs/quickstart.html#next-steps)\n  * [Migration Guide](https://www.sbert.net/docs/migration_guide.html)\n    * [Migrating from v2.x to v3.x](https://www.sbert.net/docs/migration_guide.html#migrating-from-v2-x-to-v3-x)\n      * [Migration for specific parameters from `SentenceTransformer.fit`](https://www.sbert.net/docs/migration_guide.html#migration-for-specific-parameters-from-sentencetransformer-fit)\n      * [Migration for custom Datasets and DataLoaders used in `SentenceTransformer.fit`](https://www.sbert.net/docs/migration_guide.html#migration-for-custom-datasets-and-dataloaders-used-in-sentencetransformer-fit)\n    * [Migrating from v3.x to v4.x](https://www.sbert.net/docs/migration_guide.html#migrating-from-v3-x-to-v4-x)\n      * [Migration for parameters on `CrossEncoder` initialization and methods](https://www.sbert.net/docs/migration_guide.html#migration-for-parameters-on-crossencoder-initialization-and-methods)\n      * [Migration for specific parameters from `CrossEncoder.fit`](https://www.sbert.net/docs/migration_guide.html#migration-for-specific-parameters-from-crossencoder-fit)\n      * [Migration for CrossEncoder evaluators](https://www.sbert.net/docs/migration_guide.html#migration-for-crossencoder-evaluators)\n\n\nSentence Transformer\n  * [Usage](https://www.sbert.net/docs/sentence_transformer/usage/usage.html)\n    * [Computing Embeddings](https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html)\n      * [Initializing a Sentence Transformer Model](https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#initializing-a-sentence-transformer-model)\n      * [Calculating Embeddings](https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#calculating-embeddings)\n      * [Prompt Templates](https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#prompt-templates)\n      * [Input Sequence Length](https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#input-sequence-length)\n      * [Multi-Process / Multi-GPU Encoding](https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#multi-process-multi-gpu-encoding)\n    * [Semantic Textual Similarity](https://www.sbert.net/docs/sentence_transformer/usage/semantic_textual_similarity.html)\n      * [Similarity Calculation](https://www.sbert.net/docs/sentence_transformer/usage/semantic_textual_similarity.html#similarity-calculation)\n    * [Semantic Search](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html)\n      * [Background](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#background)\n      * [Symmetric vs. Asymmetric Semantic Search](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#symmetric-vs-asymmetric-semantic-search)\n      * [Manual Implementation](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#manual-implementation)\n      * [Optimized Implementation](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#optimized-implementation)\n      * [Speed Optimization](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#speed-optimization)\n      * [Elasticsearch](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#elasticsearch)\n      * [Approximate Nearest Neighbor](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#approximate-nearest-neighbor)\n      * [Retrieve & Re-Rank](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#retrieve-re-rank)\n      * [Examples](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#examples)\n    * [Retrieve & Re-Rank](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html)\n      * [Retrieve & Re-Rank Pipeline](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#retrieve-re-rank-pipeline)\n      * [Retrieval: Bi-Encoder](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#retrieval-bi-encoder)\n      * [Re-Ranker: Cross-Encoder](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#re-ranker-cross-encoder)\n      * [Example Scripts](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#example-scripts)\n      * [Pre-trained Bi-Encoders (Retrieval)](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#pre-trained-bi-encoders-retrieval)\n      * [Pre-trained Cross-Encoders (Re-Ranker)](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#pre-trained-cross-encoders-re-ranker)\n    * [Clustering](https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html)\n      * [k-Means](https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#k-means)\n      * [Agglomerative Clustering](https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#agglomerative-clustering)\n      * [Fast Clustering](https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#fast-clustering)\n      * [Topic Modeling](https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#topic-modeling)\n    * [Paraphrase Mining](https://www.sbert.net/examples/sentence_transformer/applications/paraphrase-mining/README.html)\n      * [`paraphrase_mining()`](https://www.sbert.net/examples/sentence_transformer/applications/paraphrase-mining/README.html#sentence_transformers.util.paraphrase_mining)\n    * [Translated Sentence Mining](https://www.sbert.net/examples/sentence_transformer/applications/parallel-sentence-mining/README.html)\n      * [Margin Based Mining](https://www.sbert.net/examples/sentence_transformer/applications/parallel-sentence-mining/README.html#margin-based-mining)\n      * [Examples](https://www.sbert.net/examples/sentence_transformer/applications/parallel-sentence-mining/README.html#examples)\n    * [Image Search](https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html)\n      * [Installation](https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html#installation)\n      * [Usage](https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html#usage)\n      * [Examples](https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html#examples)\n    * [Embedding Quantization](https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html)\n      * [Binary Quantization](https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#binary-quantization)\n      * [Scalar (int8) Quantization](https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#scalar-int8-quantization)\n      * [Additional extensions](https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#additional-extensions)\n      * [Demo](https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#demo)\n      * [Try it yourself](https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#try-it-yourself)\n    * [Speeding up Inference](https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html)\n      * [PyTorch](https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#pytorch)\n      * [ONNX](https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#onnx)\n      * [OpenVINO](https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#openvino)\n      * [Benchmarks](https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#benchmarks)\n    * [Creating Custom Models](https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html)\n      * [Structure of Sentence Transformer Models](https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html#structure-of-sentence-transformer-models)\n      * [Sentence Transformer Model from a Transformers Model](https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html#sentence-transformer-model-from-a-transformers-model)\n  * [Pretrained Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html)\n    * [Original Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#original-models)\n    * [Semantic Search Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#semantic-search-models)\n      * [Multi-QA Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#multi-qa-models)\n      * [MSMARCO Passage Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#msmarco-passage-models)\n    * [Multilingual Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#multilingual-models)\n      * [Semantic Similarity Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#semantic-similarity-models)\n      * [Bitext Mining](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#bitext-mining)\n    * [Image & Text-Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#image-text-models)\n    * [INSTRUCTOR models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#instructor-models)\n    * [Scientific Similarity Models](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#scientific-similarity-models)\n  * [Training Overview](https://www.sbert.net/docs/sentence_transformer/training_overview.html)\n    * [Why Finetune?](https://www.sbert.net/docs/sentence_transformer/training_overview.html#why-finetune)\n    * [Training Components](https://www.sbert.net/docs/sentence_transformer/training_overview.html#training-components)\n    * [Dataset](https://www.sbert.net/docs/sentence_transformer/training_overview.html#dataset)\n      * [Dataset Format](https://www.sbert.net/docs/sentence_transformer/training_overview.html#dataset-format)\n    * [Loss Function](https://www.sbert.net/docs/sentence_transformer/training_overview.html#loss-function)\n    * [Training Arguments](https://www.sbert.net/docs/sentence_transformer/training_overview.html#training-arguments)\n    * [Evaluator](https://www.sbert.net/docs/sentence_transformer/training_overview.html#evaluator)\n    * [Trainer](https://www.sbert.net/docs/sentence_transformer/training_overview.html#trainer)\n      * [Callbacks](https://www.sbert.net/docs/sentence_transformer/training_overview.html#callbacks)\n    * [Multi-Dataset Training](https://www.sbert.net/docs/sentence_transformer/training_overview.html#multi-dataset-training)\n    * [Deprecated Training](https://www.sbert.net/docs/sentence_transformer/training_overview.html#deprecated-training)\n    * [Best Base Embedding Models](https://www.sbert.net/docs/sentence_transformer/training_overview.html#best-base-embedding-models)\n    * [Comparisons with CrossEncoder Training](https://www.sbert.net/docs/sentence_transformer/training_overview.html#comparisons-with-crossencoder-training)\n  * [Dataset Overview](https://www.sbert.net/docs/sentence_transformer/dataset_overview.html)\n    * [Datasets on the Hugging Face Hub](https://www.sbert.net/docs/sentence_transformer/dataset_overview.html#datasets-on-the-hugging-face-hub)\n    * [Pre-existing Datasets](https://www.sbert.net/docs/sentence_transformer/dataset_overview.html#pre-existing-datasets)\n  * [Loss Overview](https://www.sbert.net/docs/sentence_transformer/loss_overview.html)\n    * [Loss Table](https://www.sbert.net/docs/sentence_transformer/loss_overview.html#loss-table)\n    * [Loss modifiers](https://www.sbert.net/docs/sentence_transformer/loss_overview.html#loss-modifiers)\n    * [Distillation](https://www.sbert.net/docs/sentence_transformer/loss_overview.html#distillation)\n    * [Commonly used Loss Functions](https://www.sbert.net/docs/sentence_transformer/loss_overview.html#commonly-used-loss-functions)\n    * [Custom Loss Functions](https://www.sbert.net/docs/sentence_transformer/loss_overview.html#custom-loss-functions)\n  * [Training Examples](https://www.sbert.net/docs/sentence_transformer/training/examples.html)\n    * [Semantic Textual Similarity](https://www.sbert.net/examples/sentence_transformer/training/sts/README.html)\n      * [Training data](https://www.sbert.net/examples/sentence_transformer/training/sts/README.html#training-data)\n      * [Loss Function](https://www.sbert.net/examples/sentence_transformer/training/sts/README.html#loss-function)\n    * [Natural Language Inference](https://www.sbert.net/examples/sentence_transformer/training/nli/README.html)\n      * [Data](https://www.sbert.net/examples/sentence_transformer/training/nli/README.html#data)\n      * [SoftmaxLoss](https://www.sbert.net/examples/sentence_transformer/training/nli/README.html#softmaxloss)\n      * [MultipleNegativesRankingLoss](https://www.sbert.net/examples/sentence_transformer/training/nli/README.html#multiplenegativesrankingloss)\n    * [Paraphrase Data](https://www.sbert.net/examples/sentence_transformer/training/paraphrases/README.html)\n      * [Pre-Trained Models](https://www.sbert.net/examples/sentence_transformer/training/paraphrases/README.html#pre-trained-models)\n    * [Quora Duplicate Questions](https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html)\n      * [Training](https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html#training)\n      * [MultipleNegativesRankingLoss](https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html#multiplenegativesrankingloss)\n      * [Pretrained Models](https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html#pretrained-models)\n    * [MS MARCO](https://www.sbert.net/examples/sentence_transformer/training/ms_marco/README.html)\n      * [Bi-Encoder](https://www.sbert.net/examples/sentence_transformer/training/ms_marco/README.html#bi-encoder)\n    * [Matryoshka Embeddings](https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html)\n      * [Use Cases](https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#use-cases)\n      * [Results](https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#results)\n      * [Training](https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#training)\n      * [Inference](https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#inference)\n      * [Code Examples](https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#code-examples)\n    * [Adaptive Layers](https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html)\n      * [Use Cases](https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#use-cases)\n      * [Results](https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#results)\n      * [Training](https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#training)\n      * [Inference](https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#inference)\n      * [Code Examples](https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#code-examples)\n    * [Multilingual Models](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html)\n      * [Extend your own models](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#extend-your-own-models)\n      * [Training](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#training)\n      * [Datasets](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#datasets)\n      * [Sources for Training Data](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#sources-for-training-data)\n      * [Evaluation](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#evaluation)\n      * [Available Pre-trained Models](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#available-pre-trained-models)\n      * [Usage](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#usage)\n      * [Performance](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#performance)\n      * [Citation](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#citation)\n    * [Model Distillation](https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html)\n      * [Knowledge Distillation](https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#knowledge-distillation)\n      * [Speed - Performance Trade-Off](https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#speed-performance-trade-off)\n      * [Dimensionality Reduction](https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#dimensionality-reduction)\n      * [Quantization](https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#quantization)\n    * [Augmented SBERT](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html)\n      * [Motivation](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#motivation)\n      * [Extend to your own datasets](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#extend-to-your-own-datasets)\n      * [Methodology](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#methodology)\n      * [Scenario 1: Limited or small annotated datasets (few labeled sentence-pairs)](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#scenario-1-limited-or-small-annotated-datasets-few-labeled-sentence-pairs)\n      * [Scenario 2: No annotated datasets (Only unlabeled sentence-pairs)](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#scenario-2-no-annotated-datasets-only-unlabeled-sentence-pairs)\n      * [Training](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#training)\n      * [Citation](https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#citation)\n    * [Training with Prompts](https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html)\n      * [What are Prompts?](https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html#what-are-prompts)\n      * [Why would we train with Prompts?](https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html#why-would-we-train-with-prompts)\n      * [How do we train with Prompts?](https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html#how-do-we-train-with-prompts)\n    * [Training with PEFT Adapters](https://www.sbert.net/examples/sentence_transformer/training/peft/README.html)\n      * [Compatibility Methods](https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#compatibility-methods)\n      * [Adding a New Adapter](https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#adding-a-new-adapter)\n      * [Loading a Pretrained Adapter](https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#loading-a-pretrained-adapter)\n      * [Training Script](https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#training-script)\n    * [Unsupervised Learning](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html)\n      * [TSDAE](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#tsdae)\n      * [SimCSE](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#simcse)\n      * [CT](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#ct)\n      * [CT (In-Batch Negative Sampling)](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#ct-in-batch-negative-sampling)\n      * [Masked Language Model (MLM)](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#masked-language-model-mlm)\n      * [GenQ](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#genq)\n      * [GPL](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#gpl)\n      * [Performance Comparison](https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#performance-comparison)\n    * [Domain Adaptation](https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html)\n      * [Domain Adaptation vs. Unsupervised Learning](https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html#domain-adaptation-vs-unsupervised-learning)\n      * [Adaptive Pre-Training](https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html#adaptive-pre-training)\n      * [GPL: Generative Pseudo-Labeling](https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html#gpl-generative-pseudo-labeling)\n    * [Hyperparameter Optimization](https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html)\n      * [HPO Components](https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html#hpo-components)\n      * [Putting It All Together](https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html#putting-it-all-together)\n      * [Example Scripts](https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html#example-scripts)\n    * [Distributed Training](https://www.sbert.net/docs/sentence_transformer/training/distributed.html)\n      * [Comparison](https://www.sbert.net/docs/sentence_transformer/training/distributed.html#comparison)\n      * [FSDP](https://www.sbert.net/docs/sentence_transformer/training/distributed.html#fsdp)\n\n\nCross Encoder\n  * [Usage](https://www.sbert.net/docs/cross_encoder/usage/usage.html)\n    * [Cross-Encoder vs Bi-Encoder](https://www.sbert.net/examples/cross_encoder/applications/README.html)\n      * [Cross-Encoder vs. Bi-Encoder](https://www.sbert.net/examples/cross_encoder/applications/README.html#cross-encoder-vs-bi-encoder)\n      * [When to use Cross- / Bi-Encoders?](https://www.sbert.net/examples/cross_encoder/applications/README.html#when-to-use-cross-bi-encoders)\n      * [Cross-Encoders Usage](https://www.sbert.net/examples/cross_encoder/applications/README.html#cross-encoders-usage)\n      * [Combining Bi- and Cross-Encoders](https://www.sbert.net/examples/cross_encoder/applications/README.html#combining-bi-and-cross-encoders)\n      * [Training Cross-Encoders](https://www.sbert.net/examples/cross_encoder/applications/README.html#training-cross-encoders)\n    * [Retrieve & Re-Rank](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html)\n      * [Retrieve & Re-Rank Pipeline](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#retrieve-re-rank-pipeline)\n      * [Retrieval: Bi-Encoder](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#retrieval-bi-encoder)\n      * [Re-Ranker: Cross-Encoder](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#re-ranker-cross-encoder)\n      * [Example Scripts](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#example-scripts)\n      * [Pre-trained Bi-Encoders (Retrieval)](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#pre-trained-bi-encoders-retrieval)\n      * [Pre-trained Cross-Encoders (Re-Ranker)](https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#pre-trained-cross-encoders-re-ranker)\n  * [Pretrained Models](https://www.sbert.net/docs/cross_encoder/pretrained_models.html)\n    * [MS MARCO](https://www.sbert.net/docs/cross_encoder/pretrained_models.html#ms-marco)\n    * [SQuAD (QNLI)](https://www.sbert.net/docs/cross_encoder/pretrained_models.html#squad-qnli)\n    * [STSbenchmark](https://www.sbert.net/docs/cross_encoder/pretrained_models.html#stsbenchmark)\n    * [Quora Duplicate Questions](https://www.sbert.net/docs/cross_encoder/pretrained_models.html#quora-duplicate-questions)\n    * [NLI](https://www.sbert.net/docs/cross_encoder/pretrained_models.html#nli)\n    * [Community Models](https://www.sbert.net/docs/cross_encoder/pretrained_models.html#community-models)\n  * [Training Overview](https://www.sbert.net/docs/cross_encoder/training_overview.html)\n    * [Why Finetune?](https://www.sbert.net/docs/cross_encoder/training_overview.html#why-finetune)\n    * [Training Components](https://www.sbert.net/docs/cross_encoder/training_overview.html#training-components)\n    * [Dataset](https://www.sbert.net/docs/cross_encoder/training_overview.html#dataset)\n      * [Dataset Format](https://www.sbert.net/docs/cross_encoder/training_overview.html#dataset-format)\n      * [Hard Negatives Mining](https://www.sbert.net/docs/cross_encoder/training_overview.html#hard-negatives-mining)\n    * [Loss Function](https://www.sbert.net/docs/cross_encoder/training_overview.html#loss-function)\n    * [Training Arguments](https://www.sbert.net/docs/cross_encoder/training_overview.html#training-arguments)\n    * [Evaluator](https://www.sbert.net/docs/cross_encoder/training_overview.html#evaluator)\n    * [Trainer](https://www.sbert.net/docs/cross_encoder/training_overview.html#trainer)\n      * [Callbacks](https://www.sbert.net/docs/cross_encoder/training_overview.html#callbacks)\n    * [Multi-Dataset Training](https://www.sbert.net/docs/cross_encoder/training_overview.html#multi-dataset-training)\n    * [Training Tips](https://www.sbert.net/docs/cross_encoder/training_overview.html#training-tips)\n    * [Deprecated Training](https://www.sbert.net/docs/cross_encoder/training_overview.html#deprecated-training)\n    * [Comparisons with SentenceTransformer Training](https://www.sbert.net/docs/cross_encoder/training_overview.html#comparisons-with-sentencetransformer-training)\n  * [Loss Overview](https://www.sbert.net/docs/cross_encoder/loss_overview.html)\n    * [Loss Table](https://www.sbert.net/docs/cross_encoder/loss_overview.html#loss-table)\n    * [Distillation](https://www.sbert.net/docs/cross_encoder/loss_overview.html#distillation)\n    * [Commonly used Loss Functions](https://www.sbert.net/docs/cross_encoder/loss_overview.html#commonly-used-loss-functions)\n    * [Custom Loss Functions](https://www.sbert.net/docs/cross_encoder/loss_overview.html#custom-loss-functions)\n  * [Training Examples](https://www.sbert.net/docs/cross_encoder/training/examples.html)\n    * [Semantic Textual Similarity](https://www.sbert.net/examples/cross_encoder/training/sts/README.html)\n      * [Training data](https://www.sbert.net/examples/cross_encoder/training/sts/README.html#training-data)\n      * [Loss Function](https://www.sbert.net/examples/cross_encoder/training/sts/README.html#loss-function)\n      * [Inference](https://www.sbert.net/examples/cross_encoder/training/sts/README.html#inference)\n    * [Natural Language Inference](https://www.sbert.net/examples/cross_encoder/training/nli/README.html)\n      * [Data](https://www.sbert.net/examples/cross_encoder/training/nli/README.html#data)\n      * [CrossEntropyLoss](https://www.sbert.net/examples/cross_encoder/training/nli/README.html#crossentropyloss)\n      * [Inference](https://www.sbert.net/examples/cross_encoder/training/nli/README.html#inference)\n    * [Quora Duplicate Questions](https://www.sbert.net/examples/cross_encoder/training/quora_duplicate_questions/README.html)\n      * [Training](https://www.sbert.net/examples/cross_encoder/training/quora_duplicate_questions/README.html#training)\n      * [Inference](https://www.sbert.net/examples/cross_encoder/training/quora_duplicate_questions/README.html#inference)\n    * [MS MARCO](https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html)\n      * [Cross Encoder](https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html#cross-encoder)\n      * [Training Scripts](https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html#training-scripts)\n      * [Inference](https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html#inference)\n    * [Rerankers](https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html)\n      * [BinaryCrossEntropyLoss](https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html#binarycrossentropyloss)\n      * [CachedMultipleNegativesRankingLoss](https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html#cachedmultiplenegativesrankingloss)\n      * [Inference](https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html#inference)\n    * [Model Distillation](https://www.sbert.net/examples/cross_encoder/training/distillation/README.html)\n      * [Cross Encoder Knowledge Distillation](https://www.sbert.net/examples/cross_encoder/training/distillation/README.html#cross-encoder-knowledge-distillation)\n      * [Inference](https://www.sbert.net/examples/cross_encoder/training/distillation/README.html#inference)\n    * [Distributed Training](https://www.sbert.net/docs/sentence_transformer/training/distributed.html)\n      * [Comparison](https://www.sbert.net/docs/sentence_transformer/training/distributed.html#comparison)\n      * [FSDP](https://www.sbert.net/docs/sentence_transformer/training/distributed.html#fsdp)\n\n\nPackage Reference\n  * [Sentence Transformer](https://www.sbert.net/docs/package_reference/sentence_transformer/index.html)\n    * [SentenceTransformer](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)\n      * [SentenceTransformer](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#id1)\n      * [SentenceTransformerModelCardData](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentencetransformermodelcarddata)\n      * [SimilarityFunction](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#similarityfunction)\n    * [Trainer](https://www.sbert.net/docs/package_reference/sentence_transformer/trainer.html)\n      * [SentenceTransformerTrainer](https://www.sbert.net/docs/package_reference/sentence_transformer/trainer.html#sentencetransformertrainer)\n    * [Training Arguments](https://www.sbert.net/docs/package_reference/sentence_transformer/training_args.html)\n      * [SentenceTransformerTrainingArguments](https://www.sbert.net/docs/package_reference/sentence_transformer/training_args.html#sentencetransformertrainingarguments)\n    * [Losses](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html)\n      * [BatchAllTripletLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchalltripletloss)\n      * [BatchHardSoftMarginTripletLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchhardsoftmargintripletloss)\n      * [BatchHardTripletLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchhardtripletloss)\n      * [BatchSemiHardTripletLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchsemihardtripletloss)\n      * [ContrastiveLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#contrastiveloss)\n      * [OnlineContrastiveLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#onlinecontrastiveloss)\n      * [ContrastiveTensionLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#contrastivetensionloss)\n      * [ContrastiveTensionLossInBatchNegatives](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#contrastivetensionlossinbatchnegatives)\n      * [CoSENTLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cosentloss)\n      * [AnglELoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#angleloss)\n      * [CosineSimilarityLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cosinesimilarityloss)\n      * [DenoisingAutoEncoderLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#denoisingautoencoderloss)\n      * [GISTEmbedLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#gistembedloss)\n      * [CachedGISTEmbedLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cachedgistembedloss)\n      * [MSELoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#mseloss)\n      * [MarginMSELoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#marginmseloss)\n      * [MatryoshkaLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#matryoshkaloss)\n      * [Matryoshka2dLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#matryoshka2dloss)\n      * [AdaptiveLayerLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#adaptivelayerloss)\n      * [MegaBatchMarginLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#megabatchmarginloss)\n      * [MultipleNegativesRankingLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#multiplenegativesrankingloss)\n      * [CachedMultipleNegativesRankingLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cachedmultiplenegativesrankingloss)\n      * [MultipleNegativesSymmetricRankingLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#multiplenegativessymmetricrankingloss)\n      * [CachedMultipleNegativesSymmetricRankingLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cachedmultiplenegativessymmetricrankingloss)\n      * [SoftmaxLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#softmaxloss)\n      * [TripletLoss](https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#tripletloss)\n    * [Samplers](https://www.sbert.net/docs/package_reference/sentence_transformer/sampler.html)\n      * [BatchSamplers](https://www.sbert.net/docs/package_reference/sentence_transformer/sampler.html#batchsamplers)\n      * [MultiDatasetBatchSamplers](https://www.sbert.net/docs/package_reference/sentence_transformer/sampler.html#multidatasetbatchsamplers)\n    * [Evaluation](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html)\n      * [BinaryClassificationEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#binaryclassificationevaluator)\n      * [EmbeddingSimilarityEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#embeddingsimilarityevaluator)\n      * [InformationRetrievalEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#informationretrievalevaluator)\n      * [NanoBEIREvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#nanobeirevaluator)\n      * [MSEEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#mseevaluator)\n      * [ParaphraseMiningEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#paraphraseminingevaluator)\n      * [RerankingEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#rerankingevaluator)\n      * [SentenceEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#sentenceevaluator)\n      * [SequentialEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#sequentialevaluator)\n      * [TranslationEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#translationevaluator)\n      * [TripletEvaluator](https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#tripletevaluator)\n    * [Datasets](https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html)\n      * [ParallelSentencesDataset](https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#parallelsentencesdataset)\n      * [SentenceLabelDataset](https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#sentencelabeldataset)\n      * [DenoisingAutoEncoderDataset](https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#denoisingautoencoderdataset)\n      * [NoDuplicatesDataLoader](https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#noduplicatesdataloader)\n    * [Models](https://www.sbert.net/docs/package_reference/sentence_transformer/models.html)\n      * [Main Classes](https://www.sbert.net/docs/package_reference/sentence_transformer/models.html#main-classes)\n      * [Further Classes](https://www.sbert.net/docs/package_reference/sentence_transformer/models.html#further-classes)\n    * [quantization](https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html)\n      * [`quantize_embeddings()`](https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html#sentence_transformers.quantization.quantize_embeddings)\n      * [`semantic_search_faiss()`](https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html#sentence_transformers.quantization.semantic_search_faiss)\n      * [`semantic_search_usearch()`](https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html#sentence_transformers.quantization.semantic_search_usearch)\n  * [Cross Encoder](https://www.sbert.net/docs/package_reference/cross_encoder/index.html)\n    * [CrossEncoder](https://www.sbert.net/docs/package_reference/cross_encoder/cross_encoder.html)\n      * [CrossEncoder](https://www.sbert.net/docs/package_reference/cross_encoder/cross_encoder.html#id1)\n      * [CrossEncoderModelCardData](https://www.sbert.net/docs/package_reference/cross_encoder/cross_encoder.html#crossencodermodelcarddata)\n    * [Trainer](https://www.sbert.net/docs/package_reference/cross_encoder/trainer.html)\n      * [CrossEncoderTrainer](https://www.sbert.net/docs/package_reference/cross_encoder/trainer.html#crossencodertrainer)\n    * [Training Arguments](https://www.sbert.net/docs/package_reference/cross_encoder/training_args.html)\n      * [CrossEncoderTrainingArguments](https://www.sbert.net/docs/package_reference/cross_encoder/training_args.html#crossencodertrainingarguments)\n    * [Losses](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html)\n      * [BinaryCrossEntropyLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#binarycrossentropyloss)\n      * [CrossEntropyLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#crossentropyloss)\n      * [LambdaLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#lambdaloss)\n      * [ListMLELoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#listmleloss)\n      * [PListMLELoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#plistmleloss)\n      * [ListNetLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#listnetloss)\n      * [MultipleNegativesRankingLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#multiplenegativesrankingloss)\n      * [CachedMultipleNegativesRankingLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#cachedmultiplenegativesrankingloss)\n      * [MSELoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#mseloss)\n      * [MarginMSELoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#marginmseloss)\n      * [RankNetLoss](https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#ranknetloss)\n    * [Evaluation](https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html)\n      * [CrossEncoderRerankingEvaluator](https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencoderrerankingevaluator)\n      * [CrossEncoderNanoBEIREvaluator](https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencodernanobeirevaluator)\n      * [CrossEncoderClassificationEvaluator](https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencoderclassificationevaluator)\n      * [CrossEncoderCorrelationEvaluator](https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencodercorrelationevaluator)\n  * [util](https://www.sbert.net/docs/package_reference/util.html)\n    * [Helper Functions](https://www.sbert.net/docs/package_reference/util.html#module-sentence_transformers.util)\n      * [`community_detection()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.community_detection)\n      * [`http_get()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.http_get)\n      * [`is_training_available()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.is_training_available)\n      * [`mine_hard_negatives()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.mine_hard_negatives)\n      * [`normalize_embeddings()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.normalize_embeddings)\n      * [`paraphrase_mining()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.paraphrase_mining)\n      * [`semantic_search()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.semantic_search)\n      * [`truncate_embeddings()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.truncate_embeddings)\n    * [Model Optimization](https://www.sbert.net/docs/package_reference/util.html#module-sentence_transformers.backend)\n      * [`export_dynamic_quantized_onnx_model()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.backend.export_dynamic_quantized_onnx_model)\n      * [`export_optimized_onnx_model()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.backend.export_optimized_onnx_model)\n      * [`export_static_quantized_openvino_model()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.backend.export_static_quantized_openvino_model)\n    * [Similarity Metrics](https://www.sbert.net/docs/package_reference/util.html#module-sentence_transformers.util)\n      * [`cos_sim()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.cos_sim)\n      * [`dot_score()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.dot_score)\n      * [`euclidean_sim()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.euclidean_sim)\n      * [`manhattan_sim()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.manhattan_sim)\n      * [`pairwise_cos_sim()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_cos_sim)\n      * [`pairwise_dot_score()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_dot_score)\n      * [`pairwise_euclidean_sim()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_euclidean_sim)\n      * [`pairwise_manhattan_sim()`](https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_manhattan_sim)\n\n\n[Sentence Transformers](https://www.sbert.net/index.html)\n  * [](https://www.sbert.net/index.html)\n  * Pretrained Models\n  * [ Edit on GitHub](https://github.com/UKPLab/sentence-transformers/blob/master/docs/sentence_transformer/pretrained_models.md)\n\n\n# Pretrained Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#pretrained-models \"Link to this heading\")\nWe provide various pre-trained Sentence Transformers models via our Sentence Transformers Hugging Face organization. Additionally, over 6,000 community Sentence Transformers models have been publicly released on the Hugging Face Hub. All models can be found here:\n  * **Original models** : [Sentence Transformers Hugging Face organization](https://huggingface.co/models?library=sentence-transformers&author=sentence-transformers).\n  * **Community models** : [All Sentence Transformer models on Hugging Face](https://huggingface.co/models?library=sentence-transformers).\n\n\nEach of these models can be easily downloaded and used like so:\nOriginal Models\nFor the original models from the [Sentence Transformers Hugging Face organization](https://huggingface.co/models?library=sentence-transformers&author=sentence-transformers), it is not necessary to include the model author or organization prefix. For example, this snippet loads [sentence-transformers/all-mpnet-base-v2](https://huggingface.co/sentence-transformers/all-mpnet-base-v2).\n```\nfrom sentence_transformers import SentenceTransformer\n# Load https://huggingface.co/sentence-transformers/all-mpnet-base-v2\nmodel = SentenceTransformer(\"all-mpnet-base-v2\")\nembeddings = model.encode([\n  \"The weather is lovely today.\",\n  \"It's so sunny outside!\",\n  \"He drove to the stadium.\",\n])\nsimilarities = model.similarity(embeddings, embeddings)\n\n```\nCopy to clipboard\nNote\nConsider using the [Massive Textual Embedding Benchmark leaderboard](https://huggingface.co/spaces/mteb/leaderboard) as an inspiration of strong Sentence Transformer models. Be wary:\n  * **Model sizes** : it is recommended to filter away the large models that might not be feasible without excessive hardware.\n  * **Experimentation is key** : models that perform well on the leaderboard do not necessarily do well on your tasks, it is **crucial** to experiment with various promising models.\n\n\nTip\nRead [Sentence Transformer > Usage > Speeding up Inference](https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html) for tips on how to speed up inference of models by up to 2x-3x.\n## Original Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#original-models \"Link to this heading\")\nThe following table provides an overview of a selection of our models. They have been extensively evaluated for their quality to embedded sentences (Performance Sentence Embeddings) and to embedded search queries & paragraphs (Performance Semantic Search).\nThe **all-** * models were trained on all available training data (more than 1 billion training pairs) and are designed as **general purpose** models. The [**all-mpnet-base-v2**](https://huggingface.co/sentence-transformers/all-mpnet-base-v2) model provides the best quality, while [**all-MiniLM-L6-v2**](https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2) is 5 times faster and still offers good quality. Toggle _All models_ to see all evaluated original models.\n## Semantic Search Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#semantic-search-models \"Link to this heading\")\nThe following models have been specifically trained for **Semantic Search** : Given a question / search query, these models are able to find relevant text passages. For more details, see [Usage > Semantic Search](https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html).\nDocumentation\n  1. [multi-qa-mpnet-base-cos-v1](https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-cos-v1)\n  2. [`SentenceTransformer`](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentence_transformers.SentenceTransformer \"sentence_transformers.SentenceTransformer\")\n  3. [`SentenceTransformer.encode`](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentence_transformers.SentenceTransformer.encode \"sentence_transformers.SentenceTransformer.encode\")\n  4. [`SentenceTransformer.similarity`](https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentence_transformers.SentenceTransformer.similarity \"sentence_transformers.SentenceTransformer.similarity\")\n\n\n```\nfrom sentence_transformers import SentenceTransformer\nmodel = SentenceTransformer(\"multi-qa-mpnet-base-cos-v1\")\nquery_embedding = model.encode(\"How big is London\")\npassage_embeddings = model.encode([\n  \"London is known for its financial district\",\n  \"London has 9,787,426 inhabitants at the 2011 census\",\n  \"The United Kingdom is the fourth largest exporter of goods in the world\",\n])\nsimilarity = model.similarity(query_embedding, passage_embeddings)\n# => tensor([[0.4659, 0.6142, 0.2697]])\n\n```\nCopy to clipboard\n### Multi-QA Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#multi-qa-models \"Link to this heading\")\nThe following models have been trained on [215M question-answer pairs](https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-dot-v1#training) from various sources and domains, including StackExchange, Yahoo Answers, Google & Bing search queries and many more. These model perform well across many search tasks and domains.\nThese models were tuned to be used with the dot-product similarity score:\nModel | Performance Semantic Search (6 Datasets) | Queries (GPU / CPU) per sec.  \n---|---|---  \n[multi-qa-mpnet-base-dot-v1](https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-dot-v1) | 57.60 | 4,000 / 170  \n[multi-qa-distilbert-dot-v1](https://huggingface.co/sentence-transformers/multi-qa-distilbert-dot-v1) | 52.51 | 7,000 / 350  \n[multi-qa-MiniLM-L6-dot-v1](https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-dot-v1) | 49.19 | 18,000 / 750  \nThese models produce normalized vectors of length 1, which can be used with dot-product, cosine-similarity and Euclidean distance as the similarity functions:\nModel | Performance Semantic Search (6 Datasets) | Queries (GPU / CPU) per sec.  \n---|---|---  \n[multi-qa-mpnet-base-cos-v1](https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-cos-v1) | 57.46 | 4,000 / 170  \n[multi-qa-distilbert-cos-v1](https://huggingface.co/sentence-transformers/multi-qa-distilbert-cos-v1) | 52.83 | 7,000 / 350  \n[multi-qa-MiniLM-L6-cos-v1](https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-cos-v1) | 51.83 | 18,000 / 750  \n### MSMARCO Passage Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#msmarco-passage-models \"Link to this heading\")\nThe following models have been trained on the [MSMARCO Passage Ranking Dataset](https://github.com/microsoft/MSMARCO-Passage-Ranking), which contains 500k real queries from Bing search together with the relevant passages from various web sources. Given the diversity of the MSMARCO dataset, models also perform well on other domains.\nThese models were tuned to be used with the dot-product similarity score:\nModel | MSMARCO MRR@10 dev set | Performance Semantic Search (6 Datasets) | Queries (GPU / CPU) per sec.  \n---|---|---|---  \n[msmarco-bert-base-dot-v5](https://huggingface.co/sentence-transformers/msmarco-bert-base-dot-v5) | 38.08 | 52.11 | 4,000 / 170  \n[msmarco-distilbert-dot-v5](https://huggingface.co/sentence-transformers/msmarco-distilbert-dot-v5) | 37.25 | 49.47 | 7,000 / 350  \n[msmarco-distilbert-base-tas-b](https://huggingface.co/sentence-transformers/msmarco-distilbert-base-tas-b) | 34.43 | 49.25 | 7,000 / 350  \nThese models produce normalized vectors of length 1, which can be used with dot-product, cosine-similarity and Euclidean distance as the similarity functions:\nModel | MSMARCO MRR@10 dev set | Performance Semantic Search (6 Datasets) | Queries (GPU / CPU) per sec.  \n---|---|---|---  \n[msmarco-distilbert-cos-v5](https://huggingface.co/sentence-transformers/msmarco-distilbert-cos-v5) | 33.79 | 44.98 | 7,000 / 350  \n[msmarco-MiniLM-L12-cos-v5](https://huggingface.co/sentence-transformers/msmarco-MiniLM-L12-cos-v5) | 32.75 | 43.89 | 11,000 / 400  \n[msmarco-MiniLM-L6-cos-v5](https://huggingface.co/sentence-transformers/msmarco-MiniLM-L6-cos-v5) | 32.27 | 42.16 | 18,000 / 750  \n[MSMARCO Models - More details](https://www.sbert.net/docs/pretrained-models/msmarco-v5.html)\n## Multilingual Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#multilingual-models \"Link to this heading\")\nThe following models similar embeddings for the same texts in different languages. You do not need to specify the input language. Details are in our publication [Making Monolingual Sentence Embeddings Multilingual using Knowledge Distillation](https://arxiv.org/abs/2004.09813). We used the following 50+ languages: ar, bg, ca, cs, da, de, el, en, es, et, fa, fi, fr, fr-ca, gl, gu, he, hi, hr, hu, hy, id, it, ja, ka, ko, ku, lt, lv, mk, mn, mr, ms, my, nb, nl, pl, pt, pt-br, ro, ru, sk, sl, sq, sr, sv, th, tr, uk, ur, vi, zh-cn, zh-tw.\n### Semantic Similarity Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#semantic-similarity-models \"Link to this heading\")\nThese models find semantically similar sentences within one language or across languages:\n  * **[distiluse-base-multilingual-cased-v1](https://huggingface.co/sentence-transformers/distiluse-base-multilingual-cased-v1)** : Multilingual knowledge distilled version of [multilingual Universal Sentence Encoder](https://arxiv.org/abs/1907.04307). Supports 15 languages: Arabic, Chinese, Dutch, English, French, German, Italian, Korean, Polish, Portuguese, Russian, Spanish, Turkish.\n  * **[distiluse-base-multilingual-cased-v2](https://huggingface.co/sentence-transformers/distiluse-base-multilingual-cased-v2)** : Multilingual knowledge distilled version of [multilingual Universal Sentence Encoder](https://arxiv.org/abs/1907.04307). This version supports 50+ languages, but performs a bit weaker than the v1 model.\n  * **[paraphrase-multilingual-MiniLM-L12-v2](https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2)** - Multilingual version of [paraphrase-MiniLM-L12-v2](https://huggingface.co/sentence-transformers/paraphrase-MiniLM-L12-v2), trained on parallel data for 50+ languages.\n  * **[paraphrase-multilingual-mpnet-base-v2](https://huggingface.co/sentence-transformers/paraphrase-multilingual-mpnet-base-v2)** - Multilingual version of [paraphrase-mpnet-base-v2](https://huggingface.co/sentence-transformers/paraphrase-mpnet-base-v2), trained on parallel data for 50+ languages.\n\n\n### Bitext Mining[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#bitext-mining \"Link to this heading\")\nBitext mining describes the process of finding translated sentence pairs in two languages. If this is your use-case, the following model gives the best performance:\n  * **[LaBSE](https://huggingface.co/sentence-transformers/LaBSE)** - [LaBSE](https://arxiv.org/abs/2007.01852) Model. Supports 109 languages. Works well for finding translation pairs in multiple languages. As detailed [here](https://arxiv.org/abs/2004.09813), LaBSE works less well for assessing the similarity of sentence pairs that are not translations of each other.\n\n\nExtending a model to new languages is easy by following [Training Examples > Multilingual Models](https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html).\n## Image & Text-Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#image-text-models \"Link to this heading\")\nThe following models can embed images and text into a joint vector space. See [Usage > Image Search](https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html) for more details how to use for text2image-search, image2image-search, image clustering, and zero-shot image classification.\nThe following models are available with their respective Top 1 accuracy on zero-shot ImageNet validation dataset.\nModel | Top 1 Performance  \n---|---  \n[clip-ViT-L-14](https://huggingface.co/sentence-transformers/clip-ViT-L-14) | 75.4  \n[clip-ViT-B-16](https://huggingface.co/sentence-transformers/clip-ViT-B-16) | 68.1  \n[clip-ViT-B-32](https://huggingface.co/sentence-transformers/clip-ViT-B-32) | 63.3  \nWe further provide this multilingual text-image model:\n  * **[clip-ViT-B-32-multilingual-v1](https://huggingface.co/sentence-transformers/clip-ViT-B-32-multilingual-v1)** - Multilingual text encoder for the [clip-ViT-B-32](https://huggingface.co/sentence-transformers/clip-ViT-B-32) model using [Multilingual Knowledge Distillation](https://arxiv.org/abs/2004.09813). This model can encode text in 50+ languages to match the image vectors from the [clip-ViT-B-32](https://huggingface.co/sentence-transformers/clip-ViT-B-32) model.\n\n\n## INSTRUCTOR models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#instructor-models \"Link to this heading\")\nSome INSTRUCTOR models, such as [hkunlp/instructor-large](https://huggingface.co/hkunlp/instructor-large), are natively supported in Sentence Transformers. These models are special, as they are trained with instructions in mind. Notably, the primary difference between normal Sentence Transformer models and Instructor models is that the latter do not include the instructions themselves in the pooling step.\nThe following models work out of the box:\n  * [hkunlp/instructor-base](https://huggingface.co/hkunlp/instructor-base)\n  * [hkunlp/instructor-large](https://huggingface.co/hkunlp/instructor-large)\n  * [hkunlp/instructor-xl](https://huggingface.co/hkunlp/instructor-xl)\n\n\nYou can use these models like so:\n```\nfrom sentence_transformers import SentenceTransformer\nmodel = SentenceTransformer(\"hkunlp/instructor-large\")\nembeddings = model.encode(\n  [\n    \"Dynamical Scalar Degree of Freedom in Horava-Lifshitz Gravity\",\n    \"Comparison of Atmospheric Neutrino Flux Calculations at Low Energies\",\n    \"Fermion Bags in the Massive Gross-Neveu Model\",\n    \"QCD corrections to Associated t-tbar-H production at the Tevatron\",\n  ],\n  prompt=\"Represent the Medicine sentence for clustering: \",\n)\nprint(embeddings.shape)\n# => (4, 768)\n\n```\nCopy to clipboard\nFor example, for information retrieval:\n```\nfrom sentence_transformers import SentenceTransformer\nfrom sentence_transformers.util import cos_sim\nmodel = SentenceTransformer(\"hkunlp/instructor-large\")\nquery = \"where is the food stored in a yam plant\"\nquery_instruction = (\n  \"Represent the Wikipedia question for retrieving supporting documents: \"\n)\ncorpus = [\n  'Yams are perennial herbaceous vines native to Africa, Asia, and the Americas and cultivated for the consumption of their starchy tubers in many temperate and tropical regions. The tubers themselves, also called \"yams\", come in a variety of forms owing to numerous cultivars and related species.',\n  \"The disparate impact theory is especially controversial under the Fair Housing Act because the Act regulates many activities relating to housing, insurance, and mortgage loansâ€”and some scholars have argued that the theory's use under the Fair Housing Act, combined with extensions of the Community Reinvestment Act, contributed to rise of sub-prime lending and the crash of the U.S. housing market and ensuing global economic recession\",\n  \"Disparate impact in United States labor law refers to practices in employment, housing, and other areas that adversely affect one group of people of a protected characteristic more than another, even though rules applied by employers or landlords are formally neutral. Although the protected classes vary by statute, most federal civil rights laws protect based on race, color, religion, national origin, and sex as protected traits, and some laws include disability status and other traits as well.\",\n]\ncorpus_instruction = \"Represent the Wikipedia document for retrieval: \"\nquery_embedding = model.encode(query, prompt=query_instruction)\ncorpus_embeddings = model.encode(corpus, prompt=corpus_instruction)\nsimilarities = cos_sim(query_embedding, corpus_embeddings)\nprint(similarities)\n# => tensor([[0.8835, 0.7037, 0.6970]])\n\n```\nCopy to clipboard\nAll other Instructor models either 1) will not load as they refer to `InstructorEmbedding` in their `modules.json` or 2) require calling `model.set_pooling_include_prompt(include_prompt=False)` after loading.\n## Scientific Similarity Models[](https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#scientific-similarity-models \"Link to this heading\")\n[SPECTER](https://arxiv.org/abs/2004.07180) is a model trained on scientific citations and can be used to estimate the similarity of two publications. We can use it to find similar papers.\n  * **[allenai-specter](https://huggingface.co/sentence-transformers/allenai-specter)** - [Semantic Search Python Example](https://github.com/UKPLab/sentence-transformers/tree/master/docs/sentence_transformer/../../examples/sentence_transformer/applications/semantic-search/semantic_search_publications.py) / [Semantic Search Colab Example](https://colab.research.google.com/drive/12hfBveGHRsxhPIUMmJYrll2lFU4fOX06)\n\n\n[ Previous](https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html \"Creating Custom Models\") [Next ](https://www.sbert.net/docs/sentence_transformer/training_overview.html \"Training Overview\")\n© Copyright 2025.\nBuilt with [Sphinx](https://www.sphinx-doc.org/) using a [theme](https://github.com/readthedocs/sphinx_rtd_theme) provided by [Read the Docs](https://readthedocs.org). \n",
    "content_quality_score": 0.2,
    "summary": null,
    "child_urls": [
        "https://www.sbert.net/index.html",
        "https://www.sbert.net/docs/installation.html",
        "https://www.sbert.net/docs/installation.html#install-with-pip",
        "https://www.sbert.net/docs/installation.html#install-with-conda",
        "https://www.sbert.net/docs/installation.html#install-from-source",
        "https://www.sbert.net/docs/installation.html#editable-install",
        "https://www.sbert.net/docs/installation.html#install-pytorch-with-cuda-support",
        "https://www.sbert.net/docs/quickstart.html",
        "https://www.sbert.net/docs/quickstart.html#sentence-transformer",
        "https://www.sbert.net/docs/quickstart.html#cross-encoder",
        "https://www.sbert.net/docs/quickstart.html#next-steps",
        "https://www.sbert.net/docs/migration_guide.html",
        "https://www.sbert.net/docs/migration_guide.html#migrating-from-v2-x-to-v3-x",
        "https://www.sbert.net/docs/migration_guide.html#migration-for-specific-parameters-from-sentencetransformer-fit",
        "https://www.sbert.net/docs/migration_guide.html#migration-for-custom-datasets-and-dataloaders-used-in-sentencetransformer-fit",
        "https://www.sbert.net/docs/migration_guide.html#migrating-from-v3-x-to-v4-x",
        "https://www.sbert.net/docs/migration_guide.html#migration-for-parameters-on-crossencoder-initialization-and-methods",
        "https://www.sbert.net/docs/migration_guide.html#migration-for-specific-parameters-from-crossencoder-fit",
        "https://www.sbert.net/docs/migration_guide.html#migration-for-crossencoder-evaluators",
        "https://www.sbert.net/docs/sentence_transformer/usage/usage.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#initializing-a-sentence-transformer-model",
        "https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#calculating-embeddings",
        "https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#prompt-templates",
        "https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#input-sequence-length",
        "https://www.sbert.net/examples/sentence_transformer/applications/computing-embeddings/README.html#multi-process-multi-gpu-encoding",
        "https://www.sbert.net/docs/sentence_transformer/usage/semantic_textual_similarity.html",
        "https://www.sbert.net/docs/sentence_transformer/usage/semantic_textual_similarity.html#similarity-calculation",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#background",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#symmetric-vs-asymmetric-semantic-search",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#manual-implementation",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#optimized-implementation",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#speed-optimization",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#elasticsearch",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#approximate-nearest-neighbor",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#retrieve-re-rank",
        "https://www.sbert.net/examples/sentence_transformer/applications/semantic-search/README.html#examples",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#retrieve-re-rank-pipeline",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#retrieval-bi-encoder",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#re-ranker-cross-encoder",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#example-scripts",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#pre-trained-bi-encoders-retrieval",
        "https://www.sbert.net/examples/sentence_transformer/applications/retrieve_rerank/README.html#pre-trained-cross-encoders-re-ranker",
        "https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#k-means",
        "https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#agglomerative-clustering",
        "https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#fast-clustering",
        "https://www.sbert.net/examples/sentence_transformer/applications/clustering/README.html#topic-modeling",
        "https://www.sbert.net/examples/sentence_transformer/applications/paraphrase-mining/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/paraphrase-mining/README.html#sentence_transformers.util.paraphrase_mining",
        "https://www.sbert.net/examples/sentence_transformer/applications/parallel-sentence-mining/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/parallel-sentence-mining/README.html#margin-based-mining",
        "https://www.sbert.net/examples/sentence_transformer/applications/parallel-sentence-mining/README.html#examples",
        "https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html#installation",
        "https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html#usage",
        "https://www.sbert.net/examples/sentence_transformer/applications/image-search/README.html#examples",
        "https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html",
        "https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#binary-quantization",
        "https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#scalar-int8-quantization",
        "https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#additional-extensions",
        "https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#demo",
        "https://www.sbert.net/examples/sentence_transformer/applications/embedding-quantization/README.html#try-it-yourself",
        "https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html",
        "https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#pytorch",
        "https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#onnx",
        "https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#openvino",
        "https://www.sbert.net/docs/sentence_transformer/usage/efficiency.html#benchmarks",
        "https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html",
        "https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html#structure-of-sentence-transformer-models",
        "https://www.sbert.net/docs/sentence_transformer/usage/custom_models.html#sentence-transformer-model-from-a-transformers-model",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#original-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#semantic-search-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#multi-qa-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#msmarco-passage-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#multilingual-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#semantic-similarity-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#bitext-mining",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#image-text-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#instructor-models",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#scientific-similarity-models",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#why-finetune",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#training-components",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#dataset",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#dataset-format",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#loss-function",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#training-arguments",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#evaluator",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#trainer",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#callbacks",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#multi-dataset-training",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#deprecated-training",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#best-base-embedding-models",
        "https://www.sbert.net/docs/sentence_transformer/training_overview.html#comparisons-with-crossencoder-training",
        "https://www.sbert.net/docs/sentence_transformer/dataset_overview.html",
        "https://www.sbert.net/docs/sentence_transformer/dataset_overview.html#datasets-on-the-hugging-face-hub",
        "https://www.sbert.net/docs/sentence_transformer/dataset_overview.html#pre-existing-datasets",
        "https://www.sbert.net/docs/sentence_transformer/loss_overview.html",
        "https://www.sbert.net/docs/sentence_transformer/loss_overview.html#loss-table",
        "https://www.sbert.net/docs/sentence_transformer/loss_overview.html#loss-modifiers",
        "https://www.sbert.net/docs/sentence_transformer/loss_overview.html#distillation",
        "https://www.sbert.net/docs/sentence_transformer/loss_overview.html#commonly-used-loss-functions",
        "https://www.sbert.net/docs/sentence_transformer/loss_overview.html#custom-loss-functions",
        "https://www.sbert.net/docs/sentence_transformer/training/examples.html",
        "https://www.sbert.net/examples/sentence_transformer/training/sts/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/sts/README.html#training-data",
        "https://www.sbert.net/examples/sentence_transformer/training/sts/README.html#loss-function",
        "https://www.sbert.net/examples/sentence_transformer/training/nli/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/nli/README.html#data",
        "https://www.sbert.net/examples/sentence_transformer/training/nli/README.html#softmaxloss",
        "https://www.sbert.net/examples/sentence_transformer/training/nli/README.html#multiplenegativesrankingloss",
        "https://www.sbert.net/examples/sentence_transformer/training/paraphrases/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/paraphrases/README.html#pre-trained-models",
        "https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html#training",
        "https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html#multiplenegativesrankingloss",
        "https://www.sbert.net/examples/sentence_transformer/training/quora_duplicate_questions/README.html#pretrained-models",
        "https://www.sbert.net/examples/sentence_transformer/training/ms_marco/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/ms_marco/README.html#bi-encoder",
        "https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#use-cases",
        "https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#results",
        "https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#training",
        "https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#inference",
        "https://www.sbert.net/examples/sentence_transformer/training/matryoshka/README.html#code-examples",
        "https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#use-cases",
        "https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#results",
        "https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#training",
        "https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#inference",
        "https://www.sbert.net/examples/sentence_transformer/training/adaptive_layer/README.html#code-examples",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#extend-your-own-models",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#training",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#datasets",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#sources-for-training-data",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#evaluation",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#available-pre-trained-models",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#usage",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#performance",
        "https://www.sbert.net/examples/sentence_transformer/training/multilingual/README.html#citation",
        "https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#knowledge-distillation",
        "https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#speed-performance-trade-off",
        "https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#dimensionality-reduction",
        "https://www.sbert.net/examples/sentence_transformer/training/distillation/README.html#quantization",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#motivation",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#extend-to-your-own-datasets",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#methodology",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#scenario-1-limited-or-small-annotated-datasets-few-labeled-sentence-pairs",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#scenario-2-no-annotated-datasets-only-unlabeled-sentence-pairs",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#training",
        "https://www.sbert.net/examples/sentence_transformer/training/data_augmentation/README.html#citation",
        "https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html#what-are-prompts",
        "https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html#why-would-we-train-with-prompts",
        "https://www.sbert.net/examples/sentence_transformer/training/prompts/README.html#how-do-we-train-with-prompts",
        "https://www.sbert.net/examples/sentence_transformer/training/peft/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#compatibility-methods",
        "https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#adding-a-new-adapter",
        "https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#loading-a-pretrained-adapter",
        "https://www.sbert.net/examples/sentence_transformer/training/peft/README.html#training-script",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#tsdae",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#simcse",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#ct",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#ct-in-batch-negative-sampling",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#masked-language-model-mlm",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#genq",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#gpl",
        "https://www.sbert.net/examples/sentence_transformer/unsupervised_learning/README.html#performance-comparison",
        "https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html",
        "https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html#domain-adaptation-vs-unsupervised-learning",
        "https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html#adaptive-pre-training",
        "https://www.sbert.net/examples/sentence_transformer/domain_adaptation/README.html#gpl-generative-pseudo-labeling",
        "https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html",
        "https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html#hpo-components",
        "https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html#putting-it-all-together",
        "https://www.sbert.net/examples/sentence_transformer/training/hpo/README.html#example-scripts",
        "https://www.sbert.net/docs/sentence_transformer/training/distributed.html",
        "https://www.sbert.net/docs/sentence_transformer/training/distributed.html#comparison",
        "https://www.sbert.net/docs/sentence_transformer/training/distributed.html#fsdp",
        "https://www.sbert.net/docs/cross_encoder/usage/usage.html",
        "https://www.sbert.net/examples/cross_encoder/applications/README.html",
        "https://www.sbert.net/examples/cross_encoder/applications/README.html#cross-encoder-vs-bi-encoder",
        "https://www.sbert.net/examples/cross_encoder/applications/README.html#when-to-use-cross-bi-encoders",
        "https://www.sbert.net/examples/cross_encoder/applications/README.html#cross-encoders-usage",
        "https://www.sbert.net/examples/cross_encoder/applications/README.html#combining-bi-and-cross-encoders",
        "https://www.sbert.net/examples/cross_encoder/applications/README.html#training-cross-encoders",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html#ms-marco",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html#squad-qnli",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html#stsbenchmark",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html#quora-duplicate-questions",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html#nli",
        "https://www.sbert.net/docs/cross_encoder/pretrained_models.html#community-models",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#why-finetune",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#training-components",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#dataset",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#dataset-format",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#hard-negatives-mining",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#loss-function",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#training-arguments",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#evaluator",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#trainer",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#callbacks",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#multi-dataset-training",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#training-tips",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#deprecated-training",
        "https://www.sbert.net/docs/cross_encoder/training_overview.html#comparisons-with-sentencetransformer-training",
        "https://www.sbert.net/docs/cross_encoder/loss_overview.html",
        "https://www.sbert.net/docs/cross_encoder/loss_overview.html#loss-table",
        "https://www.sbert.net/docs/cross_encoder/loss_overview.html#distillation",
        "https://www.sbert.net/docs/cross_encoder/loss_overview.html#commonly-used-loss-functions",
        "https://www.sbert.net/docs/cross_encoder/loss_overview.html#custom-loss-functions",
        "https://www.sbert.net/docs/cross_encoder/training/examples.html",
        "https://www.sbert.net/examples/cross_encoder/training/sts/README.html",
        "https://www.sbert.net/examples/cross_encoder/training/sts/README.html#training-data",
        "https://www.sbert.net/examples/cross_encoder/training/sts/README.html#loss-function",
        "https://www.sbert.net/examples/cross_encoder/training/sts/README.html#inference",
        "https://www.sbert.net/examples/cross_encoder/training/nli/README.html",
        "https://www.sbert.net/examples/cross_encoder/training/nli/README.html#data",
        "https://www.sbert.net/examples/cross_encoder/training/nli/README.html#crossentropyloss",
        "https://www.sbert.net/examples/cross_encoder/training/nli/README.html#inference",
        "https://www.sbert.net/examples/cross_encoder/training/quora_duplicate_questions/README.html",
        "https://www.sbert.net/examples/cross_encoder/training/quora_duplicate_questions/README.html#training",
        "https://www.sbert.net/examples/cross_encoder/training/quora_duplicate_questions/README.html#inference",
        "https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html",
        "https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html#cross-encoder",
        "https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html#training-scripts",
        "https://www.sbert.net/examples/cross_encoder/training/ms_marco/README.html#inference",
        "https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html",
        "https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html#binarycrossentropyloss",
        "https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html#cachedmultiplenegativesrankingloss",
        "https://www.sbert.net/examples/cross_encoder/training/rerankers/README.html#inference",
        "https://www.sbert.net/examples/cross_encoder/training/distillation/README.html",
        "https://www.sbert.net/examples/cross_encoder/training/distillation/README.html#cross-encoder-knowledge-distillation",
        "https://www.sbert.net/examples/cross_encoder/training/distillation/README.html#inference",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/index.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#id1",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentencetransformermodelcarddata",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#similarityfunction",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/trainer.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/trainer.html#sentencetransformertrainer",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/training_args.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/training_args.html#sentencetransformertrainingarguments",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchalltripletloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchhardsoftmargintripletloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchhardtripletloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#batchsemihardtripletloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#contrastiveloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#onlinecontrastiveloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#contrastivetensionloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#contrastivetensionlossinbatchnegatives",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cosentloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#angleloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cosinesimilarityloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#denoisingautoencoderloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#gistembedloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cachedgistembedloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#mseloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#marginmseloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#matryoshkaloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#matryoshka2dloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#adaptivelayerloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#megabatchmarginloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#multiplenegativesrankingloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cachedmultiplenegativesrankingloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#multiplenegativessymmetricrankingloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#cachedmultiplenegativessymmetricrankingloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#softmaxloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/losses.html#tripletloss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/sampler.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/sampler.html#batchsamplers",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/sampler.html#multidatasetbatchsamplers",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#binaryclassificationevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#embeddingsimilarityevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#informationretrievalevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#nanobeirevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#mseevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#paraphraseminingevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#rerankingevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#sentenceevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#sequentialevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#translationevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/evaluation.html#tripletevaluator",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#parallelsentencesdataset",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#sentencelabeldataset",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#denoisingautoencoderdataset",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/datasets.html#noduplicatesdataloader",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/models.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/models.html#main-classes",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/models.html#further-classes",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html#sentence_transformers.quantization.quantize_embeddings",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html#sentence_transformers.quantization.semantic_search_faiss",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/quantization.html#sentence_transformers.quantization.semantic_search_usearch",
        "https://www.sbert.net/docs/package_reference/cross_encoder/index.html",
        "https://www.sbert.net/docs/package_reference/cross_encoder/cross_encoder.html",
        "https://www.sbert.net/docs/package_reference/cross_encoder/cross_encoder.html#id1",
        "https://www.sbert.net/docs/package_reference/cross_encoder/cross_encoder.html#crossencodermodelcarddata",
        "https://www.sbert.net/docs/package_reference/cross_encoder/trainer.html",
        "https://www.sbert.net/docs/package_reference/cross_encoder/trainer.html#crossencodertrainer",
        "https://www.sbert.net/docs/package_reference/cross_encoder/training_args.html",
        "https://www.sbert.net/docs/package_reference/cross_encoder/training_args.html#crossencodertrainingarguments",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#binarycrossentropyloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#crossentropyloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#lambdaloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#listmleloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#plistmleloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#listnetloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#multiplenegativesrankingloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#cachedmultiplenegativesrankingloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#mseloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#marginmseloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/losses.html#ranknetloss",
        "https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html",
        "https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencoderrerankingevaluator",
        "https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencodernanobeirevaluator",
        "https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencoderclassificationevaluator",
        "https://www.sbert.net/docs/package_reference/cross_encoder/evaluation.html#crossencodercorrelationevaluator",
        "https://www.sbert.net/docs/package_reference/util.html",
        "https://www.sbert.net/docs/package_reference/util.html#module-sentence_transformers.util",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.community_detection",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.http_get",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.is_training_available",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.mine_hard_negatives",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.normalize_embeddings",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.paraphrase_mining",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.semantic_search",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.truncate_embeddings",
        "https://www.sbert.net/docs/package_reference/util.html#module-sentence_transformers.backend",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.backend.export_dynamic_quantized_onnx_model",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.backend.export_optimized_onnx_model",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.backend.export_static_quantized_openvino_model",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.cos_sim",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.dot_score",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.euclidean_sim",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.manhattan_sim",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_cos_sim",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_dot_score",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_euclidean_sim",
        "https://www.sbert.net/docs/package_reference/util.html#sentence_transformers.util.pairwise_manhattan_sim",
        "https://www.sbert.net/docs/sentence_transformer/pretrained_models.html#pretrained-models",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentence_transformers.SentenceTransformer",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentence_transformers.SentenceTransformer.encode",
        "https://www.sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html#sentence_transformers.SentenceTransformer.similarity",
        "https://www.sbert.net/docs/pretrained-models/msmarco-v5.html",
        "https://github.com/UKPLab/sentence-transformers/blob/master/docs/sentence_transformer/pretrained_models.md",
        "https://huggingface.co/models?library=sentence-transformers&author=sentence-transformers",
        "https://huggingface.co/models?library=sentence-transformers",
        "https://huggingface.co/sentence-transformers/all-mpnet-base-v2",
        "https://huggingface.co/spaces/mteb/leaderboard",
        "https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2",
        "https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-cos-v1",
        "https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-dot-v1#training",
        "https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-dot-v1",
        "https://huggingface.co/sentence-transformers/multi-qa-distilbert-dot-v1",
        "https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-dot-v1",
        "https://huggingface.co/sentence-transformers/multi-qa-distilbert-cos-v1",
        "https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-cos-v1",
        "https://github.com/microsoft/MSMARCO-Passage-Ranking",
        "https://huggingface.co/sentence-transformers/msmarco-bert-base-dot-v5",
        "https://huggingface.co/sentence-transformers/msmarco-distilbert-dot-v5",
        "https://huggingface.co/sentence-transformers/msmarco-distilbert-base-tas-b",
        "https://huggingface.co/sentence-transformers/msmarco-distilbert-cos-v5",
        "https://huggingface.co/sentence-transformers/msmarco-MiniLM-L12-cos-v5",
        "https://huggingface.co/sentence-transformers/msmarco-MiniLM-L6-cos-v5",
        "https://arxiv.org/abs/2004.09813",
        "https://huggingface.co/sentence-transformers/distiluse-base-multilingual-cased-v1",
        "https://arxiv.org/abs/1907.04307",
        "https://huggingface.co/sentence-transformers/distiluse-base-multilingual-cased-v2",
        "https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2",
        "https://huggingface.co/sentence-transformers/paraphrase-MiniLM-L12-v2",
        "https://huggingface.co/sentence-transformers/paraphrase-multilingual-mpnet-base-v2",
        "https://huggingface.co/sentence-transformers/paraphrase-mpnet-base-v2",
        "https://huggingface.co/sentence-transformers/LaBSE",
        "https://arxiv.org/abs/2007.01852",
        "https://huggingface.co/sentence-transformers/clip-ViT-L-14",
        "https://huggingface.co/sentence-transformers/clip-ViT-B-16",
        "https://huggingface.co/sentence-transformers/clip-ViT-B-32",
        "https://huggingface.co/sentence-transformers/clip-ViT-B-32-multilingual-v1",
        "https://huggingface.co/hkunlp/instructor-large",
        "https://huggingface.co/hkunlp/instructor-base",
        "https://huggingface.co/hkunlp/instructor-xl",
        "https://arxiv.org/abs/2004.07180",
        "https://huggingface.co/sentence-transformers/allenai-specter",
        "https://github.com/UKPLab/sentence-transformers/tree/master/docs/sentence_transformer/../../examples/sentence_transformer/applications/semantic-search/semantic_search_publications.py",
        "https://colab.research.google.com/drive/12hfBveGHRsxhPIUMmJYrll2lFU4fOX06",
        "https://www.sphinx-doc.org/",
        "https://github.com/readthedocs/sphinx_rtd_theme",
        "https://readthedocs.org"
    ]
}