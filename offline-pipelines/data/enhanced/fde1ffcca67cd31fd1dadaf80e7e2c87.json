{
    "id": "fde1ffcca67cd31fd1dadaf80e7e2c87",
    "metadata": {
        "id": "fde1ffcca67cd31fd1dadaf80e7e2c87",
        "url": "https://github.com/google-research/google-research/tree/master/scann/",
        "title": "google-research/scann at master · google-research/google-research · GitHub",
        "properties": {
            "description": "Google Research. Contribute to google-research/google-research development by creating an account on GitHub.",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/7959dcab9f45378c7e835a1091f7d57c1784e1c0f1f1b45ccbf4ac8569da975a/google-research/google-research",
            "og:image:alt": "Google Research. Contribute to google-research/google-research development by creating an account on GitHub.",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "google-research/scann at master · google-research/google-research",
            "og:url": "https://github.com/google-research/google-research/tree/master/scann",
            "og:description": "Google Research. Contribute to google-research/google-research development by creating an account on GitHub.",
            "twitter:image": "https://opengraph.githubassets.com/7959dcab9f45378c7e835a1091f7d57c1784e1c0f1f1b45ccbf4ac8569da975a/google-research/google-research",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "google-research/scann at master · google-research/google-research",
            "twitter:description": "Google Research. Contribute to google-research/google-research development by creating an account on GitHub."
        }
    },
    "parent_metadata": {
        "id": "bdfd8c3d748087ebbcb07ff677fc39d8",
        "url": "https://www.notion.so/Vector-Index-DB-bdfd8c3d748087ebbcb07ff677fc39d8",
        "title": "Vector Index & DB",
        "properties": {
            "Type": [
                "Leaf"
            ]
        }
    },
    "content": "[Skip to content](https://github.com/google-research/google-research/tree/master/scann/#start-of-content)\n## Navigation Menu\nToggle navigation\n[ ](https://github.com/)\n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fgoogle-research%2Fgoogle-research%2Ftree%2Fmaster%2Fscann%2F)\n  * Product \n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n  * Solutions \nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](https://github.com/solutions/industry/nonprofits)\nBy use case\n    * [ DevSecOps ](https://github.com/solutions/use-case/devsecops)\n    * [ DevOps ](https://github.com/solutions/use-case/devops)\n    * [ CI/CD ](https://github.com/solutions/use-case/ci-cd)\n    * [ View all use cases ](https://github.com/solutions/use-case)\nBy industry\n    * [ Healthcare ](https://github.com/solutions/industry/healthcare)\n    * [ Financial services ](https://github.com/solutions/industry/financial-services)\n    * [ Manufacturing ](https://github.com/solutions/industry/manufacturing)\n    * [ Government ](https://github.com/solutions/industry/government)\n    * [ View all industries ](https://github.com/solutions/industry)\n[ View all solutions ](https://github.com/solutions)\n  * Resources \nTopics\n    * [ AI ](https://github.com/resources/articles/ai)\n    * [ DevOps ](https://github.com/resources/articles/devops)\n    * [ Security ](https://github.com/resources/articles/security)\n    * [ Software Development ](https://github.com/resources/articles/software-development)\n    * [ View all ](https://github.com/resources/articles)\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ Events & Webinars ](https://resources.github.com)\n    * [ Ebooks & Whitepapers ](https://github.com/resources/whitepapers)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n  * Open Source \n    * [ GitHub Sponsors Fund open source developers  ](https://github.com/sponsors)\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n  * Enterprise \n    * [ Enterprise platform AI-powered developer platform  ](https://github.com/enterprise)\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ Copilot for business Enterprise-grade AI features  ](https://github.com/features/copilot/copilot-business)\n    * [ Premium Support Enterprise-grade 24/7 support  ](https://github.com/premium-support)\n  * [Pricing](https://github.com/pricing)\n\n\nSearch or jump to...\n# Search code, repositories, users, issues, pull requests...\nSearch \nClear\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n#  Provide feedback \nWe read every piece of feedback, and take your input very seriously.\nInclude my email address so I can be contacted\nCancel  Submit feedback \n#  Saved searches \n## Use saved searches to filter your results more quickly\nName\nQuery\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \nCancel  Create saved search \n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fgoogle-research%2Fgoogle-research%2Ftree%2Fmaster%2Fscann%2F)\n[ Sign up ](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Ffiles%2Fdisambiguate&source=header-repo&source_repo=google-research%2Fgoogle-research) Reseting focus\nYou signed in with another tab or window. [Reload](https://github.com/google-research/google-research/tree/master/scann/) to refresh your session. You signed out in another tab or window. [Reload](https://github.com/google-research/google-research/tree/master/scann/) to refresh your session. You switched accounts on another tab or window. [Reload](https://github.com/google-research/google-research/tree/master/scann/) to refresh your session. Dismiss alert\n{{ message }}\n[ google-research ](https://github.com/google-research) / **[google-research](https://github.com/google-research/google-research) ** Public\n  * [ Notifications ](https://github.com/login?return_to=%2Fgoogle-research%2Fgoogle-research) You must be signed in to change notification settings\n  * [ Fork 8k ](https://github.com/login?return_to=%2Fgoogle-research%2Fgoogle-research)\n  * [ Star  35.2k ](https://github.com/login?return_to=%2Fgoogle-research%2Fgoogle-research)\n\n\n  * [ Code ](https://github.com/google-research/google-research)\n  * [ Issues 951 ](https://github.com/google-research/google-research/issues)\n  * [ Pull requests 553 ](https://github.com/google-research/google-research/pulls)\n  * [ Actions ](https://github.com/google-research/google-research/actions)\n  * [ Security ](https://github.com/google-research/google-research/security)\n  * [ Insights ](https://github.com/google-research/google-research/pulse)\n\n\nAdditional navigation options\n  * [ Code  ](https://github.com/google-research/google-research)\n  * [ Issues  ](https://github.com/google-research/google-research/issues)\n  * [ Pull requests  ](https://github.com/google-research/google-research/pulls)\n  * [ Actions  ](https://github.com/google-research/google-research/actions)\n  * [ Security  ](https://github.com/google-research/google-research/security)\n  * [ Insights  ](https://github.com/google-research/google-research/pulse)\n\n\n## Files\nmaster\n  * .circleci\n  * Algorithms_and_Hardness_for_Learning_Linear_Thresholds_from_Label_Proportions\n  * CIQA\n  * COSTAR\n  * CardBench_zero_shot_cardinality_training\n  * CoDi\n  * Domain_Agnostic_Contrastive_Representations_for_Learning_from_Label_Proportions\n  * KNF\n  * LLP_Bench\n  * On_Combining_Bags_to_Better_Learn_from_Label_Proportions\n  * OpenMSD\n  * RevThink\n  * STraTA\n  * aav\n  * abps\n  * abstract_nas\n  * action_angle_networks\n  * action_gap_rl\n  * activation_clustering\n  * active_selective_prediction\n  * adaptive_learning_rate_tuner\n  * adaptive_low_rank\n  * adaptive_prediction\n  * adaptive_surrogates\n  * adversarial_nets_lr_scheduler\n  * after_kernel\n  * agile_modeling\n  * al_for_fep\n  * albert\n  * algae_dice\n  * aloe\n  * alx\n  * amortized_bo\n  * android_control\n  * android_in_the_wild\n  * android_interaction\n  * anthea\n  * aptamers_mlpd\n  * aqt\n  * aquadem\n  * ara_optimization\n  * arithmetic_sampling\n  * arxiv_latex_cleaner\n  * assemblenet\n  * assessment_plan_modeling\n  * attentional_adapters\n  * attribute_semantics\n  * attribute_with_prefixlm\n  * attribution\n  * auditing_privacy_via_lia\n  * automated_feature_engineering\n  * automatic_structured_vi\n  * automl_zero\n  * autoregressive_diffusion\n  * aux_tasks\n  * axial\n  * bam\n  * bangbang_qaoa\n  * basisnet\n  * batch_science\n  * behavior_regularized_offline_rl\n  * bertseq2seq\n  * better_storylines\n  * bigg\n  * bigger_better_faster\n  * bisimulation_aaai2020\n  * bitempered_loss\n  * blur\n  * bnn_hmc\n  * bonus_based_exploration\n  * brush_splat\n  * building_detection\n  * business_metric_aware_forecasting\n  * bustle\n  * c_learning\n  * cache_replacement\n  * caltrain\n  * camp_zipnerf\n  * cann\n  * capsule_em\n  * caql\n  * cascaded_networks\n  * cate\n  * causal_label_bias\n  * cbertscore\n  * cell_embedder\n  * cell_mixer\n  * cfq\n  * cfq_pt_vs_sa\n  * charformer\n  * ciw_label_noise\n  * ckd\n  * class_balanced_distillation\n  * clay\n  * clip_as_rnn\n  * cluster_gcn\n  * clustering_normalized_cuts\n  * cmmd\n  * cnn_quantization\n  * cochlear_implant\n  * code_as_policies\n  * codistillation\n  * cognate_inpaint_neighbors\n  * coherent_gradients\n  * cola\n  * cold_posterior_bnn\n  * cold_posterior_flax\n  * collaborative_tr_collection\n  * collocated_irradiance_network\n  * coltran\n  * combiner\n  * comisr\n  * compgen_d2t\n  * compositional_classification\n  * compositional_rl\n  * compositional_transformers\n  * concept_explanations\n  * concept_marl\n  * conceptor\n  * conqur\n  * constrained_language_typology\n  * context_aware_transliteration\n  * contrack\n  * contrails\n  * contrastive_rl\n  * coref_mt5\n  * correct_batch_effects_wdn\n  * correlated_compression\n  * correlation_clustering\n  * covid_epidemiology\n  * covid_vhh_design\n  * cube_unfoldings\n  * cubert\n  * cvl_public\n  * d3pm\n  * dac\n  * darc\n  * data_free_distillation\n  * data_selection\n  * dataset_or_not\n  * dble\n  * ddpm_w_distillation\n  * deciphering_clinical_abbreviations\n  * dedal\n  * deep_homography\n  * deep_representation_one_class\n  * demogen\n  * dense_representations_for_entity_retrieval\n  * deplot\n  * depth_and_motion_learning\n  * depth_from_video_in_the_wild\n  * design_bipartite_experiments\n  * dialogue_ope\n  * dichotomy_of_control\n  * dictionary_learning\n  * didi_dataset\n  * differentiable_data_selection\n  * differentially_private_gnns\n  * diffusion_distillation\n  * dimensions_of_motion\n  * dipper\n  * direction_net\n  * disarm\n  * dissecting_factual_predictions\n  * distinguishing_romanized_hindi_urdu\n  * distracting_control\n  * distribution_embedding_networks\n  * dnn_predict_accuracy\n  * do_wide_and_deep_networks_learn_the_same_things\n  * docent\n  * domain_conditional_predictors\n  * dot_vs_learned_similarity\n  * dp_alternating_minimization\n  * dp_instructions\n  * dp_l2\n  * dp_multiq\n  * dp_posets\n  * dp_regression\n  * dp_scaling_laws\n  * dp_sgd_clipping\n  * dp_topk\n  * dp_transfer\n  * dpok\n  * dpsgd_batch_sampler_accounting\n  * dql_grasping\n  * drawtext\n  * dreamfields\n  * dreg_estimators\n  * drfact\n  * drjax\n  * drops\n  * dselect_k_moe\n  * dual_dice\n  * dual_pixels\n  * dvrl\n  * earthquakes_fern\n  * ebp\n  * editable_graph_temporal\n  * eim\n  * eli5_retrieval_large_lm\n  * elo_rater_model\n  * enas_lm\n  * encyclopedic_vqa\n  * entropy_semiring\n  * eq_mag_prediction\n  * es_enas\n  * es_maml\n  * es_optimization\n  * etcmodel\n  * etcsum\n  * euphonia_spice\n  * ev3\n  * evanet\n  * evolution\n  * experience_replay\n  * explaining_risk_increase\n  * extreme_memorization\n  * f_divergence_estimation_ram_mc\n  * f_net\n  * factoring_sqif\n  * factorize_a_city\n  * factors_of_influence\n  * fair_submodular_matroid\n  * fair_submodular_maximization_2020\n  * fair_survival_analysis\n  * fairness_and_bias_in_online_selection\n  * fairness_teaching\n  * fast_gradient_clipping\n  * fast_k_means_2020\n  * fastconvnets\n  * fat\n  * federated_vision_datasets\n  * felix\n  * findit\n  * fisher_brc\n  * flare_removal\n  * flax_models\n  * floatseg\n  * flood_forecasting\n  * fm4tlp\n  * fractals_language\n  * frechet_audio_distance\n  * frechet_video_distance\n  * frequency_analysis\n  * frmt\n  * frost\n  * fsq\n  * fully_dynamic_facility_location\n  * fully_dynamic_submodular_maximization\n  * fvlm\n  * fwl\n  * gaternet\n  * gbrt\n  * ged_tts\n  * gen_patch_neural_rendering\n  * general-pattern-machines\n  * general_staircase_mechanism\n  * generalization_representations_rl_aistats22\n  * generalized_rates\n  * generative_forests\n  * generative_trees\n  * genomics_ood\n  * geometric_tokenizer\n  * gfsa\n  * ghum\n  * gift\n  * gigamol\n  * goemotions\n  * gon\n  * gradient_based_tuning\n  * gradient_coresets_replay\n  * graph_compression\n  * graph_embedding\n  * graph_sampler\n  * graph_temporal_ai\n  * graphqa\n  * grbm\n  * group_agnostic_fairness\n  * grouptesting\n  * grow_bert\n  * gumbel_max_causal_gadgets\n  * gwikimatch\n  * hal\n  * hct\n  * health_equity_toolbox\n  * hierarchical_foresight\n  * high_confidence_ir_eval_using_genai\n  * hipi\n  * hist_thresh\n  * hitnet\n  * hmc_swindles\n  * homophonous_logography\n  * hspace\n  * hst_clustering\n  * human_attention\n  * human_object_interaction\n  * hybrid_zero_dynamics\n  * hyperattention\n  * hyperbolic\n  * hyperbolic_discount\n  * hypertransformer\n  * ials\n  * icetea\n  * ieg\n  * igt_optimizer\n  * ime\n  * imghum\n  * imp\n  * implicit_constrained_optimization\n  * implicit_pdf\n  * incontext\n  * incremental_gain\n  * individually_fair_clustering\n  * inerf\n  * infinite_nature\n  * infinite_nature_zero\n  * infinite_uncertainty\n  * instruction_following_eval\n  * intent_recognition\n  * interactive_cbms\n  * interpretability_benchmark\n  * invariant_explanations\n  * invariant_slot_attention\n  * investigating_m4\n  * ipagnn\n  * irregular_timeseries_pretraining\n  * isl\n  * isolating_factors\n  * jax_dft\n  * jax_mpc\n  * jax_particles\n  * jaxbarf\n  * jaxnerf\n  * jaxraytrace\n  * jaxsel\n  * jaxstronomy\n  * jrl\n  * jslm\n  * k_norm\n  * keypose\n  * kip\n  * kl_guided_sampling\n  * kobe\n  * ksme\n  * kwikbucks\n  * kws_streaming\n  * l2da\n  * l2tl\n  * label_bias\n  * lamp\n  * language_model_uncertainty\n  * large_margin\n  * large_scale_voting\n  * lasagna_mt\n  * latent_programmer\n  * latent_shift_adaptation\n  * layout-blt\n  * learn_to_forget\n  * learn_to_infer\n  * learning_parameter_allocation\n  * learning_with_little_mixing\n  * learnreg\n  * ledge\n  * lego\n  * light_field_neural_rendering\n  * lighthouse\n  * linear_dynamical_systems\n  * linear_eval\n  * linear_identifiability\n  * linear_vae\n  * lista_design_space\n  * llm4mobile\n  * llm_longdoc_interpretability\n  * lm_fact_tracing\n  * lm_memorization\n  * local_forward_gradient\n  * locoprop\n  * logic_inference_dataset\n  * logit_adjustment\n  * logit_dp\n  * loss_functions_transfer\n  * low_rank_local_connectivity\n  * m_layer\n  * m_theory\n  * macro_mining\n  * madlad_400\n  * many_constraints\n  * marot\n  * mathwriting\n  * matsci\n  * mave\n  * mbpp\n  * mechanic\n  * meena\n  * memento\n  * memory_efficient_attention\n  * menger_rl\n  * mentormix\n  * merf\n  * mesh_diffusion\n  * meta_augmentation\n  * meta_learning_without_memorization\n  * meta_pseudo_labels\n  * meta_reward_learning\n  * metapose\n  * mface\n  * mico\n  * micronet_challenge\n  * microscope_image_quality\n  * milking_cowmask\n  * minigrid_basics\n  * mir_uai24\n  * misinfo_provenance\n  * missing_link\n  * ml_debiaser\n  * mmmt_if\n  * mobilebert\n  * model_pruning\n  * model_swarm\n  * moe_models_implicit_bias\n  * moe_mtl\n  * moew\n  * mol_dqn\n  * moment_advice\n  * motion_blur\n  * mpi_extrapolation\n  * mqm_viewer\n  * muNet\n  * mucped22\n  * mucped23\n  * muller\n  * multi_annotator\n  * multi_game_dt\n  * multi_resolution_rec\n  * multilingual_abbreviation_survey\n  * multimodalchat\n  * munchausen_rl\n  * musiq\n  * mutual_information_representation_learning\n  * muzero\n  * ncsnv3\n  * negative_cache\n  * nerflets\n  * nested_rhat\n  * neural_additive_models\n  * neural_guided_symbolic_regression\n  * neutra\n  * newspalm_mbr_qe\n  * nf_diffusion\n  * ngrammer\n  * nigt_optimizer\n  * nngp_nas\n  * non_decomp\n  * non_semantic_speech_benchmark\n  * nopad_inception_v3_fcn\n  * norml\n  * npy_array\n  * numbert\n  * occluder_recovery\n  * offline_online_bandits\n  * omnimatte3D\n  * on_device_rewrite\n  * online_belief_propagation\n  * online_correlation_clustering\n  * opencontrails\n  * openscene\n  * opt_list\n  * optimizing_interpretability\n  * osf\n  * padir\n  * pair_ngram\n  * pairwise_fairness\n  * pali\n  * palm2_automqm\n  * parallel_clustering\n  * pde_preconditioner\n  * performer\n  * persistent-nature\n  * persistent_es\n  * perso_arabic_norm\n  * perturbations\n  * pgdl\n  * playrooms\n  * poem\n  * policy_eval\n  * polish\n  * poly_kernel_sketch\n  * polysketchformer\n  * postproc_fairness\n  * pretrained_conv\n  * prime\n  * primer\n  * privacy_poison\n  * privacy_sandbox\n  * private_covariance_estimation\n  * private_kendall\n  * private_personalized_pagerank\n  * private_sampling\n  * private_text_transformers\n  * procedure_cloning\n  * property_linking\n  * protein_lm\n  * protenn\n  * protnlm\n  * protoattend\n  * protseq\n  * proxy_rewards\n  * pruning_identified_exemplars\n  * pse\n  * psyborgs\n  * psycholab\n  * ptopk_patch_selection\n  * pvn\n  * pwil\n  * q_match\n  * qanet\n  * qsp_quantum_metrology\n  * quantile_regression\n  * quantum_sample_learning\n  * r4r\n  * rank_ckpt\n  * rankgen\n  * rankt5\n  * ravens\n  * rcc_algorithms\n  * rce\n  * rcs_tnsa\n  * re_identification_risk\n  * readtwice\n  * realformer\n  * recs_ecosystem_creator_rl\n  * recursive_optimizer\n  * red-ace\n  * regnerf\n  * relc\n  * rembert\n  * remote_sensing_representations\n  * repnet\n  * representation_batch_rl\n  * representation_clustering\n  * representation_similarity\n  * reset_free_learning\n  * resolve_ref_exp_elements_ml\n  * restarting_FOM_for_LP\n  * revisiting_neural_scaling_laws\n  * rewritelm\n  * richhf_18k\n  * rico_semantics\n  * rise\n  * rl4circopt\n  * rl_metrics_aaai2021\n  * rl_repr\n  * rllim\n  * robust_count_sketch\n  * robust_loss\n  * robust_loss_jax\n  * robust_optim\n  * robust_retrieval\n  * rouge\n  * routing_transformer\n  * rpc\n  * rrlfd\n  * rs_gnn\n  * saccader\n  * saf\n  * sail_rl\n  * saycan\n  * scalable_shampoo\n  * scaling_transformer_inference_efficiency\n  * scaling_transformers\n  * scann\n    * build_deps\n    * docs\n    * scann\n    * tf_serving\n    * BUILD.bazel\n    * README.md\n    * WORKSPACE\n    * configure.py\n    * pyproject.toml\n  * schema_guided_dst\n  * schptm_benchmark\n  * score_prior\n  * scouts_ml_model_env\n  * screen2words\n  * scrna_benchmark\n  * sd_gym\n  * seeds\n  * semantic_routing\n  * seq2act\n  * sequential_attention\n  * sgk\n  * shortcut_testing\n  * sifer\n  * sign_language_detection\n  * simpdom\n  * simple_mesh_viewer\n  * simple_probabilistic_programming\n  * simulation_research\n  * single_view_mpi\n  * sketching\n  * sliding_window_clustering\n  * slot_attention\n  * sm3\n  * smart_eval\n  * smerf\n  * smith\n  * smu\n  * smug_saliency\n  * smurf\n  * snerg\n  * snlds\n  * sobolev\n  * social_rl\n  * socraticmodels\n  * soft_sort\n  * soft_topk\n  * soil_moisture_retrieval\n  * solver1d\n  * sorb\n  * spaceopt\n  * sparse_data\n  * sparse_deferred\n  * sparse_mixers\n  * sparse_soft_topk\n  * sparse_user_encoders\n  * special_orthogonalization\n  * specinvert\n  * spectral_bias\n  * spectral_graphormer\n  * speculative_cascades\n  * speech_embedding\n  * spelling_convention_nlm\n  * spin_spherical_cnns\n  * spreadsheet_coder\n  * sql_palm\n  * squiggles\n  * stable_transfer\n  * stacked_capsule_autoencoders\n  * standalone_self_attention_in_vision_models\n  * star_cfq\n  * state_of_sparsity\n  * stochastic_to_deterministic\n  * storm_optimizer\n  * strategic_exploration\n  * stream_s2s\n  * streetview_contrails_dataset\n  * structformer\n  * structured_multihashing\n  * student_mentor_dataset_cleaning\n  * study_recommend\n  * subclass_distillation\n  * sudoku_gpt\n  * sufficient_input_subsets\n  * summae\n  * supcon\n  * supervised_pixel_contrastive_loss\n  * symbiosis\n  * symbolic_functionals\n  * t5_closed_book_qa\n  * table_rag\n  * tabnet\n  * tag\n  * talk_about_random_splits\n  * taperception\n  * task_set\n  * task_specific_learned_opt\n  * tcc\n  * tempered_boosting\n  * text_blueprint\n  * tf3d\n  * tf_trees\n  * tft\n  * tide\n  * tide_nlp\n  * time_varying_optimization\n  * tiny_video_nets\n  * tip\n  * topological_transformer\n  * towards_gan_benchmarks\n  * trainable_grids\n  * transformer_modifications\n  * trimap\n  * true_teacher\n  * truss_decomposition\n  * tsmixer\n  * tubevit\n  * tunas\n  * uflow\n  * ugif\n  * ugsl\n  * ul2\n  * uncertainties\n  * understanding_convolutions_on_graphs\n  * universal_embedding_challenge\n  * unprocessing\n  * uq_benchmark_2019\n  * using_dl_to_annotate_protein_universe\n  * vae_ood\n  * value_dice\n  * value_function_polytope\n  * vatt\n  * vbmi\n  * vct\n  * vdvae_flax\n  * video_structure\n  * video_timeline_modeling\n  * vila\n  * visual_relationship\n  * vmsst\n  * vrdu\n  * warmstart_graphcut_image_segmentation\n  * wavelet_fields\n  * weak_disentangle\n  * whatever-name-we-choose\n  * widget-caption\n  * widget_caption\n  * wiki_split_bleu_eval\n  * wildfire_conv_lstm\n  * wildfire_perc_sim\n  * wt5\n  * xirl\n  * xor_attriqa\n  * yeast_transcription_network\n  * yobo\n  * yoto\n  * youtube_asl\n  * youtube_sl_25\n  * zebra_puzzle_generator\n  * zebraix\n  * zero_shot_structured_reflection\n  * .gitignore\n  * CONTRIBUTING.md\n  * LICENSE\n  * README.md\n  * __init__.py\n  * compile_protos.sh\n\n\n## Breadcrumbs\n  1. [google-research](https://github.com/google-research/google-research/tree/master)\n\n\n/\n# scann\n/\nCopy path\n## Directory actions\n## More options\n## Directory actions\n## More options\n## Latest commit\n![sammymax](https://avatars.githubusercontent.com/u/6895661?v=4&size=40)![copybara-github](https://avatars.githubusercontent.com/u/32201506?v=4&size=40)\n[sammymax](https://github.com/google-research/google-research/commits?author=sammymax)\nand\n[copybara-github](https://github.com/google-research/google-research/commits?author=copybara-github)\n[ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0)\nMar 20, 2025\n[a1ed453](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0) · Mar 20, 2025\n## History\n[History](https://github.com/google-research/google-research/commits/master/scann)\n[](https://github.com/google-research/google-research/commits/master/scann)\n## Breadcrumbs\n  1. [google-research](https://github.com/google-research/google-research/tree/master)\n\n\n/\n# scann\n/\nTop\n## Folders and files\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n### parent directory\n[..](https://github.com/google-research/google-research/tree/master)  \n[build_deps](https://github.com/google-research/google-research/tree/master/scann/build_deps \"build_deps\")| [build_deps](https://github.com/google-research/google-research/tree/master/scann/build_deps \"build_deps\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \n[docs](https://github.com/google-research/google-research/tree/master/scann/docs \"docs\")| [docs](https://github.com/google-research/google-research/tree/master/scann/docs \"docs\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \n[scann](https://github.com/google-research/google-research/tree/master/scann/scann \"scann\")| [scann](https://github.com/google-research/google-research/tree/master/scann/scann \"scann\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \n[tf_serving](https://github.com/google-research/google-research/tree/master/scann/tf_serving \"tf_serving\")| [tf_serving](https://github.com/google-research/google-research/tree/master/scann/tf_serving \"tf_serving\")| [ScaNN release 1.2.10](https://github.com/google-research/google-research/commit/03c4c851a28dffe0244c65089e68d6cbf73c730b \"ScaNN release 1.2.10\nPiperOrigin-RevId: 553157017\")| Aug 2, 2023  \n[BUILD.bazel](https://github.com/google-research/google-research/blob/master/scann/BUILD.bazel \"BUILD.bazel\")| [BUILD.bazel](https://github.com/google-research/google-research/blob/master/scann/BUILD.bazel \"BUILD.bazel\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \n[README.md](https://github.com/google-research/google-research/blob/master/scann/README.md \"README.md\")| [README.md](https://github.com/google-research/google-research/blob/master/scann/README.md \"README.md\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \n[WORKSPACE](https://github.com/google-research/google-research/blob/master/scann/WORKSPACE \"WORKSPACE\")| [WORKSPACE](https://github.com/google-research/google-research/blob/master/scann/WORKSPACE \"WORKSPACE\")| [ScaNN release 1.3.5](https://github.com/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c \"ScaNN release 1.3.5\nPiperOrigin-RevId: 716352253\")| Jan 16, 2025  \n[configure.py](https://github.com/google-research/google-research/blob/master/scann/configure.py \"configure.py\")| [configure.py](https://github.com/google-research/google-research/blob/master/scann/configure.py \"configure.py\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \n[pyproject.toml](https://github.com/google-research/google-research/blob/master/scann/pyproject.toml \"pyproject.toml\")| [pyproject.toml](https://github.com/google-research/google-research/blob/master/scann/pyproject.toml \"pyproject.toml\")| [ScaNN release 1.4.0](https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0 \"ScaNN release 1.4.0\nPiperOrigin-RevId: 738950166\")| Mar 20, 2025  \nView all files  \n## [README.md](https://github.com/google-research/google-research/tree/master/scann/#readme)\n# ScaNN\n[](https://github.com/google-research/google-research/tree/master/scann/#scann)\nScaNN (Scalable Nearest Neighbors) is a method for efficient vector similarity search at scale. This code implements [1, 2], which includes search space pruning and quantization for Maximum Inner Product Search and also supports other distance functions such as Euclidean distance. The implementation is optimized for x86 processors with AVX support. ScaNN achieves state-of-the-art performance on [ann-benchmarks.com](http://ann-benchmarks.com) as shown on the glove-100-angular dataset below:\n[![glove-100-angular](https://github.com/google-research/google-research/raw/master/scann/docs/glove_bench.png)](https://github.com/google-research/google-research/raw/master/scann/docs/glove_bench.png)\nScaNN can be configured to fit datasets with different sizes and distributions. It has both TensorFlow and Python APIs. The library shows strong performance with large datasets [1, 2]. The code is released for research purposes. For more details on the academic description of algorithms, please see below.\nReferences:\n  1. ```\n@inproceedings{avq_2020,\n title={Accelerating Large-Scale Inference with Anisotropic Vector Quantization},\n author={Guo, Ruiqi and Sun, Philip and Lindgren, Erik and Geng, Quan and Simcha, David and Chern, Felix and Kumar, Sanjiv},\n booktitle={International Conference on Machine Learning},\n year={2020},\n URL={https://arxiv.org/abs/1908.10396}\n}\n\n```\n\n  2. ```\n@inproceedings{soar_2023,\n title={SOAR: Improved Indexing for Approximate Nearest Neighbor Search},\n author={Sun, Philip and Simcha, David and Dopson, Dave and Guo, Ruiqi and Kumar, Sanjiv},\n booktitle={Neural Information Processing Systems},\n year={2023},\n URL={https://arxiv.org/abs/2404.00774}\n}\n\n```\n\n\n\n## Installation\n[](https://github.com/google-research/google-research/tree/master/scann/#installation)\n`manylinux_2_27`-compatible wheels are available on [PyPI](https://pypi.org/project/scann/):\n```\npip install scann\n\n```\n\nScaNN supports Linux environments running Python versions 3.9-3.12. See [docs/releases.md](https://github.com/google-research/google-research/blob/master/scann/docs/releases.md) for release notes; the page also contains download links for ScaNN wheels prior to version 1.1.0, which were not released on PyPI. **The x86 wheels require AVX and FMA instruction set support, while the ARM wheels require NEON**.\nIn accordance with the [`manylinux_2_27` specification](https://peps.python.org/pep-0600/), ScaNN requires `libstdc++` version 3.4.23 or above from the operating system. See [here](https://stackoverflow.com/questions/10354636) for an example of how to find your system's `libstdc++` version; it can generally be upgraded by installing a newer version of `g++`.\n### Using ScaNN with TensorFlow\n[](https://github.com/google-research/google-research/tree/master/scann/#using-scann-with-tensorflow)\nScaNN has optional TensorFlow op bindings that allow ScaNN's nearest neighbor search functionality to be embedded into a TensorFlow SavedModel. **As of ScaNN 1.4.0, this functionality is no longer enabled by default, and`pip install scann[tf]` is now needed to enable the TensorFlow integration.**\nIf `scann[tf]` is installed, the TensorFlow ops can be accessed via `scann.scann_ops`, and the API is almost identical to `scann.scann_ops_pybind`. For users not already in the TensorFlow ecosystem, the native Python bindings in `scann.scann_ops_pybind` are a better fit, which is why the TensorFlow ops are an optional extra.\n#### Integration with TensorFlow Serving\n[](https://github.com/google-research/google-research/tree/master/scann/#integration-with-tensorflow-serving)\nWe provide custom Docker images of [TF Serving](https://github.com/tensorflow/serving) that are linked to the ScaNN TF ops. See the [`tf_serving` directory](https://github.com/google-research/google-research/blob/master/scann/tf_serving/README.md) for further information.\n## Usage\n[](https://github.com/google-research/google-research/tree/master/scann/#usage)\nSee the example in [docs/example.ipynb](https://github.com/google-research/google-research/blob/master/scann/docs/example.ipynb). For a more in-depth explanation of ScaNN techniques, see [docs/algorithms.md](https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md).\n## Building from source\n[](https://github.com/google-research/google-research/tree/master/scann/#building-from-source)\nTo build ScaNN from source, first install the build tool [bazel](https://bazel.build) (use version 7.x), Clang 18, and libstdc++ headers for C++17 (which are provided with GCC 9). Additionally, ScaNN requires a modern version of Python (3.9.x or later) and Tensorflow 2.19 installed on that version of Python. Once these prerequisites are satisfied, run the following command in the root directory of the repository:\n```\npython configure.py\nCC=clang-18 bazel build -c opt --features=thin_lto --copt=-mavx --copt=-mfma --cxxopt=\"-std=c++17\" --copt=-fsized-deallocation --copt=-w :build_pip_pkg\n./bazel-bin/build_pip_pkg\n\n```\n\nTo build an ARM binary from an ARM machine, the prerequisites are the same, but the compile flags are slightly modified:\n```\npython configure.py\nCC=clang-18 bazel build -c opt --features=thin_lto --copt=-march=armv8-a+simd --cxxopt=\"-std=c++17\" --copt=-fsized-deallocation --copt=-w :build_pip_pkg\n./bazel-bin/build_pip_pkg\n\n```\n\nA .whl file should appear in the root of the repository upon successful completion of these commands. This .whl can be installed via pip.\n## Footer\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n### Footer navigation\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": null,
    "summary": null,
    "child_urls": [
        "https://github.com/google-research/google-research/tree/master/scann/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fgoogle-research%2Fgoogle-research%2Ftree%2Fmaster%2Fscann%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/resources/whitepapers",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot/copilot-business",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Ffiles%2Fdisambiguate&source=header-repo&source_repo=google-research%2Fgoogle-research",
        "https://github.com/google-research",
        "https://github.com/google-research/google-research",
        "https://github.com/login?return_to=%2Fgoogle-research%2Fgoogle-research",
        "https://github.com/google-research/google-research/issues",
        "https://github.com/google-research/google-research/pulls",
        "https://github.com/google-research/google-research/actions",
        "https://github.com/google-research/google-research/security",
        "https://github.com/google-research/google-research/pulse",
        "https://github.com/google-research/google-research/tree/master",
        "https://github.com/google-research/google-research/commits?author=sammymax",
        "https://github.com/google-research/google-research/commits?author=copybara-github",
        "https://github.com/google-research/google-research/commit/a1ed4537b7a8c11bedcf505f9816bc7775a396a0",
        "https://github.com/google-research/google-research/commits/master/scann",
        "https://github.com/google-research/google-research/tree/master/scann/build_deps",
        "https://github.com/google-research/google-research/tree/master/scann/docs",
        "https://github.com/google-research/google-research/tree/master/scann/scann",
        "https://github.com/google-research/google-research/tree/master/scann/tf_serving",
        "https://github.com/google-research/google-research/commit/03c4c851a28dffe0244c65089e68d6cbf73c730b",
        "https://github.com/google-research/google-research/blob/master/scann/BUILD.bazel",
        "https://github.com/google-research/google-research/blob/master/scann/README.md",
        "https://github.com/google-research/google-research/blob/master/scann/WORKSPACE",
        "https://github.com/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c",
        "https://github.com/google-research/google-research/blob/master/scann/configure.py",
        "https://github.com/google-research/google-research/blob/master/scann/pyproject.toml",
        "https://github.com/google-research/google-research/tree/master/scann/#readme",
        "https://github.com/google-research/google-research/tree/master/scann/#scann",
        "https://github.com/google-research/google-research/raw/master/scann/docs/glove_bench.png",
        "https://github.com/google-research/google-research/tree/master/scann/#installation",
        "https://github.com/google-research/google-research/blob/master/scann/docs/releases.md",
        "https://github.com/google-research/google-research/tree/master/scann/#using-scann-with-tensorflow",
        "https://github.com/google-research/google-research/tree/master/scann/#integration-with-tensorflow-serving",
        "https://github.com/tensorflow/serving",
        "https://github.com/google-research/google-research/blob/master/scann/tf_serving/README.md",
        "https://github.com/google-research/google-research/tree/master/scann/#usage",
        "https://github.com/google-research/google-research/blob/master/scann/docs/example.ipynb",
        "https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md",
        "https://github.com/google-research/google-research/tree/master/scann/#building-from-source",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "http://ann-benchmarks.com",
        "https://pypi.org/project/scann/",
        "https://peps.python.org/pep-0600/",
        "https://stackoverflow.com/questions/10354636",
        "https://bazel.build",
        "https://www.githubstatus.com/"
    ]
}