{
    "id": "be2f5c03ed25d39ffada0f0c1f07c871",
    "metadata": {
        "id": "be2f5c03ed25d39ffada0f0c1f07c871",
        "url": "https://github.com/triton-lang/triton/",
        "title": "GitHub - triton-lang/triton: Development repository for the Triton language and compiler",
        "properties": {
            "description": "Development repository for the Triton language and compiler - triton-lang/triton",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/5c1a293df4ed08f0837d75708b234ff43367037cf26a46560f8270af42bcb72c/triton-lang/triton",
            "og:image:alt": "Development repository for the Triton language and compiler - triton-lang/triton",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - triton-lang/triton: Development repository for the Triton language and compiler",
            "og:url": "https://github.com/triton-lang/triton",
            "og:description": "Development repository for the Triton language and compiler - triton-lang/triton",
            "twitter:image": "https://opengraph.githubassets.com/5c1a293df4ed08f0837d75708b234ff43367037cf26a46560f8270af42bcb72c/triton-lang/triton",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - triton-lang/triton: Development repository for the Triton language and compiler",
            "twitter:description": "Development repository for the Triton language and compiler - triton-lang/triton"
        }
    },
    "parent_metadata": {
        "id": "ad7b1bbbf1bfbe4ac9381e3c2a9fef40",
        "url": "https://www.notion.so/GPU-Programming-ad7b1bbbf1bfbe4ac9381e3c2a9fef40",
        "title": "GPU Programming",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](https://github.com/triton-lang/triton/#start-of-content)\n## Navigation Menu\nToggle navigation\n[ ](https://github.com/)\n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Ftriton-lang%2Ftriton%2F)\n  * Product \n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n  * Solutions \nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](https://github.com/solutions/industry/nonprofits)\nBy use case\n    * [ DevSecOps ](https://github.com/solutions/use-case/devsecops)\n    * [ DevOps ](https://github.com/solutions/use-case/devops)\n    * [ CI/CD ](https://github.com/solutions/use-case/ci-cd)\n    * [ View all use cases ](https://github.com/solutions/use-case)\nBy industry\n    * [ Healthcare ](https://github.com/solutions/industry/healthcare)\n    * [ Financial services ](https://github.com/solutions/industry/financial-services)\n    * [ Manufacturing ](https://github.com/solutions/industry/manufacturing)\n    * [ Government ](https://github.com/solutions/industry/government)\n    * [ View all industries ](https://github.com/solutions/industry)\n[ View all solutions ](https://github.com/solutions)\n  * Resources \nTopics\n    * [ AI ](https://github.com/resources/articles/ai)\n    * [ DevOps ](https://github.com/resources/articles/devops)\n    * [ Security ](https://github.com/resources/articles/security)\n    * [ Software Development ](https://github.com/resources/articles/software-development)\n    * [ View all ](https://github.com/resources/articles)\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ Events & Webinars ](https://resources.github.com)\n    * [ Ebooks & Whitepapers ](https://github.com/resources/whitepapers)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n  * Open Source \n    * [ GitHub Sponsors Fund open source developers  ](https://github.com/sponsors)\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n  * Enterprise \n    * [ Enterprise platform AI-powered developer platform  ](https://github.com/enterprise)\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ Copilot for business Enterprise-grade AI features  ](https://github.com/features/copilot/copilot-business)\n    * [ Premium Support Enterprise-grade 24/7 support  ](https://github.com/premium-support)\n  * [Pricing](https://github.com/pricing)\n\n\nSearch or jump to...\n# Search code, repositories, users, issues, pull requests...\nSearch \nClear\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n#  Provide feedback \nWe read every piece of feedback, and take your input very seriously.\nInclude my email address so I can be contacted\nCancel  Submit feedback \n#  Saved searches \n## Use saved searches to filter your results more quickly\nName\nQuery\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \nCancel  Create saved search \n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Ftriton-lang%2Ftriton%2F)\n[ Sign up ](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=triton-lang%2Ftriton) Reseting focus\nYou signed in with another tab or window. [Reload](https://github.com/triton-lang/triton/) to refresh your session. You signed out in another tab or window. [Reload](https://github.com/triton-lang/triton/) to refresh your session. You switched accounts on another tab or window. [Reload](https://github.com/triton-lang/triton/) to refresh your session. Dismiss alert\n{{ message }}\n[ triton-lang ](https://github.com/triton-lang) / **[triton](https://github.com/triton-lang/triton) ** Public\n  * [ Notifications ](https://github.com/login?return_to=%2Ftriton-lang%2Ftriton) You must be signed in to change notification settings\n  * [ Fork 1.9k ](https://github.com/login?return_to=%2Ftriton-lang%2Ftriton)\n  * [ Star  15k ](https://github.com/login?return_to=%2Ftriton-lang%2Ftriton)\n\n\nDevelopment repository for the Triton language and compiler \n[triton-lang.org/](https://triton-lang.org/ \"https://triton-lang.org/\")\n### License\n[ MIT license ](https://github.com/triton-lang/triton/blob/main/LICENSE)\n[ 15k stars ](https://github.com/triton-lang/triton/stargazers) [ 1.9k forks ](https://github.com/triton-lang/triton/forks) [ Branches ](https://github.com/triton-lang/triton/branches) [ Tags ](https://github.com/triton-lang/triton/tags) [ Activity ](https://github.com/triton-lang/triton/activity)\n[ Star  ](https://github.com/login?return_to=%2Ftriton-lang%2Ftriton)\n[ Notifications ](https://github.com/login?return_to=%2Ftriton-lang%2Ftriton) You must be signed in to change notification settings\n  * [ Code ](https://github.com/triton-lang/triton)\n  * [ Issues 732 ](https://github.com/triton-lang/triton/issues)\n  * [ Pull requests 69 ](https://github.com/triton-lang/triton/pulls)\n  * [ Discussions ](https://github.com/triton-lang/triton/discussions)\n  * [ Actions ](https://github.com/triton-lang/triton/actions)\n  * [ Projects 1 ](https://github.com/triton-lang/triton/projects)\n  * [ Wiki ](https://github.com/triton-lang/triton/wiki)\n  * [ Security ](https://github.com/triton-lang/triton/security)\n  * [ Insights ](https://github.com/triton-lang/triton/pulse)\n\n\nAdditional navigation options\n  * [ Code  ](https://github.com/triton-lang/triton)\n  * [ Issues  ](https://github.com/triton-lang/triton/issues)\n  * [ Pull requests  ](https://github.com/triton-lang/triton/pulls)\n  * [ Discussions  ](https://github.com/triton-lang/triton/discussions)\n  * [ Actions  ](https://github.com/triton-lang/triton/actions)\n  * [ Projects  ](https://github.com/triton-lang/triton/projects)\n  * [ Wiki  ](https://github.com/triton-lang/triton/wiki)\n  * [ Security  ](https://github.com/triton-lang/triton/security)\n  * [ Insights  ](https://github.com/triton-lang/triton/pulse)\n\n\n# triton-lang/triton\nmain\n[Branches](https://github.com/triton-lang/triton/branches)[Tags](https://github.com/triton-lang/triton/tags)\n[](https://github.com/triton-lang/triton/branches)[](https://github.com/triton-lang/triton/tags)\nGo to file\nCode\n## Folders and files\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n## Latest commit\n## History\n[3,666 Commits](https://github.com/triton-lang/triton/commits/main/)[](https://github.com/triton-lang/triton/commits/main/)  \n[.github](https://github.com/triton-lang/triton/tree/main/.github \".github\")| [.github](https://github.com/triton-lang/triton/tree/main/.github \".github\")  \n[bin](https://github.com/triton-lang/triton/tree/main/bin \"bin\")| [bin](https://github.com/triton-lang/triton/tree/main/bin \"bin\")  \n[cmake](https://github.com/triton-lang/triton/tree/main/cmake \"cmake\")| [cmake](https://github.com/triton-lang/triton/tree/main/cmake \"cmake\")  \n[docs](https://github.com/triton-lang/triton/tree/main/docs \"docs\")| [docs](https://github.com/triton-lang/triton/tree/main/docs \"docs\")  \n[include](https://github.com/triton-lang/triton/tree/main/include \"include\")| [include](https://github.com/triton-lang/triton/tree/main/include \"include\")  \n[lib](https://github.com/triton-lang/triton/tree/main/lib \"lib\")| [lib](https://github.com/triton-lang/triton/tree/main/lib \"lib\")  \n[python](https://github.com/triton-lang/triton/tree/main/python \"python\")| [python](https://github.com/triton-lang/triton/tree/main/python \"python\")  \n[test](https://github.com/triton-lang/triton/tree/main/test \"test\")| [test](https://github.com/triton-lang/triton/tree/main/test \"test\")  \n[third_party](https://github.com/triton-lang/triton/tree/main/third_party \"third_party\")| [third_party](https://github.com/triton-lang/triton/tree/main/third_party \"third_party\")  \n[unittest](https://github.com/triton-lang/triton/tree/main/unittest \"unittest\")| [unittest](https://github.com/triton-lang/triton/tree/main/unittest \"unittest\")  \n[utils](https://github.com/triton-lang/triton/tree/main/utils \"utils\")| [utils](https://github.com/triton-lang/triton/tree/main/utils \"utils\")  \n[.clang-format](https://github.com/triton-lang/triton/blob/main/.clang-format \".clang-format\")| [.clang-format](https://github.com/triton-lang/triton/blob/main/.clang-format \".clang-format\")  \n[.editorconfig](https://github.com/triton-lang/triton/blob/main/.editorconfig \".editorconfig\")| [.editorconfig](https://github.com/triton-lang/triton/blob/main/.editorconfig \".editorconfig\")  \n[.git-blame-ignore-revs](https://github.com/triton-lang/triton/blob/main/.git-blame-ignore-revs \".git-blame-ignore-revs\")| [.git-blame-ignore-revs](https://github.com/triton-lang/triton/blob/main/.git-blame-ignore-revs \".git-blame-ignore-revs\")  \n[.gitignore](https://github.com/triton-lang/triton/blob/main/.gitignore \".gitignore\")| [.gitignore](https://github.com/triton-lang/triton/blob/main/.gitignore \".gitignore\")  \n[.pre-commit-config.yaml](https://github.com/triton-lang/triton/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](https://github.com/triton-lang/triton/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")  \n[CMakeLists.txt](https://github.com/triton-lang/triton/blob/main/CMakeLists.txt \"CMakeLists.txt\")| [CMakeLists.txt](https://github.com/triton-lang/triton/blob/main/CMakeLists.txt \"CMakeLists.txt\")  \n[CONTRIBUTING.md](https://github.com/triton-lang/triton/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")| [CONTRIBUTING.md](https://github.com/triton-lang/triton/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")  \n[LICENSE](https://github.com/triton-lang/triton/blob/main/LICENSE \"LICENSE\")| [LICENSE](https://github.com/triton-lang/triton/blob/main/LICENSE \"LICENSE\")  \n[Makefile](https://github.com/triton-lang/triton/blob/main/Makefile \"Makefile\")| [Makefile](https://github.com/triton-lang/triton/blob/main/Makefile \"Makefile\")  \n[README.md](https://github.com/triton-lang/triton/blob/main/README.md \"README.md\")| [README.md](https://github.com/triton-lang/triton/blob/main/README.md \"README.md\")  \n[RELEASE.md](https://github.com/triton-lang/triton/blob/main/RELEASE.md \"RELEASE.md\")| [RELEASE.md](https://github.com/triton-lang/triton/blob/main/RELEASE.md \"RELEASE.md\")  \n[pyproject.toml](https://github.com/triton-lang/triton/blob/main/pyproject.toml \"pyproject.toml\")| [pyproject.toml](https://github.com/triton-lang/triton/blob/main/pyproject.toml \"pyproject.toml\")  \nView all files  \n## Repository files navigation\n  * [README](https://github.com/triton-lang/triton/)\n  * [MIT license](https://github.com/triton-lang/triton/)\n\n\n[![Triton logo](https://camo.githubusercontent.com/94edaa23faf33f9f7e76384487d4480ebd006ce791e63aba1fdbe0cf4adc06df/68747470733a2f2f6c68352e676f6f676c6575736572636f6e74656e742e636f6d2f777a514b457354466b72674e514f394a6a68474835774676736c4a723173614c744c614a5f613646705f674e454e70767433564737426d7a74776e67553968464a615534435077476977316f7051744476546b4c72785752624f5f613132512d70644553574867746d686549486350624f4c355a4d43345453694a566535747931773d7733353137)](https://camo.githubusercontent.com/94edaa23faf33f9f7e76384487d4480ebd006ce791e63aba1fdbe0cf4adc06df/68747470733a2f2f6c68352e676f6f676c6575736572636f6e74656e742e636f6d2f777a514b457354466b72674e514f394a6a68474835774676736c4a723173614c744c614a5f613646705f674e454e70767433564737426d7a74776e67553968464a615534435077476977316f7051744476546b4c72785752624f5f613132512d70644553574867746d686549486350624f4c355a4d43345453694a566535747931773d7733353137)\n**`Documentation`**| **`Nightly Wheels`**  \n---|---  \n[![Documentation](https://github.com/triton-lang/triton/actions/workflows/documentation.yml/badge.svg)](https://triton-lang.org/) | [![Wheels](https://github.com/triton-lang/triton/actions/workflows/wheels.yml/badge.svg)](https://github.com/triton-lang/triton/actions/workflows/wheels.yml)  \n# Triton\n[](https://github.com/triton-lang/triton/#triton)\nThis is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives. The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\nThe foundations of this project are described in the following MAPL2019 publication: [Triton: An Intermediate Language and Compiler for Tiled Neural Network Computations](http://www.eecs.harvard.edu/~htk/publication/2019-mapl-tillet-kung-cox.pdf). Please consider citing this work if you use Triton!\nThe [official documentation](https://triton-lang.org) contains installation instructions and tutorials. See also these third-party [Triton puzzles](https://github.com/srush/Triton-Puzzles), which can all be run using the Triton interpreter -- no GPU required.\n# Quick Installation\n[](https://github.com/triton-lang/triton/#quick-installation)\nYou can install the latest stable release of Triton from pip:\n```\npip install triton\n```\n\nBinary wheels are available for CPython 3.9-3.13.\n# Enabling Blackwell Support\n[](https://github.com/triton-lang/triton/#enabling-blackwell-support)\nThe main branch now features support for NVIDIA Blackwell GPUs using 5th generation tensor cores. To enable this, you will need two additional steps:\n  1. Build a pre-release PyTorch from source with CUDA 12.8\n  2. Build triton from the latest source\n\n\nFirst, to build pytorch you need to have CUDA 12.8 installed locally. If not, follow the [instructions for your platform](https://developer.nvidia.com/cuda-downloads)\n```\n# Clone and checkout pytorch 2.6 release candidate\ngit clone https://github.com/pytorch/pytorch\ncd pytorch\ngit checkout v2.6.0-rc9\ngit submodule sync\ngit submodule update --init --recursive -j 8\n# Install build dependencies (assumes you already have a system compiler)\npip install -r requirements.txt\npip install mkl-static mkl-include wheel\n# Build PyTorch (will take a long time)\nexport CUDA_HOME=/usr/local/cuda-12.8\nexport CUDA_PATH=$CUDA_HOME\nexport TORCH_CUDA_ARCH_LIST=Blackwell\npython setup.py develop\n# Optional, package build into a wheel to install on other machines.\npython setup.py bdist_wheel\nls dist # Wheel should be output in this directory\n```\n\nNote that if you use the domain libraries (`torchvision`, `torchtext`, `torchaudio`, etc.) these will need to be built from source as well, otherwise their custom PyTorch extensions will not work.\nFinally, follow the instructions below to install triton from source.\n# Install from source\n[](https://github.com/triton-lang/triton/#install-from-source)\n```\ngit clone https://github.com/triton-lang/triton.git\ncd triton\npip install -r python/requirements.txt # build-time dependencies\npip install -e python\n```\n\nOr with a virtualenv:\n```\ngit clone https://github.com/triton-lang/triton.git\ncd triton\npython -m venv .venv --prompt triton\nsource .venv/bin/activate\npip install -r python/requirements.txt # build-time dependencies\npip install -e python\n```\n\n# Building with a custom LLVM\n[](https://github.com/triton-lang/triton/#building-with-a-custom-llvm)\nTriton uses LLVM to generate code for GPUs and CPUs. Normally, the Triton build downloads a prebuilt LLVM, but you can also build LLVM from source and use that.\nLLVM does not have a stable API, so the Triton build will not work at an arbitrary LLVM version.\n  1. Find the version of LLVM that Triton builds against. Check `cmake/llvm-hash.txt` to see the current version. For example, if it says: 49af6502c6dcb4a7f7520178bd14df396f78240c\nThis means that the version of Triton you have builds against [LLVM](https://github.com/llvm/llvm-project) 49af6502.\n  2. `git checkout` LLVM at this revision. Optionally, make additional modifications to LLVM.\n  3. [Build LLVM](https://llvm.org/docs/CMake.html). For example, you might run\n```\n$ cd $HOME/llvm-project # your clone of LLVM.\n$ mkdir build\n$ cd build\n$ cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON ../llvm -DLLVM_ENABLE_PROJECTS=\"mlir;llvm;lld\" -DLLVM_TARGETS_TO_BUILD=\"host;NVPTX;AMDGPU\"\n$ ninja\n\n```\n\n  4. Grab a snack, this will take a while.\n  5. Build Triton as above, but set the following environment variables.\n```\n# Modify as appropriate to point to your LLVM build.\n$ export LLVM_BUILD_DIR=$HOME/llvm-project/build\n$ cd <triton install>\n$ LLVM_INCLUDE_DIRS=$LLVM_BUILD_DIR/include \\\n LLVM_LIBRARY_DIR=$LLVM_BUILD_DIR/lib \\\n LLVM_SYSPATH=$LLVM_BUILD_DIR \\\n pip install -e python\n\n```\n\n\n\n# Tips for building\n[](https://github.com/triton-lang/triton/#tips-for-building)\n  * Set `TRITON_BUILD_WITH_CLANG_LLD=true` as an environment variable to use clang and lld. lld in particular results in faster builds.\n  * Set `TRITON_BUILD_WITH_CCACHE=true` to build with ccache.\n  * Set `TRITON_HOME=/some/path` to change the location of the `.triton` directory where Triton's cache is located and downloads are stored during the build. By default, this is the user's home directory. It can be changed anytime.\n  * If you're running out of memory when building Triton, specify the `MAX_JOBS` environment variable (to the `pip install -e python` command) to limit the number of jobs.\n  * Pass `--no-build-isolation` to `pip install` to make nop builds faster. Without this, every invocation of `pip install` uses a different symlink to cmake, and this forces ninja to rebuild most of the `.a` files.\n  * vscode intellisense has some difficulty figuring out how to build Triton's C++ (probably because, in our build, users don't invoke cmake directly, but instead use setup.py). Teach vscode how to compile Triton as follows.\n    * Do a local build. Run command `pip install -e python`\n    * Get the full path to the `compile_commands.json` file produced by the build: `find python/build -name 'compile_commands.json' | xargs readlink -f`. You might get a full path similar to `/Users/{username}/triton/python/build/cmake.macosx-11.1-arm64-cpython-3.12/compile_commands.json`\n    * In vscode, install the [C/C++ extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools), then open the command palette (`Shift + Command + P` on Mac, or `Shift + Ctrl + P` on Windows/Linux) and open `C/C++: Edit Configurations (UI)`.\n    * Open \"Advanced Settings\" and paste the full path to `compile_commands.json` into the \"Compile Commands\" textbox.\n\n\n# Running tests\n[](https://github.com/triton-lang/triton/#running-tests)\nThere currently isn't a turnkey way to run all the Triton tests, but you can follow the following recipe.\n```\n# One-time setup. Note this will reinstall local Triton because torch\n# overwrites it with the public version.\n$ make dev-install\n# To run all tests (requires a GPU)\n$ make test\n# Or, to run tests without a gpu\n$ make test-nogpu\n```\n\n# Tips for hacking\n[](https://github.com/triton-lang/triton/#tips-for-hacking)\nFor detailed instructions on how to debug Triton's frontend, please refer to this [tutorial](https://triton-lang.org/main/programming-guide/chapter-3/debugging.html). The following includes additional tips for hacking on Triton's backend.\n**Helpful environment variables**\n  * `MLIR_ENABLE_DUMP=1` dumps the IR before every MLIR pass Triton runs, for all kernels. Use `MLIR_ENABLE_DUMP=kernelName` to dump for a specific kernel only.\n    * Triton cache can interfere with the dump. In cases where `MLIR_ENABLE_DUMP=1` does not work, try cleaning your triton cache: `rm -r ~/.triton/cache/*`\n  * `MLIR_DUMP_PATH` specifies where `MLIR_ENABLE_DUMP` will dump to. If unset will dump to stderr.\n  * `LLVM_IR_ENABLE_DUMP=1` dumps the IR before every pass run over the LLVM IR.\n  * `TRITON_REPRODUCER_PATH=<reproducer_path>` will generate an MLIR reproducer file at `<reproducer_path>` before each MLIR compiler stage. If any of the stages fail, `<reproducer_path>` will be a local MLIR reproducer captured right before the failing pass.\n  * `TRITON_INTERPRET=1` uses the Triton interpreter instead of running on the GPU. You can insert Python breakpoints in your kernel code!\n  * `TRITON_ENABLE_LLVM_DEBUG=1` passes `-debug` to LLVM, printing a lot of debugging information to stdout. If this is too noisy, run with just `TRITON_LLVM_DEBUG_ONLY` instead to limit the output.\nAn alternative way to reduce output noisiness is running with `LLVM_IR_ENABLE_DUMP=1`, extract the IR before the LLVM pass of interest, and then run LLVM's `opt` standalone, perhaps passing `-debug-only=foo` on the command line.\n  * `TRITON_LLVM_DEBUG_ONLY=<comma-separated>` is the equivalent of LLVM's `-debug-only` command-line option. This limits the LLVM debug output to specific pass or component names (which are specified using `#define DEBUG_TYPE` throughout LLVM and Triton) in order to allow the debug output to be less noisy. `TRITON_LLVM_DEBUG_ONLY` allows for one or more comma separated values to be specified (eg `TRITON_LLVM_DEBUG_ONLY=\"tritongpu-remove-layout-conversions\"` or `TRITON_LLVM_DEBUG_ONLY=\"tritongpu-remove-layout-conversions,regalloc\"`).\n  * `TRITON_ENABLE_ASAN=1` invokes the LLVM address sanitizer for memory leak and out of bounds access detection. Currently only supported on the AMD backend. This must be run using the ASAN libraries documented [here](https://rocm.docs.amd.com/projects/llvm-project/en/latest/conceptual/using-gpu-sanitizer.html).\nWhen enabling the address sanitizer it is recommended to disable various memory caching strategies both within the ROCm stack and PyTorch. This will give the address sanitizer the best chance at finding the memory fault where it originates. See this [test](https://github.com/triton-lang/triton/blob/main/third_party/amd/python/test/test_address_sanitizer.py) for more details.\n  * `USE_IR_LOC={ttir,ttgir}` reparses the IR such that the location information will be the line number of the IR file with that particular extension, instead of line number of the python file. This can provide a direct mapping from the IR to llir/ptx. When used with performance tools, it can provide a breakdown on IR instructions.\n  * `TRITON_PRINT_AUTOTUNING=1` prints out the best autotuning config and total time spent for each kernel after autotuning is complete.\n  * `DISABLE_LLVM_OPT` will disable llvm optimizations for make_llir and make_ptx if its value is true when parsing as Bool. Otherwise, it will be parsed as a list of flags to disable llvm optimizations. One usage case is `DISABLE_LLVM_OPT=\"disable-lsr\"` Loop strength reduction is known to cause up to 10% performance changes for certain kernels with register pressure.\n  * `TRITON_ALWAYS_COMPILE=1` forces to compile kernels regardless of cache hit.\n  * `MLIR_ENABLE_TIMING` dumps the timing information for each MLIR pass.\n  * `LLVM_ENABLE_TIMING` dumps the timing information for each LLVM pass.\n  * `TRITON_DEFAULT_FP_FUSION` overrides the default behavior of allowing fp fusion (mul+add->fma).\n  * `MLIR_ENABLE_DIAGNOSTICS=<comma-separated>` controls diagnostic emission in MLIR. Options are: `warnings`, `remarks`, `stacktraces`, `operations`. Use comma-separated values to customize output. For example, `MLIR_ENABLE_DIAGNOSTICS=remarks,operations` enables remarks and IR operations, while `MLIR_ENABLE_DIAGNOSTICS=warnings,stacktraces` enables warnings with stacktraces. By default, only errors are shown. Setting `warnings` includes errors and warnings; `remarks` includes errors, warnings, and remarks.\n  * `MLIR_ENABLE_REMARK` is deprecated. Please use `MLIR_ENABLE_DIAGNOSTICS=remarks`.\n  * `TRITON_KERNEL_DUMP` enables the dumping of the IR from each compilation stage and the final ptx/amdgcn.\n  * `TRITON_DUMP_DIR` specifies the directory to save the dumped IR and ptx/amdgcn when `TRITON_KERNEL_DUMP` is set to 1.\n  * `TRITON_KERNEL_OVERRIDE` enables the override of the compiled kernel with a user-specified IR/ptx/amdgcn at the beginning of each compilation stage.\n  * `TRITON_OVERRIDE_DIR` specifies the directory from which to load the IR/ptx/amdgcn files when `TRITON_KERNEL_OVERRIDE` is set to 1.\n  * `TRITON_F32_DEFAULT` sets the default input precision of `tl.dot` when using 32-bit floats, which can be either `ieee`, `tf32`, or `tf32x3`.\n  * `TRITON_FRONT_END_DEBUGGING=1` disables exception wrapping when an error occurs in the compiler frontend, allowing the full stack trace to be seen.\n\n\n**Kernel Override Steps**\n```\nexport TRITON_ALWAYS_COMPILE=1\nexport TRITON_KERNEL_DUMP=1\nexport TRITON_DUMP_DIR=<dump_dir>\nexport TRITON_KERNEL_OVERRIDE=1\nexport TRITON_OVERRIDE_DIR=<override_dir>\n# Step 1: Run the kernel once to dump kernel's IRs and ptx/amdgcn in $TRITON_DUMP_DIR\n# Step 2: Copy $TRITON_DUMP_DIR/<kernel_hash> to $TRITON_OVERRIDE_DIR\n# Step 3: Delete the stages that you do not want to override and modify the stage you do want to override\n# Step 4: Run the kernel again to see the overridden result\n```\n\n# Changelog\n[](https://github.com/triton-lang/triton/#changelog)\nVersion 2.0 is out! New features include:\n  * Many, many bug fixes\n  * Performance improvements\n  * Backend rewritten to use MLIR\n  * Support for kernels that contain back-to-back matmuls (e.g., flash attention)\n\n\n# Contributing\n[](https://github.com/triton-lang/triton/#contributing)\nCommunity contributions are more than welcome, whether it be to fix bugs or to add new features at [github](https://github.com/triton-lang/triton/). For more detailed instructions, please visit our [contributor's guide](https://github.com/triton-lang/triton/blob/main/CONTRIBUTING.md).\n# Compatibility\n[](https://github.com/triton-lang/triton/#compatibility)\nSupported Platforms:\n  * Linux\n\n\nSupported Hardware:\n  * NVIDIA GPUs (Compute Capability 8.0+)\n  * AMD GPUs (ROCm 6.2+)\n  * Under development: CPUs\n\n\n# Development Container (Dev Container)\n[](https://github.com/triton-lang/triton/#development-container-dev-container)\n**Dev Containers** for the Triton project are available from the [triton-dev-containers repository](https://github.com/redhat-et/triton-dev-containers)\n### Key Benefits:\n[](https://github.com/triton-lang/triton/#key-benefits)\n  * **Consistency** : All developers can work with the same development environment, ensuring uniform behavior across different systems.\n  * **Isolation** : The container prevents potential conflicts with software installed on your local machine.\n  * **Portability** : Easily share the development environment with team members, minimizing onboarding time and setup issues.\n\n\n### How to Use the Dev Container:\n[](https://github.com/triton-lang/triton/#how-to-use-the-dev-container)\nFor detailed instructions on how to use the dev containers please see the [dev container user guide](https://github.com/redhat-et/triton-dev-containers/blob/main/.devcontainer/devcontainer.md)\n## About\nDevelopment repository for the Triton language and compiler \n[triton-lang.org/](https://triton-lang.org/ \"https://triton-lang.org/\")\n### Resources\n[ Readme ](https://github.com/triton-lang/triton/#readme-ov-file)\n### License\n[ MIT license ](https://github.com/triton-lang/triton/#MIT-1-ov-file)\n[ Activity](https://github.com/triton-lang/triton/activity)\n[ Custom properties](https://github.com/triton-lang/triton/custom-properties)\n### Stars\n[ **15k** stars](https://github.com/triton-lang/triton/stargazers)\n### Watchers\n[ **196** watching](https://github.com/triton-lang/triton/watchers)\n### Forks\n[ **1.9k** forks](https://github.com/triton-lang/triton/forks)\n[ Report repository ](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Ftriton-lang%2Ftriton&report=triton-lang+%28user%29)\n##  [Releases](https://github.com/triton-lang/triton/releases)\n[ 11 tags ](https://github.com/triton-lang/triton/tags)\n##  [Packages 0](https://github.com/orgs/triton-lang/packages?repo_name=triton)\nNo packages published \n##  [Used by 58.8k](https://github.com/triton-lang/triton/network/dependents)\n[\n  * ![@mshmygel](https://avatars.githubusercontent.com/u/177831504?s=64&v=4)\n  * ![@PrithvirajG](https://avatars.githubusercontent.com/u/67669857?s=64&v=4)\n  * ![@FhG-IISB-MKI](https://avatars.githubusercontent.com/u/205148278?s=64&v=4)\n  * ![@mlvc-lab](https://avatars.githubusercontent.com/u/51532443?s=64&v=4)\n  * ![@Bigkatoan](https://avatars.githubusercontent.com/u/63138206?s=64&v=4)\n  * ![@3078139041](https://avatars.githubusercontent.com/u/103644827?s=64&v=4)\n  * ![@Varshaa-08](https://avatars.githubusercontent.com/u/202936892?s=64&v=4)\n  * ![@OpenRobotLab](https://avatars.githubusercontent.com/u/127282590?s=64&v=4)\n\n+ 58,787  ](https://github.com/triton-lang/triton/network/dependents)\n##  [Contributors 397](https://github.com/triton-lang/triton/graphs/contributors)\n  * [ ![@ptillet](https://avatars.githubusercontent.com/u/614788?s=64&v=4) ](https://github.com/ptillet)\n  * [ ![@Jokeren](https://avatars.githubusercontent.com/u/2306281?s=64&v=4) ](https://github.com/Jokeren)\n  * [ ![@ThomasRaoux](https://avatars.githubusercontent.com/u/24322263?s=64&v=4) ](https://github.com/ThomasRaoux)\n  * [ ![@antiagainst](https://avatars.githubusercontent.com/u/487928?s=64&v=4) ](https://github.com/antiagainst)\n  * [ ![@jlebar](https://avatars.githubusercontent.com/u/150663?s=64&v=4) ](https://github.com/jlebar)\n  * [ ![@peterbell10](https://avatars.githubusercontent.com/u/13238737?s=64&v=4) ](https://github.com/peterbell10)\n  * [ ![@zahimoud](https://avatars.githubusercontent.com/u/128723247?s=64&v=4) ](https://github.com/zahimoud)\n  * [ ![@pawelszczerbuk](https://avatars.githubusercontent.com/u/153013546?s=64&v=4) ](https://github.com/pawelszczerbuk)\n  * [ ![@lezcano](https://avatars.githubusercontent.com/u/3291265?s=64&v=4) ](https://github.com/lezcano)\n  * [ ![@Mogball](https://avatars.githubusercontent.com/u/15016832?s=64&v=4) ](https://github.com/Mogball)\n  * [ ![@anmyachev](https://avatars.githubusercontent.com/u/45976948?s=64&v=4) ](https://github.com/anmyachev)\n  * [ ![@zhanglx13](https://avatars.githubusercontent.com/u/3949632?s=64&v=4) ](https://github.com/zhanglx13)\n  * [ ![@daadaada](https://avatars.githubusercontent.com/u/29946339?s=64&v=4) ](https://github.com/daadaada)\n  * [ ![@binarman](https://avatars.githubusercontent.com/u/3631351?s=64&v=4) ](https://github.com/binarman)\n\n\n[+ 383 contributors](https://github.com/triton-lang/triton/graphs/contributors)\n## Languages\n  * [ MLIR 41.9% ](https://github.com/triton-lang/triton/search?l=mlir)\n  * [ C++ 34.5% ](https://github.com/triton-lang/triton/search?l=c%2B%2B)\n  * [ Python 22.8% ](https://github.com/triton-lang/triton/search?l=python)\n  * [ CMake 0.6% ](https://github.com/triton-lang/triton/search?l=cmake)\n  * [ C 0.1% ](https://github.com/triton-lang/triton/search?l=c)\n  * [ Makefile 0.1% ](https://github.com/triton-lang/triton/search?l=makefile)\n\n\n## Footer\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n### Footer navigation\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": 0.7,
    "summary": null,
    "child_urls": [
        "https://github.com/triton-lang/triton/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Ftriton-lang%2Ftriton%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/resources/whitepapers",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot/copilot-business",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=triton-lang%2Ftriton",
        "https://github.com/triton-lang",
        "https://github.com/triton-lang/triton",
        "https://github.com/login?return_to=%2Ftriton-lang%2Ftriton",
        "https://github.com/triton-lang/triton/blob/main/LICENSE",
        "https://github.com/triton-lang/triton/stargazers",
        "https://github.com/triton-lang/triton/forks",
        "https://github.com/triton-lang/triton/branches",
        "https://github.com/triton-lang/triton/tags",
        "https://github.com/triton-lang/triton/activity",
        "https://github.com/triton-lang/triton/issues",
        "https://github.com/triton-lang/triton/pulls",
        "https://github.com/triton-lang/triton/discussions",
        "https://github.com/triton-lang/triton/actions",
        "https://github.com/triton-lang/triton/projects",
        "https://github.com/triton-lang/triton/wiki",
        "https://github.com/triton-lang/triton/security",
        "https://github.com/triton-lang/triton/pulse",
        "https://github.com/triton-lang/triton/commits/main/",
        "https://github.com/triton-lang/triton/tree/main/.github",
        "https://github.com/triton-lang/triton/tree/main/bin",
        "https://github.com/triton-lang/triton/tree/main/cmake",
        "https://github.com/triton-lang/triton/tree/main/docs",
        "https://github.com/triton-lang/triton/tree/main/include",
        "https://github.com/triton-lang/triton/tree/main/lib",
        "https://github.com/triton-lang/triton/tree/main/python",
        "https://github.com/triton-lang/triton/tree/main/test",
        "https://github.com/triton-lang/triton/tree/main/third_party",
        "https://github.com/triton-lang/triton/tree/main/unittest",
        "https://github.com/triton-lang/triton/tree/main/utils",
        "https://github.com/triton-lang/triton/blob/main/.clang-format",
        "https://github.com/triton-lang/triton/blob/main/.editorconfig",
        "https://github.com/triton-lang/triton/blob/main/.git-blame-ignore-revs",
        "https://github.com/triton-lang/triton/blob/main/.gitignore",
        "https://github.com/triton-lang/triton/blob/main/.pre-commit-config.yaml",
        "https://github.com/triton-lang/triton/blob/main/CMakeLists.txt",
        "https://github.com/triton-lang/triton/blob/main/CONTRIBUTING.md",
        "https://github.com/triton-lang/triton/blob/main/Makefile",
        "https://github.com/triton-lang/triton/blob/main/README.md",
        "https://github.com/triton-lang/triton/blob/main/RELEASE.md",
        "https://github.com/triton-lang/triton/blob/main/pyproject.toml",
        "https://github.com/triton-lang/triton/",
        "https://github.com/triton-lang/triton/actions/workflows/wheels.yml",
        "https://github.com/triton-lang/triton/#triton",
        "https://github.com/srush/Triton-Puzzles",
        "https://github.com/triton-lang/triton/#quick-installation",
        "https://github.com/triton-lang/triton/#enabling-blackwell-support",
        "https://github.com/triton-lang/triton/#install-from-source",
        "https://github.com/triton-lang/triton/#building-with-a-custom-llvm",
        "https://github.com/llvm/llvm-project",
        "https://github.com/triton-lang/triton/#tips-for-building",
        "https://github.com/triton-lang/triton/#running-tests",
        "https://github.com/triton-lang/triton/#tips-for-hacking",
        "https://github.com/triton-lang/triton/blob/main/third_party/amd/python/test/test_address_sanitizer.py",
        "https://github.com/triton-lang/triton/#changelog",
        "https://github.com/triton-lang/triton/#contributing",
        "https://github.com/triton-lang/triton/#compatibility",
        "https://github.com/triton-lang/triton/#development-container-dev-container",
        "https://github.com/redhat-et/triton-dev-containers",
        "https://github.com/triton-lang/triton/#key-benefits",
        "https://github.com/triton-lang/triton/#how-to-use-the-dev-container",
        "https://github.com/redhat-et/triton-dev-containers/blob/main/.devcontainer/devcontainer.md",
        "https://github.com/triton-lang/triton/#readme-ov-file",
        "https://github.com/triton-lang/triton/#MIT-1-ov-file",
        "https://github.com/triton-lang/triton/custom-properties",
        "https://github.com/triton-lang/triton/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Ftriton-lang%2Ftriton&report=triton-lang+%28user%29",
        "https://github.com/triton-lang/triton/releases",
        "https://github.com/orgs/triton-lang/packages?repo_name=triton",
        "https://github.com/triton-lang/triton/network/dependents",
        "https://github.com/triton-lang/triton/graphs/contributors",
        "https://github.com/ptillet",
        "https://github.com/Jokeren",
        "https://github.com/ThomasRaoux",
        "https://github.com/antiagainst",
        "https://github.com/jlebar",
        "https://github.com/peterbell10",
        "https://github.com/zahimoud",
        "https://github.com/pawelszczerbuk",
        "https://github.com/lezcano",
        "https://github.com/Mogball",
        "https://github.com/anmyachev",
        "https://github.com/zhanglx13",
        "https://github.com/daadaada",
        "https://github.com/binarman",
        "https://github.com/triton-lang/triton/search?l=mlir",
        "https://github.com/triton-lang/triton/search?l=c%2B%2B",
        "https://github.com/triton-lang/triton/search?l=python",
        "https://github.com/triton-lang/triton/search?l=cmake",
        "https://github.com/triton-lang/triton/search?l=c",
        "https://github.com/triton-lang/triton/search?l=makefile",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://triton-lang.org/",
        "https://camo.githubusercontent.com/94edaa23faf33f9f7e76384487d4480ebd006ce791e63aba1fdbe0cf4adc06df/68747470733a2f2f6c68352e676f6f676c6575736572636f6e74656e742e636f6d2f777a514b457354466b72674e514f394a6a68474835774676736c4a723173614c744c614a5f613646705f674e454e70767433564737426d7a74776e67553968464a615534435077476977316f7051744476546b4c72785752624f5f613132512d70644553574867746d686549486350624f4c355a4d43345453694a566535747931773d7733353137",
        "http://www.eecs.harvard.edu/~htk/publication/2019-mapl-tillet-kung-cox.pdf",
        "https://triton-lang.org",
        "https://developer.nvidia.com/cuda-downloads",
        "https://llvm.org/docs/CMake.html",
        "https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools",
        "https://triton-lang.org/main/programming-guide/chapter-3/debugging.html",
        "https://rocm.docs.amd.com/projects/llvm-project/en/latest/conceptual/using-gpu-sanitizer.html",
        "https://www.githubstatus.com/"
    ]
}