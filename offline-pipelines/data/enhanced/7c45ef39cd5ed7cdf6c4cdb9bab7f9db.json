{
    "id": "7c45ef39cd5ed7cdf6c4cdb9bab7f9db",
    "metadata": {
        "id": "7c45ef39cd5ed7cdf6c4cdb9bab7f9db",
        "url": "https://github.com/pydantic/pydantic-ai/",
        "title": "GitHub - pydantic/pydantic-ai: Agent Framework / shim to use Pydantic with LLMs",
        "properties": {
            "description": "Agent Framework / shim to use Pydantic with LLMs. Contribute to pydantic/pydantic-ai development by creating an account on GitHub.",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/062dafe61e0d54a81d0db8166368fc7f6fe466010531bb679fb6a41beecf29ac/pydantic/pydantic-ai",
            "og:image:alt": "Agent Framework / shim to use Pydantic with LLMs. Contribute to pydantic/pydantic-ai development by creating an account on GitHub.",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - pydantic/pydantic-ai: Agent Framework / shim to use Pydantic with LLMs",
            "og:url": "https://github.com/pydantic/pydantic-ai",
            "og:description": "Agent Framework / shim to use Pydantic with LLMs. Contribute to pydantic/pydantic-ai development by creating an account on GitHub.",
            "twitter:image": "https://opengraph.githubassets.com/062dafe61e0d54a81d0db8166368fc7f6fe466010531bb679fb6a41beecf29ac/pydantic/pydantic-ai",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - pydantic/pydantic-ai: Agent Framework / shim to use Pydantic with LLMs",
            "twitter:description": "Agent Framework / shim to use Pydantic with LLMs. Contribute to pydantic/pydantic-ai development by creating an account on GitHub."
        }
    },
    "parent_metadata": {
        "id": "de72d52ebc7f43a17cdac1d6ddb6b0e5",
        "url": "https://www.notion.so/Agents-de72d52ebc7f43a17cdac1d6ddb6b0e5",
        "title": "Agents",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](https://github.com/pydantic/pydantic-ai/#start-of-content)\n## Navigation Menu\nToggle navigation\n[ ](https://github.com/)\n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fpydantic%2Fpydantic-ai%2F)\n  * Product \n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n  * Solutions \nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](https://github.com/solutions/industry/nonprofits)\nBy use case\n    * [ DevSecOps ](https://github.com/solutions/use-case/devsecops)\n    * [ DevOps ](https://github.com/solutions/use-case/devops)\n    * [ CI/CD ](https://github.com/solutions/use-case/ci-cd)\n    * [ View all use cases ](https://github.com/solutions/use-case)\nBy industry\n    * [ Healthcare ](https://github.com/solutions/industry/healthcare)\n    * [ Financial services ](https://github.com/solutions/industry/financial-services)\n    * [ Manufacturing ](https://github.com/solutions/industry/manufacturing)\n    * [ Government ](https://github.com/solutions/industry/government)\n    * [ View all industries ](https://github.com/solutions/industry)\n[ View all solutions ](https://github.com/solutions)\n  * Resources \nTopics\n    * [ AI ](https://github.com/resources/articles/ai)\n    * [ DevOps ](https://github.com/resources/articles/devops)\n    * [ Security ](https://github.com/resources/articles/security)\n    * [ Software Development ](https://github.com/resources/articles/software-development)\n    * [ View all ](https://github.com/resources/articles)\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ Events & Webinars ](https://resources.github.com)\n    * [ Ebooks & Whitepapers ](https://github.com/resources/whitepapers)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n  * Open Source \n    * [ GitHub Sponsors Fund open source developers  ](https://github.com/sponsors)\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n  * Enterprise \n    * [ Enterprise platform AI-powered developer platform  ](https://github.com/enterprise)\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ Copilot for business Enterprise-grade AI features  ](https://github.com/features/copilot/copilot-business)\n    * [ Premium Support Enterprise-grade 24/7 support  ](https://github.com/premium-support)\n  * [Pricing](https://github.com/pricing)\n\n\nSearch or jump to...\n# Search code, repositories, users, issues, pull requests...\nSearch \nClear\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n#  Provide feedback \nWe read every piece of feedback, and take your input very seriously.\nInclude my email address so I can be contacted\nCancel  Submit feedback \n#  Saved searches \n## Use saved searches to filter your results more quickly\nName\nQuery\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \nCancel  Create saved search \n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fpydantic%2Fpydantic-ai%2F)\n[ Sign up ](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=pydantic%2Fpydantic-ai) Reseting focus\nYou signed in with another tab or window. [Reload](https://github.com/pydantic/pydantic-ai/) to refresh your session. You signed out in another tab or window. [Reload](https://github.com/pydantic/pydantic-ai/) to refresh your session. You switched accounts on another tab or window. [Reload](https://github.com/pydantic/pydantic-ai/) to refresh your session. Dismiss alert\n{{ message }}\n[ pydantic ](https://github.com/pydantic) / **[pydantic-ai](https://github.com/pydantic/pydantic-ai) ** Public\n  * [ Notifications ](https://github.com/login?return_to=%2Fpydantic%2Fpydantic-ai) You must be signed in to change notification settings\n  * [ Fork 674 ](https://github.com/login?return_to=%2Fpydantic%2Fpydantic-ai)\n  * [ Star  7.9k ](https://github.com/login?return_to=%2Fpydantic%2Fpydantic-ai)\n\n\nAgent Framework / shim to use Pydantic with LLMs \n[ai.pydantic.dev](https://ai.pydantic.dev \"https://ai.pydantic.dev\")\n### License\n[ MIT license ](https://github.com/pydantic/pydantic-ai/blob/main/LICENSE)\n[ 7.9k stars ](https://github.com/pydantic/pydantic-ai/stargazers) [ 674 forks ](https://github.com/pydantic/pydantic-ai/forks) [ Branches ](https://github.com/pydantic/pydantic-ai/branches) [ Tags ](https://github.com/pydantic/pydantic-ai/tags) [ Activity ](https://github.com/pydantic/pydantic-ai/activity)\n[ Star  ](https://github.com/login?return_to=%2Fpydantic%2Fpydantic-ai)\n[ Notifications ](https://github.com/login?return_to=%2Fpydantic%2Fpydantic-ai) You must be signed in to change notification settings\n  * [ Code ](https://github.com/pydantic/pydantic-ai)\n  * [ Issues 184 ](https://github.com/pydantic/pydantic-ai/issues)\n  * [ Pull requests 36 ](https://github.com/pydantic/pydantic-ai/pulls)\n  * [ Actions ](https://github.com/pydantic/pydantic-ai/actions)\n  * [ Projects 0 ](https://github.com/pydantic/pydantic-ai/projects)\n  * [ Security ](https://github.com/pydantic/pydantic-ai/security)\n  * [ Insights ](https://github.com/pydantic/pydantic-ai/pulse)\n\n\nAdditional navigation options\n  * [ Code  ](https://github.com/pydantic/pydantic-ai)\n  * [ Issues  ](https://github.com/pydantic/pydantic-ai/issues)\n  * [ Pull requests  ](https://github.com/pydantic/pydantic-ai/pulls)\n  * [ Actions  ](https://github.com/pydantic/pydantic-ai/actions)\n  * [ Projects  ](https://github.com/pydantic/pydantic-ai/projects)\n  * [ Security  ](https://github.com/pydantic/pydantic-ai/security)\n  * [ Insights  ](https://github.com/pydantic/pydantic-ai/pulse)\n\n\n# pydantic/pydantic-ai\nmain\n[**54** Branches](https://github.com/pydantic/pydantic-ai/branches)[**47** Tags](https://github.com/pydantic/pydantic-ai/tags)\n[](https://github.com/pydantic/pydantic-ai/branches)[](https://github.com/pydantic/pydantic-ai/tags)\nGo to file\nCode\n## Folders and files\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n## Latest commit\n## History\n[531 Commits](https://github.com/pydantic/pydantic-ai/commits/main/)[](https://github.com/pydantic/pydantic-ai/commits/main/)  \n[.github](https://github.com/pydantic/pydantic-ai/tree/main/.github \".github\")| [.github](https://github.com/pydantic/pydantic-ai/tree/main/.github \".github\")  \n[docs-site](https://github.com/pydantic/pydantic-ai/tree/main/docs-site \"docs-site\")| [docs-site](https://github.com/pydantic/pydantic-ai/tree/main/docs-site \"docs-site\")  \n[docs](https://github.com/pydantic/pydantic-ai/tree/main/docs \"docs\")| [docs](https://github.com/pydantic/pydantic-ai/tree/main/docs \"docs\")  \n[examples](https://github.com/pydantic/pydantic-ai/tree/main/examples \"examples\")| [examples](https://github.com/pydantic/pydantic-ai/tree/main/examples \"examples\")  \n[mcp-run-python](https://github.com/pydantic/pydantic-ai/tree/main/mcp-run-python \"mcp-run-python\")| [mcp-run-python](https://github.com/pydantic/pydantic-ai/tree/main/mcp-run-python \"mcp-run-python\")  \n[pydantic_ai_slim](https://github.com/pydantic/pydantic-ai/tree/main/pydantic_ai_slim \"pydantic_ai_slim\")| [pydantic_ai_slim](https://github.com/pydantic/pydantic-ai/tree/main/pydantic_ai_slim \"pydantic_ai_slim\")  \n[pydantic_evals](https://github.com/pydantic/pydantic-ai/tree/main/pydantic_evals \"pydantic_evals\")| [pydantic_evals](https://github.com/pydantic/pydantic-ai/tree/main/pydantic_evals \"pydantic_evals\")  \n[pydantic_graph](https://github.com/pydantic/pydantic-ai/tree/main/pydantic_graph \"pydantic_graph\")| [pydantic_graph](https://github.com/pydantic/pydantic-ai/tree/main/pydantic_graph \"pydantic_graph\")  \n[tests](https://github.com/pydantic/pydantic-ai/tree/main/tests \"tests\")| [tests](https://github.com/pydantic/pydantic-ai/tree/main/tests \"tests\")  \n[.gitignore](https://github.com/pydantic/pydantic-ai/blob/main/.gitignore \".gitignore\")| [.gitignore](https://github.com/pydantic/pydantic-ai/blob/main/.gitignore \".gitignore\")  \n[.pre-commit-config.yaml](https://github.com/pydantic/pydantic-ai/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](https://github.com/pydantic/pydantic-ai/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")  \n[.python-version](https://github.com/pydantic/pydantic-ai/blob/main/.python-version \".python-version\")| [.python-version](https://github.com/pydantic/pydantic-ai/blob/main/.python-version \".python-version\")  \n[LICENSE](https://github.com/pydantic/pydantic-ai/blob/main/LICENSE \"LICENSE\")| [LICENSE](https://github.com/pydantic/pydantic-ai/blob/main/LICENSE \"LICENSE\")  \n[Makefile](https://github.com/pydantic/pydantic-ai/blob/main/Makefile \"Makefile\")| [Makefile](https://github.com/pydantic/pydantic-ai/blob/main/Makefile \"Makefile\")  \n[README.md](https://github.com/pydantic/pydantic-ai/blob/main/README.md \"README.md\")| [README.md](https://github.com/pydantic/pydantic-ai/blob/main/README.md \"README.md\")  \n[mkdocs.insiders.yml](https://github.com/pydantic/pydantic-ai/blob/main/mkdocs.insiders.yml \"mkdocs.insiders.yml\")| [mkdocs.insiders.yml](https://github.com/pydantic/pydantic-ai/blob/main/mkdocs.insiders.yml \"mkdocs.insiders.yml\")  \n[mkdocs.yml](https://github.com/pydantic/pydantic-ai/blob/main/mkdocs.yml \"mkdocs.yml\")| [mkdocs.yml](https://github.com/pydantic/pydantic-ai/blob/main/mkdocs.yml \"mkdocs.yml\")  \n[pyproject.toml](https://github.com/pydantic/pydantic-ai/blob/main/pyproject.toml \"pyproject.toml\")| [pyproject.toml](https://github.com/pydantic/pydantic-ai/blob/main/pyproject.toml \"pyproject.toml\")  \n[uprev.py](https://github.com/pydantic/pydantic-ai/blob/main/uprev.py \"uprev.py\")| [uprev.py](https://github.com/pydantic/pydantic-ai/blob/main/uprev.py \"uprev.py\")  \n[uv.lock](https://github.com/pydantic/pydantic-ai/blob/main/uv.lock \"uv.lock\")| [uv.lock](https://github.com/pydantic/pydantic-ai/blob/main/uv.lock \"uv.lock\")  \nView all files  \n## Repository files navigation\n  * [README](https://github.com/pydantic/pydantic-ai/)\n  * [MIT license](https://github.com/pydantic/pydantic-ai/)\n  * [Security](https://github.com/pydantic/pydantic-ai/)\n\n\n[ ![PydanticAI](https://camo.githubusercontent.com/db41603111af0719466351bfdc749898ed80417ed58cc30f82077db1412e53bc/68747470733a2f2f61692e707964616e7469632e6465762f696d672f707964616e7469632d61692d6c696768742e737667) ](https://ai.pydantic.dev/)\n_Agent Framework / shim to use Pydantic with LLMs_\n[![CI](https://github.com/pydantic/pydantic-ai/actions/workflows/ci.yml/badge.svg?event=push)](https://github.com/pydantic/pydantic-ai/actions/workflows/ci.yml?query=branch%3Amain) [![Coverage](https://camo.githubusercontent.com/acc33e54b5246d93839e927d13b30f63ad7864b68cf6fad989a4a2cbc94bd940/68747470733a2f2f636f7665726167652d62616467652e73616d75656c636f6c76696e2e776f726b6572732e6465762f707964616e7469632f707964616e7469632d61692e737667)](https://coverage-badge.samuelcolvin.workers.dev/redirect/pydantic/pydantic-ai) [![PyPI](https://camo.githubusercontent.com/8a8ca88f5ae64dde56c77614f309d4acfd5f639503979f2f2625ce84834c2259/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707964616e7469632d61692e737667)](https://pypi.python.org/pypi/pydantic-ai) [![versions](https://camo.githubusercontent.com/32551c3b884b9022480606ea6081e34b2d603e4736b6f7d23e9368d80d12bd92/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707964616e7469632d61692e737667)](https://github.com/pydantic/pydantic-ai) [![license](https://camo.githubusercontent.com/93bd35d21ab2f1fe7513a278cc03aeb6c3c95fb99c1ce706f79a60ff4f4b0871/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f707964616e7469632f707964616e7469632d61692e7376673f76)](https://github.com/pydantic/pydantic-ai/blob/main/LICENSE)\n**Documentation** : [ai.pydantic.dev](https://ai.pydantic.dev/)\nPydanticAI is a Python agent framework designed to make it less painful to build production grade applications with Generative AI.\nFastAPI revolutionized web development by offering an innovative and ergonomic design, built on the foundation of [Pydantic](https://docs.pydantic.dev).\nSimilarly, virtually every agent framework and LLM library in Python uses Pydantic, yet when we began to use LLMs in [Pydantic Logfire](https://pydantic.dev/logfire), we couldn't find anything that gave us the same feeling.\nWe built PydanticAI with one simple aim: to bring that FastAPI feeling to GenAI app development.\n## Why use PydanticAI\n[](https://github.com/pydantic/pydantic-ai/#why-use-pydanticai)\n  * **Built by the Pydantic Team** Built by the team behind [Pydantic](https://docs.pydantic.dev/latest/) (the validation layer of the OpenAI SDK, the Anthropic SDK, LangChain, LlamaIndex, AutoGPT, Transformers, CrewAI, Instructor and many more).\n  * **Model-agnostic** Supports OpenAI, Anthropic, Gemini, Deepseek, Ollama, Groq, Cohere, and Mistral, and there is a simple interface to implement support for [other models](https://ai.pydantic.dev/models/).\n  * **Pydantic Logfire Integration** Seamlessly [integrates](https://ai.pydantic.dev/logfire/) with [Pydantic Logfire](https://pydantic.dev/logfire) for real-time debugging, performance monitoring, and behavior tracking of your LLM-powered applications.\n  * **Type-safe** Designed to make [type checking](https://ai.pydantic.dev/agents/#static-type-checking) as powerful and informative as possible for you.\n  * **Python-centric Design** Leverages Python's familiar control flow and agent composition to build your AI-driven projects, making it easy to apply standard Python best practices you'd use in any other (non-AI) project.\n  * **Structured Responses** Harnesses the power of [Pydantic](https://docs.pydantic.dev/latest/) to [validate and structure](https://ai.pydantic.dev/results/#structured-result-validation) model outputs, ensuring responses are consistent across runs.\n  * **Dependency Injection System** Offers an optional [dependency injection](https://ai.pydantic.dev/dependencies/) system to provide data and services to your agent's [system prompts](https://ai.pydantic.dev/agents/#system-prompts), [tools](https://ai.pydantic.dev/tools/) and [result validators](https://ai.pydantic.dev/results/#result-validators-functions). This is useful for testing and eval-driven iterative development.\n  * **Streamed Responses** Provides the ability to [stream](https://ai.pydantic.dev/results/#streamed-results) LLM outputs continuously, with immediate validation, ensuring rapid and accurate results.\n  * **Graph Support** [Pydantic Graph](https://ai.pydantic.dev/graph) provides a powerful way to define graphs using typing hints, this is useful in complex applications where standard control flow can degrade to spaghetti code.\n\n\n## Hello World Example\n[](https://github.com/pydantic/pydantic-ai/#hello-world-example)\nHere's a minimal example of PydanticAI:\n```\nfrom pydantic_ai import Agent\n# Define a very simple agent including the model to use, you can also set the model when running the agent.\nagent = Agent(\n  'google-gla:gemini-1.5-flash',\n  # Register a static system prompt using a keyword argument to the agent.\n  # For more complex dynamically-generated system prompts, see the example below.\n  system_prompt='Be concise, reply with one sentence.',\n)\n# Run the agent synchronously, conducting a conversation with the LLM.\n# Here the exchange should be very short: PydanticAI will send the system prompt and the user query to the LLM,\n# the model will return a text response. See below for a more complex run.\nresult = agent.run_sync('Where does \"hello world\" come from?')\nprint(result.data)\n\"\"\"\nThe first known use of \"hello, world\" was in a 1974 textbook about the C programming language.\n\"\"\"\n```\n\n_(This example is complete, it can be run \"as is\")_\nNot very interesting yet, but we can easily add \"tools\", dynamic system prompts, and structured responses to build more powerful agents.\n## Tools & Dependency Injection Example\n[](https://github.com/pydantic/pydantic-ai/#tools--dependency-injection-example)\nHere is a concise example using PydanticAI to build a support agent for a bank:\n**(Better documented example[in the docs](https://ai.pydantic.dev/#tools-dependency-injection-example))**\n```\nfrom dataclasses import dataclass\nfrom pydantic import BaseModel, Field\nfrom pydantic_ai import Agent, RunContext\nfrom bank_database import DatabaseConn\n\n# SupportDependencies is used to pass data, connections, and logic into the model that will be needed when running\n# system prompt and tool functions. Dependency injection provides a type-safe way to customise the behavior of your agents.\n@dataclass\nclass SupportDependencies:\n  customer_id: int\n  db: DatabaseConn\n\n# This pydantic model defines the structure of the result returned by the agent.\nclass SupportResult(BaseModel):\n  support_advice: str = Field(description='Advice returned to the customer')\n  block_card: bool = Field(description=\"Whether to block the customer's card\")\n  risk: int = Field(description='Risk level of query', ge=0, le=10)\n\n# This agent will act as first-tier support in a bank.\n# Agents are generic in the type of dependencies they accept and the type of result they return.\n# In this case, the support agent has type `Agent[SupportDependencies, SupportResult]`.\nsupport_agent = Agent(\n  'openai:gpt-4o',\n  deps_type=SupportDependencies,\n  # The response from the agent will, be guaranteed to be a SupportResult,\n  # if validation fails the agent is prompted to try again.\n  result_type=SupportResult,\n  system_prompt=(\n    'You are a support agent in our bank, give the '\n    'customer support and judge the risk level of their query.'\n  ),\n)\n\n# Dynamic system prompts can make use of dependency injection.\n# Dependencies are carried via the `RunContext` argument, which is parameterized with the `deps_type` from above.\n# If the type annotation here is wrong, static type checkers will catch it.\n@support_agent.system_prompt\nasync def add_customer_name(ctx: RunContext[SupportDependencies]) -> str:\n  customer_name = await ctx.deps.db.customer_name(id=ctx.deps.customer_id)\n  return f\"The customer's name is {customer_name!r}\"\n\n# `tool` let you register functions which the LLM may call while responding to a user.\n# Again, dependencies are carried via `RunContext`, any other arguments become the tool schema passed to the LLM.\n# Pydantic is used to validate these arguments, and errors are passed back to the LLM so it can retry.\n@support_agent.tool\nasync def customer_balance(\n  ctx: RunContext[SupportDependencies], include_pending: bool\n) -> float:\n  \"\"\"Returns the customer's current account balance.\"\"\"\n  # The docstring of a tool is also passed to the LLM as the description of the tool.\n  # Parameter descriptions are extracted from the docstring and added to the parameter schema sent to the LLM.\n  balance = await ctx.deps.db.customer_balance(\n    id=ctx.deps.customer_id,\n    include_pending=include_pending,\n  )\n  return balance\n\n... # In a real use case, you'd add more tools and a longer system prompt\n\nasync def main():\n  deps = SupportDependencies(customer_id=123, db=DatabaseConn())\n  # Run the agent asynchronously, conducting a conversation with the LLM until a final response is reached.\n  # Even in this fairly simple case, the agent will exchange multiple messages with the LLM as tools are called to retrieve a result.\n  result = await support_agent.run('What is my balance?', deps=deps)\n  # The result will be validated with Pydantic to guarantee it is a `SupportResult`, since the agent is generic,\n  # it'll also be typed as a `SupportResult` to aid with static type checking.\n  print(result.data)\n  \"\"\"\n  support_advice='Hello John, your current account balance, including pending transactions, is $123.45.' block_card=False risk=1\n  \"\"\"\n  result = await support_agent.run('I just lost my card!', deps=deps)\n  print(result.data)\n  \"\"\"\n  support_advice=\"I'm sorry to hear that, John. We are temporarily blocking your card to prevent unauthorized transactions.\" block_card=True risk=8\n  \"\"\"\n```\n\n## Next Steps\n[](https://github.com/pydantic/pydantic-ai/#next-steps)\nTo try PydanticAI yourself, follow the instructions [in the examples](https://ai.pydantic.dev/examples/).\nRead the [docs](https://ai.pydantic.dev/agents/) to learn more about building applications with PydanticAI.\nRead the [API Reference](https://ai.pydantic.dev/api/agent/) to understand PydanticAI's interface.\n## About\nAgent Framework / shim to use Pydantic with LLMs \n[ai.pydantic.dev](https://ai.pydantic.dev \"https://ai.pydantic.dev\")\n### Topics\n[ python ](https://github.com/topics/python \"Topic: python\") [ pydantic ](https://github.com/topics/pydantic \"Topic: pydantic\") [ agent-framework ](https://github.com/topics/agent-framework \"Topic: agent-framework\") [ llms ](https://github.com/topics/llms \"Topic: llms\")\n### Resources\n[ Readme ](https://github.com/pydantic/pydantic-ai/#readme-ov-file)\n### License\n[ MIT license ](https://github.com/pydantic/pydantic-ai/#MIT-1-ov-file)\n### Security policy\n[ Security policy ](https://github.com/pydantic/pydantic-ai/#security-ov-file)\n[ Activity](https://github.com/pydantic/pydantic-ai/activity)\n[ Custom properties](https://github.com/pydantic/pydantic-ai/custom-properties)\n### Stars\n[ **7.9k** stars](https://github.com/pydantic/pydantic-ai/stargazers)\n### Watchers\n[ **66** watching](https://github.com/pydantic/pydantic-ai/watchers)\n### Forks\n[ **674** forks](https://github.com/pydantic/pydantic-ai/forks)\n[ Report repository ](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fpydantic%2Fpydantic-ai&report=pydantic+%28user%29)\n##  [Releases 47](https://github.com/pydantic/pydantic-ai/releases)\n[ v0.0.46 Latest  Mar 26, 2025 ](https://github.com/pydantic/pydantic-ai/releases/tag/v0.0.46)\n[+ 46 releases](https://github.com/pydantic/pydantic-ai/releases)\n##  [Used by 1.3k](https://github.com/pydantic/pydantic-ai/network/dependents)\n[\n  * ![@Desarso](https://avatars.githubusercontent.com/u/10700498?s=64&v=4)\n  * ![@sbowser53](https://avatars.githubusercontent.com/u/138767917?s=64&v=4)\n  * ![@azure-architect](https://avatars.githubusercontent.com/u/95673671?s=64&v=4)\n  * ![@vishcodex](https://avatars.githubusercontent.com/u/108595774?s=64&v=4)\n  * ![@vetlefo](https://avatars.githubusercontent.com/u/40894183?s=64&v=4)\n  * ![@vetlefo](https://avatars.githubusercontent.com/u/40894183?s=64&v=4)\n  * ![@vetlefo](https://avatars.githubusercontent.com/u/40894183?s=64&v=4)\n  * ![@vetlefo](https://avatars.githubusercontent.com/u/40894183?s=64&v=4)\n\n+ 1,311  ](https://github.com/pydantic/pydantic-ai/network/dependents)\n##  [Contributors 85](https://github.com/pydantic/pydantic-ai/graphs/contributors)\n  * [ ![@samuelcolvin](https://avatars.githubusercontent.com/u/4039449?s=64&v=4) ](https://github.com/samuelcolvin)\n  * [ ![@Kludex](https://avatars.githubusercontent.com/u/7353520?s=64&v=4) ](https://github.com/Kludex)\n  * [ ![@dmontagu](https://avatars.githubusercontent.com/u/35119617?s=64&v=4) ](https://github.com/dmontagu)\n  * [ ![@sydney-runkle](https://avatars.githubusercontent.com/u/54324534?s=64&v=4) ](https://github.com/sydney-runkle)\n  * [ ![@alexmojaki](https://avatars.githubusercontent.com/u/3627481?s=64&v=4) ](https://github.com/alexmojaki)\n  * [ ![@Viicos](https://avatars.githubusercontent.com/u/65306057?s=64&v=4) ](https://github.com/Viicos)\n  * [ ![@hrahmadi71](https://avatars.githubusercontent.com/u/22768979?s=64&v=4) ](https://github.com/hrahmadi71)\n  * [ ![@kauabh](https://avatars.githubusercontent.com/u/56749351?s=64&v=4) ](https://github.com/kauabh)\n  * [ ![@petyosi](https://avatars.githubusercontent.com/u/13347?s=64&v=4) ](https://github.com/petyosi)\n  * [ ![@jlowin](https://avatars.githubusercontent.com/u/153965?s=64&v=4) ](https://github.com/jlowin)\n  * [ ![@YanSte](https://avatars.githubusercontent.com/u/6950194?s=64&v=4) ](https://github.com/YanSte)\n  * [ ![@izzyacademy](https://avatars.githubusercontent.com/u/44282278?s=64&v=4) ](https://github.com/izzyacademy)\n  * [ ![@lealre](https://avatars.githubusercontent.com/u/123672970?s=64&v=4) ](https://github.com/lealre)\n  * [ ![@DurandA](https://avatars.githubusercontent.com/u/3709037?s=64&v=4) ](https://github.com/DurandA)\n\n\n[+ 71 contributors](https://github.com/pydantic/pydantic-ai/graphs/contributors)\n## Languages\n  * [ Python 98.8% ](https://github.com/pydantic/pydantic-ai/search?l=python)\n  * Other 1.2%\n\n\n## Footer\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n### Footer navigation\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": 0.3,
    "summary": null,
    "child_urls": [
        "https://github.com/pydantic/pydantic-ai/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fpydantic%2Fpydantic-ai%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/resources/whitepapers",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot/copilot-business",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=pydantic%2Fpydantic-ai",
        "https://github.com/pydantic",
        "https://github.com/pydantic/pydantic-ai",
        "https://github.com/login?return_to=%2Fpydantic%2Fpydantic-ai",
        "https://github.com/pydantic/pydantic-ai/blob/main/LICENSE",
        "https://github.com/pydantic/pydantic-ai/stargazers",
        "https://github.com/pydantic/pydantic-ai/forks",
        "https://github.com/pydantic/pydantic-ai/branches",
        "https://github.com/pydantic/pydantic-ai/tags",
        "https://github.com/pydantic/pydantic-ai/activity",
        "https://github.com/pydantic/pydantic-ai/issues",
        "https://github.com/pydantic/pydantic-ai/pulls",
        "https://github.com/pydantic/pydantic-ai/actions",
        "https://github.com/pydantic/pydantic-ai/projects",
        "https://github.com/pydantic/pydantic-ai/security",
        "https://github.com/pydantic/pydantic-ai/pulse",
        "https://github.com/pydantic/pydantic-ai/commits/main/",
        "https://github.com/pydantic/pydantic-ai/tree/main/.github",
        "https://github.com/pydantic/pydantic-ai/tree/main/docs-site",
        "https://github.com/pydantic/pydantic-ai/tree/main/docs",
        "https://github.com/pydantic/pydantic-ai/tree/main/examples",
        "https://github.com/pydantic/pydantic-ai/tree/main/mcp-run-python",
        "https://github.com/pydantic/pydantic-ai/tree/main/pydantic_ai_slim",
        "https://github.com/pydantic/pydantic-ai/tree/main/pydantic_evals",
        "https://github.com/pydantic/pydantic-ai/tree/main/pydantic_graph",
        "https://github.com/pydantic/pydantic-ai/tree/main/tests",
        "https://github.com/pydantic/pydantic-ai/blob/main/.gitignore",
        "https://github.com/pydantic/pydantic-ai/blob/main/.pre-commit-config.yaml",
        "https://github.com/pydantic/pydantic-ai/blob/main/.python-version",
        "https://github.com/pydantic/pydantic-ai/blob/main/Makefile",
        "https://github.com/pydantic/pydantic-ai/blob/main/README.md",
        "https://github.com/pydantic/pydantic-ai/blob/main/mkdocs.insiders.yml",
        "https://github.com/pydantic/pydantic-ai/blob/main/mkdocs.yml",
        "https://github.com/pydantic/pydantic-ai/blob/main/pyproject.toml",
        "https://github.com/pydantic/pydantic-ai/blob/main/uprev.py",
        "https://github.com/pydantic/pydantic-ai/blob/main/uv.lock",
        "https://github.com/pydantic/pydantic-ai/",
        "https://github.com/pydantic/pydantic-ai/actions/workflows/ci.yml?query=branch%3Amain",
        "https://github.com/pydantic/pydantic-ai/#why-use-pydanticai",
        "https://github.com/pydantic/pydantic-ai/#hello-world-example",
        "https://github.com/pydantic/pydantic-ai/#tools--dependency-injection-example",
        "https://github.com/pydantic/pydantic-ai/#next-steps",
        "https://github.com/topics/python",
        "https://github.com/topics/pydantic",
        "https://github.com/topics/agent-framework",
        "https://github.com/topics/llms",
        "https://github.com/pydantic/pydantic-ai/#readme-ov-file",
        "https://github.com/pydantic/pydantic-ai/#MIT-1-ov-file",
        "https://github.com/pydantic/pydantic-ai/#security-ov-file",
        "https://github.com/pydantic/pydantic-ai/custom-properties",
        "https://github.com/pydantic/pydantic-ai/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fpydantic%2Fpydantic-ai&report=pydantic+%28user%29",
        "https://github.com/pydantic/pydantic-ai/releases",
        "https://github.com/pydantic/pydantic-ai/releases/tag/v0.0.46",
        "https://github.com/pydantic/pydantic-ai/network/dependents",
        "https://github.com/pydantic/pydantic-ai/graphs/contributors",
        "https://github.com/samuelcolvin",
        "https://github.com/Kludex",
        "https://github.com/dmontagu",
        "https://github.com/sydney-runkle",
        "https://github.com/alexmojaki",
        "https://github.com/Viicos",
        "https://github.com/hrahmadi71",
        "https://github.com/kauabh",
        "https://github.com/petyosi",
        "https://github.com/jlowin",
        "https://github.com/YanSte",
        "https://github.com/izzyacademy",
        "https://github.com/lealre",
        "https://github.com/DurandA",
        "https://github.com/pydantic/pydantic-ai/search?l=python",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://ai.pydantic.dev",
        "https://ai.pydantic.dev/",
        "https://coverage-badge.samuelcolvin.workers.dev/redirect/pydantic/pydantic-ai",
        "https://pypi.python.org/pypi/pydantic-ai",
        "https://docs.pydantic.dev",
        "https://pydantic.dev/logfire",
        "https://docs.pydantic.dev/latest/",
        "https://ai.pydantic.dev/models/",
        "https://ai.pydantic.dev/logfire/",
        "https://ai.pydantic.dev/agents/#static-type-checking",
        "https://ai.pydantic.dev/results/#structured-result-validation",
        "https://ai.pydantic.dev/dependencies/",
        "https://ai.pydantic.dev/agents/#system-prompts",
        "https://ai.pydantic.dev/tools/",
        "https://ai.pydantic.dev/results/#result-validators-functions",
        "https://ai.pydantic.dev/results/#streamed-results",
        "https://ai.pydantic.dev/graph",
        "https://ai.pydantic.dev/#tools-dependency-injection-example",
        "https://ai.pydantic.dev/examples/",
        "https://ai.pydantic.dev/agents/",
        "https://ai.pydantic.dev/api/agent/",
        "https://www.githubstatus.com/"
    ]
}