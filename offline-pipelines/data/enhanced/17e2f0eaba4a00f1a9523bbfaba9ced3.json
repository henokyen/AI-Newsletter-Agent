{
    "id": "17e2f0eaba4a00f1a9523bbfaba9ced3",
    "metadata": {
        "id": "17e2f0eaba4a00f1a9523bbfaba9ced3",
        "url": "https://github.com/VikParuchuri/marker/",
        "title": "GitHub - VikParuchuri/marker: Convert PDF to markdown + JSON quickly with high accuracy",
        "properties": {
            "description": "Convert PDF to markdown + JSON quickly with high accuracy - VikParuchuri/marker",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/494b17a5a98b3a2727974a5174d14d8c498a7549542223c88df8d2e8a5412aba/VikParuchuri/marker",
            "og:image:alt": "Convert PDF to markdown + JSON quickly with high accuracy - VikParuchuri/marker",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - VikParuchuri/marker: Convert PDF to markdown + JSON quickly with high accuracy",
            "og:url": "https://github.com/VikParuchuri/marker",
            "og:description": "Convert PDF to markdown + JSON quickly with high accuracy - VikParuchuri/marker",
            "twitter:image": "https://opengraph.githubassets.com/494b17a5a98b3a2727974a5174d14d8c498a7549542223c88df8d2e8a5412aba/VikParuchuri/marker",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - VikParuchuri/marker: Convert PDF to markdown + JSON quickly with high accuracy",
            "twitter:description": "Convert PDF to markdown + JSON quickly with high accuracy - VikParuchuri/marker"
        }
    },
    "parent_metadata": {
        "id": "13c2eb80fb8df4b4cd8ee2c0fda7a65c",
        "url": "https://www.notion.so/Document-preprocessing-e-g-HTML-PDF-13c2eb80fb8df4b4cd8ee2c0fda7a65c",
        "title": "Document preprocessing (e.g., HTML, PDF)",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](https://github.com/VikParuchuri/marker/#start-of-content)\n## Navigation Menu\nToggle navigation\n[ ](https://github.com/)\n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2FVikParuchuri%2Fmarker%2F)\n  * Product \n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n  * Solutions \nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](https://github.com/solutions/industry/nonprofits)\nBy use case\n    * [ DevSecOps ](https://github.com/solutions/use-case/devsecops)\n    * [ DevOps ](https://github.com/solutions/use-case/devops)\n    * [ CI/CD ](https://github.com/solutions/use-case/ci-cd)\n    * [ View all use cases ](https://github.com/solutions/use-case)\nBy industry\n    * [ Healthcare ](https://github.com/solutions/industry/healthcare)\n    * [ Financial services ](https://github.com/solutions/industry/financial-services)\n    * [ Manufacturing ](https://github.com/solutions/industry/manufacturing)\n    * [ Government ](https://github.com/solutions/industry/government)\n    * [ View all industries ](https://github.com/solutions/industry)\n[ View all solutions ](https://github.com/solutions)\n  * Resources \nTopics\n    * [ AI ](https://github.com/resources/articles/ai)\n    * [ DevOps ](https://github.com/resources/articles/devops)\n    * [ Security ](https://github.com/resources/articles/security)\n    * [ Software Development ](https://github.com/resources/articles/software-development)\n    * [ View all ](https://github.com/resources/articles)\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ Events & Webinars ](https://resources.github.com)\n    * [ Ebooks & Whitepapers ](https://github.com/resources/whitepapers)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n  * Open Source \n    * [ GitHub Sponsors Fund open source developers  ](https://github.com/sponsors)\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n  * Enterprise \n    * [ Enterprise platform AI-powered developer platform  ](https://github.com/enterprise)\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ Copilot for business Enterprise-grade AI features  ](https://github.com/features/copilot/copilot-business)\n    * [ Premium Support Enterprise-grade 24/7 support  ](https://github.com/premium-support)\n  * [Pricing](https://github.com/pricing)\n\n\nSearch or jump to...\n# Search code, repositories, users, issues, pull requests...\nSearch \nClear\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n#  Provide feedback \nWe read every piece of feedback, and take your input very seriously.\nInclude my email address so I can be contacted\nCancel  Submit feedback \n#  Saved searches \n## Use saved searches to filter your results more quickly\nName\nQuery\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \nCancel  Create saved search \n[ Sign in ](https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2FVikParuchuri%2Fmarker%2F)\n[ Sign up ](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=VikParuchuri%2Fmarker) Reseting focus\nYou signed in with another tab or window. [Reload](https://github.com/VikParuchuri/marker/) to refresh your session. You signed out in another tab or window. [Reload](https://github.com/VikParuchuri/marker/) to refresh your session. You switched accounts on another tab or window. [Reload](https://github.com/VikParuchuri/marker/) to refresh your session. Dismiss alert\n{{ message }}\n[ VikParuchuri ](https://github.com/VikParuchuri) / **[marker](https://github.com/VikParuchuri/marker) ** Public\n  * [ Notifications ](https://github.com/login?return_to=%2FVikParuchuri%2Fmarker) You must be signed in to change notification settings\n  * [ Fork 1.5k ](https://github.com/login?return_to=%2FVikParuchuri%2Fmarker)\n  * [ Star  23.5k ](https://github.com/login?return_to=%2FVikParuchuri%2Fmarker)\n\n\nConvert PDF to markdown + JSON quickly with high accuracy \n[www.datalab.to](https://www.datalab.to \"https://www.datalab.to\")\n### License\n[ GPL-3.0 license ](https://github.com/VikParuchuri/marker/blob/master/LICENSE)\n[ 23.5k stars ](https://github.com/VikParuchuri/marker/stargazers) [ 1.5k forks ](https://github.com/VikParuchuri/marker/forks) [ Branches ](https://github.com/VikParuchuri/marker/branches) [ Tags ](https://github.com/VikParuchuri/marker/tags) [ Activity ](https://github.com/VikParuchuri/marker/activity)\n[ Star  ](https://github.com/login?return_to=%2FVikParuchuri%2Fmarker)\n[ Notifications ](https://github.com/login?return_to=%2FVikParuchuri%2Fmarker) You must be signed in to change notification settings\n  * [ Code ](https://github.com/VikParuchuri/marker)\n  * [ Issues 206 ](https://github.com/VikParuchuri/marker/issues)\n  * [ Pull requests 23 ](https://github.com/VikParuchuri/marker/pulls)\n  * [ Actions ](https://github.com/VikParuchuri/marker/actions)\n  * [ Projects 0 ](https://github.com/VikParuchuri/marker/projects)\n  * [ Security ](https://github.com/VikParuchuri/marker/security)\n  * [ Insights ](https://github.com/VikParuchuri/marker/pulse)\n\n\nAdditional navigation options\n  * [ Code  ](https://github.com/VikParuchuri/marker)\n  * [ Issues  ](https://github.com/VikParuchuri/marker/issues)\n  * [ Pull requests  ](https://github.com/VikParuchuri/marker/pulls)\n  * [ Actions  ](https://github.com/VikParuchuri/marker/actions)\n  * [ Projects  ](https://github.com/VikParuchuri/marker/projects)\n  * [ Security  ](https://github.com/VikParuchuri/marker/security)\n  * [ Insights  ](https://github.com/VikParuchuri/marker/pulse)\n\n\n# VikParuchuri/marker\nmaster\n[Branches](https://github.com/VikParuchuri/marker/branches)[Tags](https://github.com/VikParuchuri/marker/tags)\n[](https://github.com/VikParuchuri/marker/branches)[](https://github.com/VikParuchuri/marker/tags)\nGo to file\nCode\n## Folders and files\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n## Latest commit\n## History\n[951 Commits](https://github.com/VikParuchuri/marker/commits/master/)[](https://github.com/VikParuchuri/marker/commits/master/)  \n[.github/workflows](https://github.com/VikParuchuri/marker/tree/master/.github/workflows \"This path skips through empty directories\")| [.github/workflows](https://github.com/VikParuchuri/marker/tree/master/.github/workflows \"This path skips through empty directories\")  \n[benchmarks](https://github.com/VikParuchuri/marker/tree/master/benchmarks \"benchmarks\")| [benchmarks](https://github.com/VikParuchuri/marker/tree/master/benchmarks \"benchmarks\")  \n[data](https://github.com/VikParuchuri/marker/tree/master/data \"data\")| [data](https://github.com/VikParuchuri/marker/tree/master/data \"data\")  \n[marker](https://github.com/VikParuchuri/marker/tree/master/marker \"marker\")| [marker](https://github.com/VikParuchuri/marker/tree/master/marker \"marker\")  \n[signatures/version1](https://github.com/VikParuchuri/marker/tree/master/signatures/version1 \"This path skips through empty directories\")| [signatures/version1](https://github.com/VikParuchuri/marker/tree/master/signatures/version1 \"This path skips through empty directories\")  \n[static/fonts](https://github.com/VikParuchuri/marker/tree/master/static/fonts \"This path skips through empty directories\")| [static/fonts](https://github.com/VikParuchuri/marker/tree/master/static/fonts \"This path skips through empty directories\")  \n[tests](https://github.com/VikParuchuri/marker/tree/master/tests \"tests\")| [tests](https://github.com/VikParuchuri/marker/tree/master/tests \"tests\")  \n[.gitignore](https://github.com/VikParuchuri/marker/blob/master/.gitignore \".gitignore\")| [.gitignore](https://github.com/VikParuchuri/marker/blob/master/.gitignore \".gitignore\")  \n[.pre-commit-config.yaml](https://github.com/VikParuchuri/marker/blob/master/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](https://github.com/VikParuchuri/marker/blob/master/.pre-commit-config.yaml \".pre-commit-config.yaml\")  \n[CLA.md](https://github.com/VikParuchuri/marker/blob/master/CLA.md \"CLA.md\")| [CLA.md](https://github.com/VikParuchuri/marker/blob/master/CLA.md \"CLA.md\")  \n[LICENSE](https://github.com/VikParuchuri/marker/blob/master/LICENSE \"LICENSE\")| [LICENSE](https://github.com/VikParuchuri/marker/blob/master/LICENSE \"LICENSE\")  \n[README.md](https://github.com/VikParuchuri/marker/blob/master/README.md \"README.md\")| [README.md](https://github.com/VikParuchuri/marker/blob/master/README.md \"README.md\")  \n[chunk_convert.py](https://github.com/VikParuchuri/marker/blob/master/chunk_convert.py \"chunk_convert.py\")| [chunk_convert.py](https://github.com/VikParuchuri/marker/blob/master/chunk_convert.py \"chunk_convert.py\")  \n[convert.py](https://github.com/VikParuchuri/marker/blob/master/convert.py \"convert.py\")| [convert.py](https://github.com/VikParuchuri/marker/blob/master/convert.py \"convert.py\")  \n[convert_single.py](https://github.com/VikParuchuri/marker/blob/master/convert_single.py \"convert_single.py\")| [convert_single.py](https://github.com/VikParuchuri/marker/blob/master/convert_single.py \"convert_single.py\")  \n[marker_app.py](https://github.com/VikParuchuri/marker/blob/master/marker_app.py \"marker_app.py\")| [marker_app.py](https://github.com/VikParuchuri/marker/blob/master/marker_app.py \"marker_app.py\")  \n[marker_server.py](https://github.com/VikParuchuri/marker/blob/master/marker_server.py \"marker_server.py\")| [marker_server.py](https://github.com/VikParuchuri/marker/blob/master/marker_server.py \"marker_server.py\")  \n[poetry.lock](https://github.com/VikParuchuri/marker/blob/master/poetry.lock \"poetry.lock\")| [poetry.lock](https://github.com/VikParuchuri/marker/blob/master/poetry.lock \"poetry.lock\")  \n[pyproject.toml](https://github.com/VikParuchuri/marker/blob/master/pyproject.toml \"pyproject.toml\")| [pyproject.toml](https://github.com/VikParuchuri/marker/blob/master/pyproject.toml \"pyproject.toml\")  \n[pytest.ini](https://github.com/VikParuchuri/marker/blob/master/pytest.ini \"pytest.ini\")| [pytest.ini](https://github.com/VikParuchuri/marker/blob/master/pytest.ini \"pytest.ini\")  \nView all files  \n## Repository files navigation\n  * [README](https://github.com/VikParuchuri/marker/)\n  * [GPL-3.0 license](https://github.com/VikParuchuri/marker/)\n\n\n# Marker\n[](https://github.com/VikParuchuri/marker/#marker)\nMarker converts documents to markdown, JSON, and HTML quickly and accurately.\n  * Converts PDF, image, PPTX, DOCX, XLSX, HTML, EPUB files in all languages\n  * Formats tables, forms, equations, inline math, links, references, and code blocks\n  * Extracts and saves images\n  * Removes headers/footers/other artifacts\n  * Extensible with your own formatting and logic\n  * Optionally boost accuracy with LLMs\n  * Works on GPU, CPU, or MPS\n\n\n## Performance\n[](https://github.com/VikParuchuri/marker/#performance)\n[![](https://github.com/VikParuchuri/marker/raw/master/data/images/overall.png)](https://github.com/VikParuchuri/marker/blob/master/data/images/overall.png)\nMarker benchmarks favorably compared to cloud services like Llamaparse and Mathpix, as well as other open source tools.\nThe above results are running single PDF pages serially. Marker is significantly faster when running in batch mode, with a projected throughput of 122 pages/second on an H100 (.18 seconds per page across 22 processes).\nSee [below](https://github.com/VikParuchuri/marker/#benchmarks) for detailed speed and accuracy benchmarks, and instructions on how to run your own benchmarks.\n## Hybrid Mode\n[](https://github.com/VikParuchuri/marker/#hybrid-mode)\nFor the highest accuracy, pass the `--use_llm` flag to use an LLM alongside marker. This will do things like merge tables across pages, handle inline math, format tables properly, and extract values from forms. It can use any gemini or ollama model. By default, it uses `gemini-2.0-flash`. See [below](https://github.com/VikParuchuri/marker/#llm-services) for details.\nHere is a table benchmark comparing marker, gemini flash alone, and marker with use_llm:\n[![](https://github.com/VikParuchuri/marker/raw/master/data/images/table.png)](https://github.com/VikParuchuri/marker/blob/master/data/images/table.png)\nAs you can see, the use_llm mode offers higher accuracy than marker or gemini alone.\n## Examples\n[](https://github.com/VikParuchuri/marker/#examples)\nPDF | File type | Markdown | JSON  \n---|---|---|---  \n[Think Python](https://greenteapress.com/thinkpython/thinkpython.pdf) | Textbook | [View](https://github.com/VikParuchuri/marker/blob/master/data/examples/markdown/thinkpython/thinkpython.md) | [View](https://github.com/VikParuchuri/marker/blob/master/data/examples/json/thinkpython.json)  \n[Switch Transformers](https://arxiv.org/pdf/2101.03961.pdf) | arXiv paper | [View](https://github.com/VikParuchuri/marker/blob/master/data/examples/markdown/switch_transformers/switch_trans.md) | [View](https://github.com/VikParuchuri/marker/blob/master/data/examples/json/switch_trans.json)  \n[Multi-column CNN](https://arxiv.org/pdf/1804.07821.pdf) | arXiv paper | [View](https://github.com/VikParuchuri/marker/blob/master/data/examples/markdown/multicolcnn/multicolcnn.md) | [View](https://github.com/VikParuchuri/marker/blob/master/data/examples/json/multicolcnn.json)  \n# Commercial usage\n[](https://github.com/VikParuchuri/marker/#commercial-usage)\nI want marker to be as widely accessible as possible, while still funding my development/training costs. Research and personal usage is always okay, but there are some restrictions on commercial usage.\nThe weights for the models are licensed `cc-by-nc-sa-4.0`, but I will waive that for any organization under $5M USD in gross revenue in the most recent 12-month period AND under $5M in lifetime VC/angel funding raised. You also must not be competitive with the [Datalab API](https://www.datalab.to/). If you want to remove the GPL license requirements (dual-license) and/or use the weights commercially over the revenue limit, check out the options [here](https://www.datalab.to).\n# Hosted API\n[](https://github.com/VikParuchuri/marker/#hosted-api)\nThere's a hosted API for marker available [here](https://www.datalab.to/):\n  * Supports PDFs, word documents, and powerpoints\n  * 1/4th the price of leading cloud-based competitors\n  * High uptime (99.99%), quality, and speed (around 15 seconds to convert a 250 page PDF)\n\n\n# Community\n[](https://github.com/VikParuchuri/marker/#community)\n[Discord](https://discord.gg//KuZwXNGnfH) is where we discuss future development.\n# Installation\n[](https://github.com/VikParuchuri/marker/#installation)\nYou'll need python 3.10+ and PyTorch. You may need to install the CPU version of torch first if you're not using a Mac or a GPU machine. See [here](https://pytorch.org/get-started/locally/) for more details.\nInstall with:\n```\npip install marker-pdf\n```\n\nIf you want to use marker on documents other than PDFs, you will need to install additional dependencies with:\n```\npip install marker-pdf[full]\n```\n\n# Usage\n[](https://github.com/VikParuchuri/marker/#usage)\nFirst, some configuration:\n  * Your torch device will be automatically detected, but you can override this. For example, `TORCH_DEVICE=cuda`.\n  * Some PDFs, even digital ones, have bad text in them. Set the `force_ocr` flag to ensure your PDF runs through OCR, or the `strip_existing_ocr` to keep all digital text, and strip out any existing OCR text.\n\n\n## Interactive App\n[](https://github.com/VikParuchuri/marker/#interactive-app)\nI've included a streamlit app that lets you interactively try marker with some basic options. Run it with:\n```\npip install streamlit\nmarker_gui\n```\n\n## Convert a single file\n[](https://github.com/VikParuchuri/marker/#convert-a-single-file)\n```\nmarker_single /path/to/file.pdf\n```\n\nYou can pass in PDFs or images.\nOptions:\n  * `--output_dir PATH`: Directory where output files will be saved. Defaults to the value specified in settings.OUTPUT_DIR.\n  * `--output_format [markdown|json|html]`: Specify the format for the output results.\n  * `--paginate_output`: Paginates the output, using `\\n\\n{PAGE_NUMBER}` followed by `-` * 48, then `\\n\\n`\n  * `--use_llm`: Uses an LLM to improve accuracy. You must set your Gemini API key using the `GOOGLE_API_KEY` env var.\n  * `--redo_inline_math`: If you want the highest quality inline math conversion, use this along with `--use_llm`.\n  * `--disable_image_extraction`: Don't extract images from the PDF. If you also specify `--use_llm`, then images will be replaced with a description.\n  * `--page_range TEXT`: Specify which pages to process. Accepts comma-separated page numbers and ranges. Example: `--page_range \"0,5-10,20\"` will process pages 0, 5 through 10, and page 20.\n  * `--force_ocr`: Force OCR processing on the entire document, even for pages that might contain extractable text.\n  * `--strip_existing_ocr`: Remove all existing OCR text in the document and re-OCR with surya.\n  * `--debug`: Enable debug mode for additional logging and diagnostic information.\n  * `--processors TEXT`: Override the default processors by providing their full module paths, separated by commas. Example: `--processors \"module1.processor1,module2.processor2\"`\n  * `--config_json PATH`: Path to a JSON configuration file containing additional settings.\n  * `--languages TEXT`: Optionally specify which languages to use for OCR processing. Accepts a comma-separated list. Example: `--languages \"en,fr,de\"` for English, French, and German.\n  * `config --help`: List all available builders, processors, and converters, and their associated configuration. These values can be used to build a JSON configuration file for additional tweaking of marker defaults.\n  * `--converter_cls`: One of `marker.converters.pdf.PdfConverter` (default) or `marker.converters.table.TableConverter`. The `PdfConverter` will convert the whole PDF, the `TableConverter` will only extract and convert tables.\n  * `--llm_service`: Which llm service to use if `--use_llm` is passed. This defaults to `marker.services.gemini.GoogleGeminiService`.\n  * `--help`: see all of the flags that can be passed into marker. (it supports many more options then are listed above)\n\n\nThe list of supported languages for surya OCR is [here](https://github.com/VikParuchuri/surya/blob/master/surya/recognition/languages.py). If you don't need OCR, marker can work with any language.\n## Convert multiple files\n[](https://github.com/VikParuchuri/marker/#convert-multiple-files)\n```\nmarker /path/to/input/folder --workers 4\n```\n\n  * `marker` supports all the same options from `marker_single` above.\n  * `--workers` is the number of conversion workers to run simultaneously. This is set to 5 by default, but you can increase it to increase throughput, at the cost of more CPU/GPU usage. Marker will use 5GB of VRAM per worker at the peak, and 3.5GB average.\n\n\n## Convert multiple files on multiple GPUs\n[](https://github.com/VikParuchuri/marker/#convert-multiple-files-on-multiple-gpus)\n```\nNUM_DEVICES=4 NUM_WORKERS=15 marker_chunk_convert ../pdf_in ../md_out\n```\n\n  * `NUM_DEVICES` is the number of GPUs to use. Should be `2` or greater.\n  * `NUM_WORKERS` is the number of parallel processes to run on each GPU.\n\n\n## Use from python\n[](https://github.com/VikParuchuri/marker/#use-from-python)\nSee the `PdfConverter` class at `marker/converters/pdf.py` function for additional arguments that can be passed.\n```\nfrom marker.converters.pdf import PdfConverter\nfrom marker.models import create_model_dict\nfrom marker.output import text_from_rendered\nconverter = PdfConverter(\n  artifact_dict=create_model_dict(),\n)\nrendered = converter(\"FILEPATH\")\ntext, _, images = text_from_rendered(rendered)\n```\n\n`rendered` will be a pydantic basemodel with different properties depending on the output type requested. With markdown output (default), you'll have the properties `markdown`, `metadata`, and `images`. For json output, you'll have `children`, `block_type`, and `metadata`.\n### Custom configuration\n[](https://github.com/VikParuchuri/marker/#custom-configuration)\nYou can pass configuration using the `ConfigParser`. To see all available options, do `marker_single --help`.\n```\nfrom marker.converters.pdf import PdfConverter\nfrom marker.models import create_model_dict\nfrom marker.config.parser import ConfigParser\nconfig = {\n  \"output_format\": \"json\",\n  \"ADDITIONAL_KEY\": \"VALUE\"\n}\nconfig_parser = ConfigParser(config)\nconverter = PdfConverter(\n  config=config_parser.generate_config_dict(),\n  artifact_dict=create_model_dict(),\n  processor_list=config_parser.get_processors(),\n  renderer=config_parser.get_renderer(),\n  llm_service=config_parser.get_llm_service()\n)\nrendered = converter(\"FILEPATH\")\n```\n\n### Extract blocks\n[](https://github.com/VikParuchuri/marker/#extract-blocks)\nEach document consists of one or more pages. Pages contain blocks, which can themselves contain other blocks. It's possible to programmatically manipulate these blocks.\nHere's an example of extracting all forms from a document:\n```\nfrom marker.converters.pdf import PdfConverter\nfrom marker.models import create_model_dict\nfrom marker.schema import BlockTypes\nconverter = PdfConverter(\n  artifact_dict=create_model_dict(),\n)\ndocument = converter.build_document(\"FILEPATH\")\nforms = document.contained_blocks((BlockTypes.Form,))\n```\n\nLook at the processors for more examples of extracting and manipulating blocks.\n## Other converters\n[](https://github.com/VikParuchuri/marker/#other-converters)\nYou can also use other converters that define different conversion pipelines:\n### Extract tables\n[](https://github.com/VikParuchuri/marker/#extract-tables)\nThe `TableConverter` will only convert and extract tables:\n```\nfrom marker.converters.table import TableConverter\nfrom marker.models import create_model_dict\nfrom marker.output import text_from_rendered\nconverter = TableConverter(\n  artifact_dict=create_model_dict(),\n)\nrendered = converter(\"FILEPATH\")\ntext, _, images = text_from_rendered(rendered)\n```\n\nThis takes all the same configuration as the PdfConverter. You can specify the configuration `force_layout_block=Table` to avoid layout detection and instead assume every page is a table. Set `output_format=json` to also get cell bounding boxes.\nYou can also run this via the CLI with\n```\nmarker_single FILENAME --use_llm --force_layout_block Table --converter_cls marker.converters.table.TableConverter --output_format json\n```\n\n# Output Formats\n[](https://github.com/VikParuchuri/marker/#output-formats)\n## Markdown\n[](https://github.com/VikParuchuri/marker/#markdown)\nMarkdown output will include:\n  * image links (images will be saved in the same folder)\n  * formatted tables\n  * embedded LaTeX equations (fenced with `$$`)\n  * Code is fenced with triple backticks\n  * Superscripts for footnotes\n\n\n## HTML\n[](https://github.com/VikParuchuri/marker/#html)\nHTML output is similar to markdown output:\n  * Images are included via `img` tags\n  * equations are fenced with `<math>` tags\n  * code is in `pre` tags\n\n\n## JSON\n[](https://github.com/VikParuchuri/marker/#json)\nJSON output will be organized in a tree-like structure, with the leaf nodes being blocks. Examples of leaf nodes are a single list item, a paragraph of text, or an image.\nThe output will be a list, with each list item representing a page. Each page is considered a block in the internal marker schema. There are different types of blocks to represent different elements.\nPages have the keys:\n  * `id` - unique id for the block.\n  * `block_type` - the type of block. The possible block types can be seen in `marker/schema/__init__.py`. As of this writing, they are [\"Line\", \"Span\", \"FigureGroup\", \"TableGroup\", \"ListGroup\", \"PictureGroup\", \"Page\", \"Caption\", \"Code\", \"Figure\", \"Footnote\", \"Form\", \"Equation\", \"Handwriting\", \"TextInlineMath\", \"ListItem\", \"PageFooter\", \"PageHeader\", \"Picture\", \"SectionHeader\", \"Table\", \"Text\", \"TableOfContents\", \"Document\"]\n  * `html` - the HTML for the page. Note that this will have recursive references to children. The `content-ref` tags must be replaced with the child content if you want the full html. You can see an example of this at `marker/output.py:json_to_html`. That function will take in a single block from the json output, and turn it into HTML.\n  * `polygon` - the 4-corner polygon of the page, in (x1,y1), (x2,y2), (x3, y3), (x4, y4) format. (x1,y1) is the top left, and coordinates go clockwise.\n  * `children` - the child blocks.\n\n\nThe child blocks have two additional keys:\n  * `section_hierarchy` - indicates the sections that the block is part of. `1` indicates an h1 tag, `2` an h2, and so on.\n  * `images` - base64 encoded images. The key will be the block id, and the data will be the encoded image.\n\n\nNote that child blocks of pages can have their own children as well (a tree structure).\n```\n{\n   \"id\": \"/page/10/Page/366\",\n   \"block_type\": \"Page\",\n   \"html\": \"<content-ref src='/page/10/SectionHeader/0'></content-ref><content-ref src='/page/10/SectionHeader/1'></content-ref><content-ref src='/page/10/Text/2'></content-ref><content-ref src='/page/10/Text/3'></content-ref><content-ref src='/page/10/Figure/4'></content-ref><content-ref src='/page/10/SectionHeader/5'></content-ref><content-ref src='/page/10/SectionHeader/6'></content-ref><content-ref src='/page/10/TextInlineMath/7'></content-ref><content-ref src='/page/10/TextInlineMath/8'></content-ref><content-ref src='/page/10/Table/9'></content-ref><content-ref src='/page/10/SectionHeader/10'></content-ref><content-ref src='/page/10/Text/11'></content-ref>\",\n   \"polygon\": [[0.0, 0.0], [612.0, 0.0], [612.0, 792.0], [0.0, 792.0]],\n   \"children\": [\n    {\n     \"id\": \"/page/10/SectionHeader/0\",\n     \"block_type\": \"SectionHeader\",\n     \"html\": \"<h1>Supplementary Material for <i>Subspace Adversarial Training</i> </h1>\",\n     \"polygon\": [\n      [217.845703125, 80.630859375], [374.73046875, 80.630859375],\n      [374.73046875, 107.0],\n      [217.845703125, 107.0]\n     ],\n     \"children\": null,\n     \"section_hierarchy\": {\n      \"1\": \"/page/10/SectionHeader/1\"\n     },\n     \"images\": {}\n    },\n    ...\n    ]\n  }\n\n```\n\n## Metadata\n[](https://github.com/VikParuchuri/marker/#metadata)\nAll output formats will return a metadata dictionary, with the following fields:\n```\n{\n  \"table_of_contents\": [\n   {\n    \"title\": \"Introduction\",\n    \"heading_level\": 1,\n    \"page_id\": 0,\n    \"polygon\": [...]\n   }\n  ], // computed PDF table of contents\n  \"page_stats\": [\n   {\n    \"page_id\": 0, \n    \"text_extraction_method\": \"pdftext\",\n    \"block_counts\": [(\"Span\", 200), ...]\n   },\n   ...\n  ]\n}\n```\n\n# LLM Services\n[](https://github.com/VikParuchuri/marker/#llm-services)\nWhen running with the `--use_llm` flag, you have a choice of services you can use:\n  * `Gemini` - this will use the Gemini developer API by default. You'll need to pass `--gemini_api_key` to configuration.\n  * `Google Vertex` - this will use vertex, which can be more reliable. You'll need to pass `--vertex_project_id`. To use it, set `--llm_service=marker.services.vertex.GoogleVertexService`.\n  * `Ollama` - this will use local models. You can configure `--ollama_base_url` and `--ollama_model`. To use it, set `--llm_service=marker.services.ollama.OllamaService`.\n  * `Claude` - this will use the anthropic API. You can configure `--claude_api_key`, and `--claude_model_name`. To use it, set `--llm_service=marker.services.claude.ClaudeService`.\n  * `OpenAI` - this supports any openai-like endpoint. You can configure `--openai_api_key`, `--openai_model`, and `--openai_base_url`. To use it, set `--llm_service=marker.services.openai.OpenAIService`.\n\n\nThese services may have additional optional configuration as well - you can see it by viewing the classes.\n# Internals\n[](https://github.com/VikParuchuri/marker/#internals)\nMarker is easy to extend. The core units of marker are:\n  * `Providers`, at `marker/providers`. These provide information from a source file, like a PDF.\n  * `Builders`, at `marker/builders`. These generate the initial document blocks and fill in text, using info from the providers.\n  * `Processors`, at `marker/processors`. These process specific blocks, for example the table formatter is a processor.\n  * `Renderers`, at `marker/renderers`. These use the blocks to render output.\n  * `Schema`, at `marker/schema`. The classes for all the block types.\n  * `Converters`, at `marker/converters`. They run the whole end to end pipeline.\n\n\nTo customize processing behavior, override the `processors`. To add new output formats, write a new `renderer`. For additional input formats, write a new `provider.`\nProcessors and renderers can be directly passed into the base `PDFConverter`, so you can specify your own custom processing easily.\n## API server\n[](https://github.com/VikParuchuri/marker/#api-server)\nThere is a very simple API server you can run like this:\n```\npip install -U uvicorn fastapi python-multipart\nmarker_server --port 8001\n```\n\nThis will start a fastapi server that you can access at `localhost:8001`. You can go to `localhost:8001/docs` to see the endpoint options.\nYou can send requests like this:\n```\nimport requests\nimport json\npost_data = {\n  'filepath': 'FILEPATH',\n  # Add other params here\n}\nrequests.post(\"http://localhost:8001/marker\", data=json.dumps(post_data)).json()\n\n```\n\nNote that this is not a very robust API, and is only intended for small-scale use. If you want to use this server, but want a more robust conversion option, you can use the hosted [Datalab API](https://www.datalab.to/plans).\n# Troubleshooting\n[](https://github.com/VikParuchuri/marker/#troubleshooting)\nThere are some settings that you may find useful if things aren't working the way you expect:\n  * If you have issues with accuracy, try setting `--use_llm` to use an LLM to improve quality. You must set `GOOGLE_API_KEY` to a Gemini API key for this to work.\n  * Make sure to set `force_ocr` if you see garbled text - this will re-OCR the document.\n  * `TORCH_DEVICE` - set this to force marker to use a given torch device for inference.\n  * If you're getting out of memory errors, decrease worker count. You can also try splitting up long PDFs into multiple files.\n\n\n## Debugging\n[](https://github.com/VikParuchuri/marker/#debugging)\nPass the `debug` option to activate debug mode. This will save images of each page with detected layout and text, as well as output a json file with additional bounding box information.\n# Benchmarks\n[](https://github.com/VikParuchuri/marker/#benchmarks)\n## Overall PDF Conversion\n[](https://github.com/VikParuchuri/marker/#overall-pdf-conversion)\nWe created a [benchmark set](https://huggingface.co/datasets/datalab-to/marker_benchmark) by extracting single PDF pages from common crawl. We scored based on a heuristic that aligns text with ground truth text segments, and an LLM as a judge scoring method.\nMethod | Avg Time | Heuristic Score | LLM Score  \n---|---|---|---  \nmarker | 2.83837 | 95.6709 | 4.23916  \nllamaparse | 23.348 | 84.2442 | 3.97619  \nmathpix | 6.36223 | 86.4281 | 4.15626  \ndocling | 3.69949 | 86.7073 | 3.70429  \nBenchmarks were run on an H100 for markjer and docling - llamaparse and mathpix used their cloud services. We can also look at it by document type:\n[![](https://github.com/VikParuchuri/marker/raw/master/data/images/per_doc.png)](https://github.com/VikParuchuri/marker/blob/master/data/images/per_doc.png)\nDocument Type | Marker heuristic | Marker LLM | Llamaparse Heuristic | Llamaparse LLM | Mathpix Heuristic | Mathpix LLM | Docling Heuristic | Docling LLM  \n---|---|---|---|---|---|---|---|---  \nScientific paper | 96.6737 | 4.34899 | 87.1651 | 3.96421 | 91.2267 | 4.46861 | 92.135 | 3.72422  \nBook page | 97.1846 | 4.16168 | 90.9532 | 4.07186 | 93.8886 | 4.35329 | 90.0556 | 3.64671  \nOther | 95.1632 | 4.25076 | 81.1385 | 4.01835 | 79.6231 | 4.00306 | 83.8223 | 3.76147  \nForm | 88.0147 | 3.84663 | 66.3081 | 3.68712 | 64.7512 | 3.33129 | 68.3857 | 3.40491  \nPresentation | 95.1562 | 4.13669 | 81.2261 | 4 | 83.6737 | 3.95683 | 84.8405 | 3.86331  \nFinancial document | 95.3697 | 4.39106 | 82.5812 | 4.16111 | 81.3115 | 4.05556 | 86.3882 | 3.8  \nLetter | 98.4021 | 4.5 | 93.4477 | 4.28125 | 96.0383 | 4.45312 | 92.0952 | 4.09375  \nEngineering document | 93.9244 | 4.04412 | 77.4854 | 3.72059 | 80.3319 | 3.88235 | 79.6807 | 3.42647  \nLegal document | 96.689 | 4.27759 | 86.9769 | 3.87584 | 91.601 | 4.20805 | 87.8383 | 3.65552  \nNewspaper page | 98.8733 | 4.25806 | 84.7492 | 3.90323 | 96.9963 | 4.45161 | 92.6496 | 3.51613  \nMagazine page | 98.2145 | 4.38776 | 87.2902 | 3.97959 | 93.5934 | 4.16327 | 93.0892 | 4.02041  \n## Throughput\n[](https://github.com/VikParuchuri/marker/#throughput)\nWe benchmarked throughput using a [single long PDF](https://www.greenteapress.com/thinkpython/thinkpython.pdf).\nMethod | Time per page | Time per document | VRAM used  \n---|---|---|---  \nmarker | 0.18 | 43.42 | 3.17GB  \nThe projected throughput is 122 pages per second on an H100 - we can run 22 individual processes given the VRAM used.\n## Table Conversion\n[](https://github.com/VikParuchuri/marker/#table-conversion)\nMarker can extract tables from PDFs using `marker.converters.table.TableConverter`. The table extraction performance is measured by comparing the extracted HTML representation of tables against the original HTML representations using the test split of [FinTabNet](https://developer.ibm.com/exchanges/data/all/fintabnet/). The HTML representations are compared using a tree edit distance based metric to judge both structure and content. Marker detects and identifies the structure of all tables in a PDF page and achieves these scores:\nMethod | Avg score | Total tables  \n---|---|---  \nmarker | 0.816 | 99  \nmarker w/use_llm | 0.907 | 99  \ngemini | 0.829 | 99  \nThe `--use_llm` flag can significantly improve table recognition performance, as you can see.\nWe filter out tables that we cannot align with the ground truth, since fintabnet and our layout model have slightly different detection methods (this results in some tables being split/merged).\n## Running your own benchmarks\n[](https://github.com/VikParuchuri/marker/#running-your-own-benchmarks)\nYou can benchmark the performance of marker on your machine. Install marker manually with:\n```\ngit clone https://github.com/VikParuchuri/marker.git\npoetry install\n```\n\n### Overall PDF Conversion\n[](https://github.com/VikParuchuri/marker/#overall-pdf-conversion-1)\nDownload the benchmark data [here](https://drive.google.com/file/d/1ZSeWDo2g1y0BRLT7KnbmytV2bjWARWba/view?usp=sharing) and unzip. Then run the overall benchmark like this:\n```\npython benchmarks/overall.py --methods marker --scores heuristic,llm\n```\n\nOptions:\n  * `--use_llm` use an llm to improve the marker results.\n  * `--max_rows` how many rows to process for the benchmark.\n  * `--methods` can be `llamaparse`, `mathpix`, `docling`, `marker`. Comma separated.\n  * `--scores` which scoring functions to use, can be `llm`, `heuristic`. Comma separated.\n\n\n### Table Conversion\n[](https://github.com/VikParuchuri/marker/#table-conversion-1)\nThe processed FinTabNet dataset is hosted [here](https://huggingface.co/datasets/datalab-to/fintabnet-test) and is automatically downloaded. Run the benchmark with:\n```\npython benchmarks/table/table.py --max_rows 100\n```\n\nOptions:\n  * `--use_llm` uses an llm with marker to improve accuracy.\n  * `--use_gemini` also benchmarks gemini 2.0 flash.\n\n\n# How it works\n[](https://github.com/VikParuchuri/marker/#how-it-works)\nMarker is a pipeline of deep learning models:\n  * Extract text, OCR if necessary (heuristics, [surya](https://github.com/VikParuchuri/surya))\n  * Detect page layout and find reading order ([surya](https://github.com/VikParuchuri/surya))\n  * Clean and format each block (heuristics, [texify](https://github.com/VikParuchuri/texify), [surya](https://github.com/VikParuchuri/surya))\n  * Optionally use an LLM to improve quality\n  * Combine blocks and postprocess complete text\n\n\nIt only uses models where necessary, which improves speed and accuracy.\n# Limitations\n[](https://github.com/VikParuchuri/marker/#limitations)\nPDF is a tricky format, so marker will not always work perfectly. Here are some known limitations that are on the roadmap to address:\n  * Very complex layouts, with nested tables and forms, may not work\n  * Forms may not be rendered well\n\n\nNote: Passing the `--use_llm` flag will mostly solve these issues.\n# Thanks\n[](https://github.com/VikParuchuri/marker/#thanks)\nThis work would not have been possible without amazing open source models and datasets, including (but not limited to):\n  * Surya\n  * Texify\n  * Pypdfium2/pdfium\n  * DocLayNet from IBM\n\n\nThank you to the authors of these models and datasets for making them available to the community!\n## About\nConvert PDF to markdown + JSON quickly with high accuracy \n[www.datalab.to](https://www.datalab.to \"https://www.datalab.to\")\n### Resources\n[ Readme ](https://github.com/VikParuchuri/marker/#readme-ov-file)\n### License\n[ GPL-3.0 license ](https://github.com/VikParuchuri/marker/#GPL-3.0-1-ov-file)\n[ Activity](https://github.com/VikParuchuri/marker/activity)\n### Stars\n[ **23.5k** stars](https://github.com/VikParuchuri/marker/stargazers)\n### Watchers\n[ **95** watching](https://github.com/VikParuchuri/marker/watchers)\n### Forks\n[ **1.5k** forks](https://github.com/VikParuchuri/marker/forks)\n[ Report repository ](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2FVikParuchuri%2Fmarker&report=VikParuchuri+%28user%29)\n##  [Releases 52](https://github.com/VikParuchuri/marker/releases)\n[ Bugfixes Latest  Mar 26, 2025 ](https://github.com/VikParuchuri/marker/releases/tag/v1.6.2)\n[+ 51 releases](https://github.com/VikParuchuri/marker/releases)\n##  [Packages 0](https://github.com/users/VikParuchuri/packages?repo_name=marker)\nNo packages published \n##  [Contributors 17](https://github.com/VikParuchuri/marker/graphs/contributors)\n[+ 3 contributors](https://github.com/VikParuchuri/marker/graphs/contributors)\n## Languages\n  * [ Python 97.9% ](https://github.com/VikParuchuri/marker/search?l=python)\n  * [ HTML 1.7% ](https://github.com/VikParuchuri/marker/search?l=html)\n  * [ Shell 0.4% ](https://github.com/VikParuchuri/marker/search?l=shell)\n\n\n## Footer\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n### Footer navigation\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": 0.6,
    "summary": null,
    "child_urls": [
        "https://github.com/VikParuchuri/marker/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2FVikParuchuri%2Fmarker%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/resources/whitepapers",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot/copilot-business",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=VikParuchuri%2Fmarker",
        "https://github.com/VikParuchuri",
        "https://github.com/VikParuchuri/marker",
        "https://github.com/login?return_to=%2FVikParuchuri%2Fmarker",
        "https://github.com/VikParuchuri/marker/blob/master/LICENSE",
        "https://github.com/VikParuchuri/marker/stargazers",
        "https://github.com/VikParuchuri/marker/forks",
        "https://github.com/VikParuchuri/marker/branches",
        "https://github.com/VikParuchuri/marker/tags",
        "https://github.com/VikParuchuri/marker/activity",
        "https://github.com/VikParuchuri/marker/issues",
        "https://github.com/VikParuchuri/marker/pulls",
        "https://github.com/VikParuchuri/marker/actions",
        "https://github.com/VikParuchuri/marker/projects",
        "https://github.com/VikParuchuri/marker/security",
        "https://github.com/VikParuchuri/marker/pulse",
        "https://github.com/VikParuchuri/marker/commits/master/",
        "https://github.com/VikParuchuri/marker/tree/master/.github/workflows",
        "https://github.com/VikParuchuri/marker/tree/master/benchmarks",
        "https://github.com/VikParuchuri/marker/tree/master/data",
        "https://github.com/VikParuchuri/marker/tree/master/marker",
        "https://github.com/VikParuchuri/marker/tree/master/signatures/version1",
        "https://github.com/VikParuchuri/marker/tree/master/static/fonts",
        "https://github.com/VikParuchuri/marker/tree/master/tests",
        "https://github.com/VikParuchuri/marker/blob/master/.gitignore",
        "https://github.com/VikParuchuri/marker/blob/master/.pre-commit-config.yaml",
        "https://github.com/VikParuchuri/marker/blob/master/CLA.md",
        "https://github.com/VikParuchuri/marker/blob/master/README.md",
        "https://github.com/VikParuchuri/marker/blob/master/chunk_convert.py",
        "https://github.com/VikParuchuri/marker/blob/master/convert.py",
        "https://github.com/VikParuchuri/marker/blob/master/convert_single.py",
        "https://github.com/VikParuchuri/marker/blob/master/marker_app.py",
        "https://github.com/VikParuchuri/marker/blob/master/marker_server.py",
        "https://github.com/VikParuchuri/marker/blob/master/poetry.lock",
        "https://github.com/VikParuchuri/marker/blob/master/pyproject.toml",
        "https://github.com/VikParuchuri/marker/blob/master/pytest.ini",
        "https://github.com/VikParuchuri/marker/",
        "https://github.com/VikParuchuri/marker/#marker",
        "https://github.com/VikParuchuri/marker/#performance",
        "https://github.com/VikParuchuri/marker/blob/master/data/images/overall.png",
        "https://github.com/VikParuchuri/marker/#benchmarks",
        "https://github.com/VikParuchuri/marker/#hybrid-mode",
        "https://github.com/VikParuchuri/marker/#llm-services",
        "https://github.com/VikParuchuri/marker/blob/master/data/images/table.png",
        "https://github.com/VikParuchuri/marker/#examples",
        "https://github.com/VikParuchuri/marker/blob/master/data/examples/markdown/thinkpython/thinkpython.md",
        "https://github.com/VikParuchuri/marker/blob/master/data/examples/json/thinkpython.json",
        "https://github.com/VikParuchuri/marker/blob/master/data/examples/markdown/switch_transformers/switch_trans.md",
        "https://github.com/VikParuchuri/marker/blob/master/data/examples/json/switch_trans.json",
        "https://github.com/VikParuchuri/marker/blob/master/data/examples/markdown/multicolcnn/multicolcnn.md",
        "https://github.com/VikParuchuri/marker/blob/master/data/examples/json/multicolcnn.json",
        "https://github.com/VikParuchuri/marker/#commercial-usage",
        "https://github.com/VikParuchuri/marker/#hosted-api",
        "https://github.com/VikParuchuri/marker/#community",
        "https://github.com/VikParuchuri/marker/#installation",
        "https://github.com/VikParuchuri/marker/#usage",
        "https://github.com/VikParuchuri/marker/#interactive-app",
        "https://github.com/VikParuchuri/marker/#convert-a-single-file",
        "https://github.com/VikParuchuri/surya/blob/master/surya/recognition/languages.py",
        "https://github.com/VikParuchuri/marker/#convert-multiple-files",
        "https://github.com/VikParuchuri/marker/#convert-multiple-files-on-multiple-gpus",
        "https://github.com/VikParuchuri/marker/#use-from-python",
        "https://github.com/VikParuchuri/marker/#custom-configuration",
        "https://github.com/VikParuchuri/marker/#extract-blocks",
        "https://github.com/VikParuchuri/marker/#other-converters",
        "https://github.com/VikParuchuri/marker/#extract-tables",
        "https://github.com/VikParuchuri/marker/#output-formats",
        "https://github.com/VikParuchuri/marker/#markdown",
        "https://github.com/VikParuchuri/marker/#html",
        "https://github.com/VikParuchuri/marker/#json",
        "https://github.com/VikParuchuri/marker/#metadata",
        "https://github.com/VikParuchuri/marker/#internals",
        "https://github.com/VikParuchuri/marker/#api-server",
        "https://github.com/VikParuchuri/marker/#troubleshooting",
        "https://github.com/VikParuchuri/marker/#debugging",
        "https://github.com/VikParuchuri/marker/#overall-pdf-conversion",
        "https://github.com/VikParuchuri/marker/blob/master/data/images/per_doc.png",
        "https://github.com/VikParuchuri/marker/#throughput",
        "https://github.com/VikParuchuri/marker/#table-conversion",
        "https://github.com/VikParuchuri/marker/#running-your-own-benchmarks",
        "https://github.com/VikParuchuri/marker/#overall-pdf-conversion-1",
        "https://github.com/VikParuchuri/marker/#table-conversion-1",
        "https://github.com/VikParuchuri/marker/#how-it-works",
        "https://github.com/VikParuchuri/surya",
        "https://github.com/VikParuchuri/texify",
        "https://github.com/VikParuchuri/marker/#limitations",
        "https://github.com/VikParuchuri/marker/#thanks",
        "https://github.com/VikParuchuri/marker/#readme-ov-file",
        "https://github.com/VikParuchuri/marker/#GPL-3.0-1-ov-file",
        "https://github.com/VikParuchuri/marker/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2FVikParuchuri%2Fmarker&report=VikParuchuri+%28user%29",
        "https://github.com/VikParuchuri/marker/releases",
        "https://github.com/VikParuchuri/marker/releases/tag/v1.6.2",
        "https://github.com/users/VikParuchuri/packages?repo_name=marker",
        "https://github.com/VikParuchuri/marker/graphs/contributors",
        "https://github.com/VikParuchuri/marker/search?l=python",
        "https://github.com/VikParuchuri/marker/search?l=html",
        "https://github.com/VikParuchuri/marker/search?l=shell",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://www.datalab.to",
        "https://greenteapress.com/thinkpython/thinkpython.pdf",
        "https://arxiv.org/pdf/2101.03961.pdf",
        "https://arxiv.org/pdf/1804.07821.pdf",
        "https://www.datalab.to/",
        "https://discord.gg//KuZwXNGnfH",
        "https://pytorch.org/get-started/locally/",
        "https://www.datalab.to/plans",
        "https://huggingface.co/datasets/datalab-to/marker_benchmark",
        "https://www.greenteapress.com/thinkpython/thinkpython.pdf",
        "https://developer.ibm.com/exchanges/data/all/fintabnet/",
        "https://drive.google.com/file/d/1ZSeWDo2g1y0BRLT7KnbmytV2bjWARWba/view?usp=sharing",
        "https://huggingface.co/datasets/datalab-to/fintabnet-test",
        "https://www.githubstatus.com/"
    ]
}